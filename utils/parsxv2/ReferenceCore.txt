parsx_symbol_state(161, TopLevel, TopLevel*)
parsx_symbol_state(164, QualID, QualID*)
parsx_symbol_state(170, TypeList, List<TypeList>)
parsx_symbol_state(189, Import, Import*)
parsx_symbol_state(207, Imports, List<Import>)
parsx_symbol_state(211, ElseExpr, Expr*)
parsx_symbol_state(220, MTypeBinder, Type*)
parsx_symbol_state(226, TypeList2, List<TypeList>)
parsx_symbol_state(232, FunctionBody, FunctionBody*)
parsx_symbol_state(248, TypeBinding, Type*)
parsx_symbol_state(253, Type, Type*)
parsx_symbol_state(256, SrcMarker, SrcLoc)
parsx_symbol_state(266, ParamGroup, ParamGroup*)
parsx_symbol_state(284, Initializer, Expr*)
parsx_symbol_state(290, Names, List<Name>)
parsx_symbol_state(299, Module, Module*)
parsx_symbol_state(316, TypeReference, WithSrcLoc<TypeReferenceNode*>)
parsx_symbol_state(319, ExprList, List<ExprList>)
parsx_symbol_state(321, TypePrim, Type*)
parsx_symbol_state(325, Stmts, List<Stmt>)
parsx_symbol_state(329, ImportAs, StringRef)
parsx_symbol_state(341, TopLevels, List<TopLevel>)
parsx_symbol_state(365, Expr, Expr*)
parsx_symbol_state(367, ExprPrim, Expr*)
parsx_symbol_state(379, FunctionSignature, FunctionSignature*)
parsx_symbol_state(403, ParamGroups, List<ParamGroup>)
parsx_symbol_state(413, TypeUnion, List<TypeList>)
#if defined(parsx_impl)
const parsx_token_id parsx_token_ids[] = {parsx_invalid_token,
	parsx_token(KAnd),
	parsx_token(KFalse),
	parsx_token(OGE),
	parsx_token(KInt),
	parsx_token(KFloat),
	parsx_token(NumberLiteral),
	parsx_token(KNot),
	parsx_token(KAs),
	parsx_token(OColon),
	parsx_token(OVBar),
	parsx_token(KNull),
	parsx_token(StringLiteral),
	parsx_token(KUnit),
	parsx_token(KIf),
	parsx_token(KUndef),
	parsx_token(KEnd),
	parsx_token(KStruct),
	parsx_token(ORParen),
	parsx_token(OLParen),
	parsx_token(OPlus),
	parsx_token(OMult),
	parsx_token(OMinus),
	parsx_token(OComma),
	parsx_token(ODiv),
	parsx_token(OPeriod),
	parsx_token(ONE),
	parsx_token(KBool),
	parsx_token(KElseIf),
	parsx_token(KImport),
	parsx_token(OSemicolon),
	parsx_token(OAssign),
	parsx_token(OLT),
	parsx_token(OQuestion),
	parsx_token(OGT),
	parsx_token(KFunction),
	parsx_token(KThen),
	parsx_token(KGlobal),
	parsx_token(KString),
	parsx_token(OEQ),
	parsx_token(KEnum),
	parsx_token(KElse),
	parsx_token(OLE),
	parsx_token(EndOfFile),
	parsx_token(KInterface),
	parsx_token(ORem),
	parsx_token(KTrue),
	parsx_token(KClass),
	parsx_token(KDouble),
	parsx_token(KBytes),
	parsx_token(OArrow),
	parsx_token(OLBrace),
	parsx_token(Identifier),
	parsx_token(ORBrace),
	parsx_token(KOr),
};
const State parsx_state_table[] = {0,
	153,33,89,346,153,50,353,106,169,153,10,322,151,157,81,153,81,
	154,23,253,135,272,50,353,91,154,18,139,300,
	155,23,253,135,272,50,353,91,206,155,18,139,192,
	156,25,381,156,156,126,
	157,10,322,140,157,157,108,
	158,33,89,158,158,50,353,106,345,158,10,322,151,157,331,158,23,253,135,272,50,353,91,206,158,18,139,192,
	159,10,322,151,157,81,159,81,
	160,33,89,160,160,50,353,106,239,160,10,322,151,157,81,160,81,
	161,35,52,19,403,18,220,146,111,232,115,110,105,161,37,52,60,337,9,253,61,111,31,365,77,115,143,128,
	162,23,253,135,272,50,353,91,162,18,139,300,
	163,1,269,141,163,163,9,253,107,424,163,54,342,72,424,163,84,
	164,52,100,270,
	165,33,89,165,165,50,353,106,409,165,10,322,151,157,265,165,23,253,135,272,50,353,91,206,165,18,139,192,
	166,129,352,166,60,307,253,95,
	167,10,322,151,157,167,
	168,33,89,168,168,50,353,106,360,168,10,322,151,157,81,168,81,
	169,10,322,151,157,81,169,81,
	170,5,122,326,70,434,170,38,145,252,70,434,170,13,88,171,70,434,170,49,87,179,70,434,170,52,129,305,70,434,170,15,62,418,70,434,170,27,131,289,70,434,170,51,333,70,434,170,19,340,70,434,170,4,132,324,70,434,170,48,119,244,70,434,170,148,
	171,33,89,196,171,50,353,106,167,171,10,322,151,157,171,
	172,33,89,375,172,50,353,106,225,172,10,322,151,157,81,172,81,
	173,10,322,151,157,303,173,23,253,135,272,50,353,91,206,173,18,139,192,
	174,33,89,315,174,50,353,106,439,174,10,322,151,157,162,174,23,253,135,272,50,353,91,174,18,139,300,
	175,33,89,431,175,50,353,106,257,175,10,322,151,157,408,175,23,253,135,272,50,353,91,206,175,18,139,192,
	176,33,89,176,176,50,353,106,195,176,10,322,151,157,177,176,23,253,135,272,50,353,91,176,18,139,300,
	177,23,253,135,272,50,353,91,177,18,139,300,
	178,33,89,178,178,50,353,106,281,178,10,322,151,157,438,178,23,253,135,272,50,353,91,180,178,18,139,425,
	179,33,89,231,179,50,353,106,246,179,10,322,151,157,179,
	180,10,322,151,157,81,180,81,
	181,33,89,181,181,50,353,106,442,181,10,322,151,157,400,181,23,253,135,272,50,353,91,206,181,18,139,192,
	182,33,89,182,182,50,353,106,294,182,10,322,151,157,429,182,23,253,135,272,50,353,91,182,18,139,300,
	183,33,89,183,183,50,353,106,250,183,10,322,151,157,369,183,23,253,135,272,50,353,91,180,183,18,139,425,
	184,5,122,326,70,415,205,184,38,145,252,70,415,205,184,13,88,171,70,415,205,184,49,87,179,70,415,205,184,52,129,305,70,415,205,184,15,62,418,70,415,205,184,27,131,289,70,415,205,184,51,333,70,415,205,184,19,340,70,415,205,184,4,132,324,70,415,205,184,48,119,244,70,415,205,184,148,53,124,286,205,
	185,33,89,185,185,50,353,106,334,185,10,322,151,157,81,185,81,
	186,10,322,151,157,81,186,81,
	187,33,89,428,187,50,353,106,255,187,10,322,151,157,276,187,23,253,135,272,50,353,91,206,187,18,139,192,
	188,33,89,200,188,50,353,106,432,188,10,322,151,157,81,188,81,
	189,58,29,52,100,270,329,76,
	190,23,253,135,272,50,353,91,180,190,18,139,425,
	191,23,266,152,191,191,
	192,33,89,385,192,50,353,106,243,192,10,322,151,157,192,
	193,25,238,193,193,19,319,18,66,398,193,21,376,142,213,193,24,376,57,213,193,45,376,103,213,193,20,357,121,260,193,22,357,86,260,193,39,395,63,414,193,26,395,130,414,193,42,395,114,414,193,3,395,68,414,193,32,395,80,414,193,34,395,123,414,193,1,269,141,414,193,
	194,23,365,71,194,194,
	195,10,322,151,157,177,195,23,253,135,272,50,353,91,195,18,139,300,
	196,33,89,196,196,50,353,106,167,196,10,322,151,157,196,
	197,23,253,135,272,50,353,91,197,18,139,300,
	198,5,122,427,198,38,145,344,198,52,129,305,154,198,49,87,380,198,18,50,353,56,198,19,441,198,27,131,387,198,51,426,198,15,62,433,198,13,88,440,198,48,119,174,198,4,132,204,
	199,33,89,199,199,50,353,106,406,199,10,322,151,157,209,199,23,253,135,272,50,353,91,180,199,18,139,425,
	200,33,89,200,200,50,353,106,432,200,10,322,151,157,81,200,81,
	201,33,89,201,201,50,353,106,282,201,10,322,151,157,242,201,23,253,135,272,50,353,91,180,201,18,139,425,
	202,5,122,261,410,202,38,145,263,410,202,52,129,305,155,410,202,49,87,444,410,202,18,50,353,56,233,202,19,338,410,202,27,131,175,410,202,51,323,410,202,15,62,293,410,202,13,88,309,410,202,48,119,187,410,202,4,132,388,410,
	203,33,89,199,203,50,353,106,406,203,10,322,151,157,209,203,23,253,135,272,50,353,91,180,203,18,139,425,
	204,33,89,241,204,50,353,106,373,204,10,322,151,157,197,204,23,253,135,272,50,353,91,204,18,139,300,
	205,23,253,135,272,50,353,91,180,205,18,139,425,
	206,10,322,151,157,206,
	207,79,402,
	208,23,253,135,272,50,353,91,208,18,139,300,
	209,23,253,135,272,50,353,91,180,209,18,139,425,
	210,25,238,210,210,19,319,18,66,411,210,21,376,142,417,210,24,376,57,417,210,45,376,103,417,210,20,357,121,371,210,22,357,86,371,210,
	211,41,365,16,69,211,28,365,36,365,211,133,
	212,10,322,151,157,283,212,23,253,135,272,50,353,91,212,18,139,300,
	213,21,376,142,213,213,24,376,57,213,213,45,376,103,213,213,20,357,121,260,213,22,357,86,260,213,39,395,63,414,213,26,395,130,414,213,42,395,114,414,213,3,395,68,414,213,32,395,80,414,213,34,395,123,414,213,1,269,141,414,213,
	214,23,253,135,272,50,353,91,214,18,139,300,
	215,33,89,215,215,50,353,106,212,215,10,322,151,157,283,215,23,253,135,272,50,353,91,215,18,139,300,
	216,10,322,151,157,216,
	217,7,269,120,399,217,13,112,399,217,46,127,399,217,2,96,399,217,11,116,399,217,12,82,399,217,6,55,399,217,52,85,399,217,22,217,99,399,217,14,365,36,365,211,104,399,217,19,365,18,147,399,
	218,19,319,18,66,218,218,21,376,142,245,218,24,376,57,245,218,45,376,103,245,218,20,357,121,275,218,22,357,86,275,218,39,395,63,314,218,26,395,130,314,218,42,395,114,314,218,3,395,68,314,218,32,395,80,314,218,34,395,123,314,218,1,269,141,314,218,9,253,107,247,218,54,342,72,247,218,74,
	219,33,89,219,219,50,353,106,297,219,10,322,151,157,298,219,23,253,135,272,50,353,91,180,219,18,139,425,
	220,113,220,9,253,134,
	221,33,89,287,221,50,353,106,317,221,10,322,151,157,320,221,23,253,135,272,50,353,91,180,221,18,139,425,
	222,33,89,219,222,50,353,106,297,222,10,322,151,157,298,222,23,253,135,272,50,353,91,180,222,18,139,425,
	223,33,89,404,223,50,353,106,350,223,10,322,151,157,190,223,23,253,135,272,50,353,91,180,223,18,139,425,
	224,33,89,160,224,50,353,106,239,224,10,322,151,157,81,224,81,
	225,10,322,151,157,81,225,81,
	226,5,122,326,23,253,135,397,226,38,145,252,23,253,135,397,226,13,88,171,23,253,135,397,226,49,87,179,23,253,135,397,226,52,129,305,23,253,135,397,226,15,62,418,23,253,135,397,226,27,131,289,23,253,135,397,226,51,333,23,253,135,397,226,19,340,23,253,135,397,226,4,132,324,23,253,135,397,226,48,119,244,23,253,135,397,
	227,19,319,18,66,227,227,21,376,142,304,227,24,376,57,304,227,45,376,103,304,227,
	228,21,376,142,228,228,24,376,57,228,228,45,376,103,228,228,20,357,121,277,228,22,357,86,277,228,39,395,63,163,228,26,395,130,163,228,42,395,114,163,228,3,395,68,163,228,32,395,80,163,228,34,395,123,163,228,1,269,141,163,228,9,253,107,424,228,54,342,72,424,228,84,
	229,33,89,229,229,50,353,106,280,229,10,322,151,157,235,229,23,253,135,272,50,353,91,206,229,18,139,192,
	230,33,89,230,230,50,353,106,10,230,10,
	231,33,89,231,231,50,353,106,246,231,10,322,151,157,231,
	232,29,12,144,232,58,325,16,137,
	233,10,322,151,157,410,233,23,253,135,272,50,353,91,180,233,18,139,425,
	234,1,269,141,234,234,9,253,107,268,234,54,342,72,268,234,84,
	235,23,253,135,272,50,353,91,206,235,18,139,192,
	236,25,381,236,236,
	237,33,89,201,237,50,353,106,282,237,10,322,151,157,242,237,23,253,135,272,50,353,91,180,237,18,139,425,
	238,52,93,238,32,170,34,83,
	239,10,322,151,157,81,239,81,
	240,23,253,135,272,50,353,91,240,18,139,300,
	241,33,89,241,241,50,353,106,373,241,10,322,151,157,197,241,23,253,135,272,50,353,91,241,18,139,300,
	242,23,253,135,272,50,353,91,180,242,18,139,425,
	243,10,322,151,157,243,
	244,33,89,355,244,50,353,106,279,244,10,322,151,157,244,
	245,21,376,142,245,245,24,376,57,245,245,45,376,103,245,245,20,357,121,275,245,22,357,86,275,245,39,395,63,314,245,26,395,130,314,245,42,395,114,314,245,3,395,68,314,245,32,395,80,314,245,34,395,123,314,245,1,269,141,314,245,9,253,107,247,245,54,342,72,247,245,74,
	246,10,322,151,157,246,
	247,9,253,107,247,247,54,342,72,247,247,74,
	248,9,253,61,
	249,33,89,311,249,50,353,106,378,249,10,322,151,157,249,
	250,10,322,151,157,369,250,23,253,135,272,50,353,91,180,250,18,139,425,
	251,10,322,151,157,363,251,23,253,135,272,50,353,91,206,251,18,139,192,
	252,33,89,264,252,50,353,106,216,252,10,322,151,157,252,
	253,5,122,326,253,38,145,252,253,13,88,171,253,49,87,179,253,52,129,305,253,15,62,418,253,27,131,289,253,51,333,253,19,340,253,4,132,324,253,48,119,244,
	254,10,322,151,157,254,
	255,10,322,151,157,276,255,23,253,135,272,50,353,91,206,255,18,139,192,
	256,58,
	257,10,322,151,157,408,257,23,253,135,272,50,353,91,206,257,18,139,192,
	258,19,319,18,66,258,258,
	259,23,253,64,259,259,53,124,328,
	260,20,357,121,260,260,22,357,86,260,260,39,395,63,414,260,26,395,130,414,260,42,395,114,414,260,3,395,68,414,260,32,395,80,414,260,34,395,123,414,260,1,269,141,414,260,
	261,33,89,396,261,50,353,106,251,261,10,322,151,157,363,261,23,253,135,272,50,353,91,206,261,18,139,192,
	262,25,238,262,262,19,319,18,66,227,262,21,376,142,304,262,24,376,57,304,262,45,376,103,304,262,
	263,33,89,377,263,50,353,106,173,263,10,322,151,157,303,263,23,253,135,272,50,353,91,206,263,18,139,192,
	264,33,89,264,264,50,353,106,216,264,10,322,151,157,264,
	265,23,253,135,272,50,353,91,206,265,18,139,192,
	266,5,122,419,266,38,145,383,266,13,88,153,266,49,87,382,266,15,62,172,266,27,131,188,266,51,420,266,19,405,266,52,166,266,48,119,224,266,4,132,296,
	267,35,52,19,403,18,220,146,111,232,115,110,105,73,267,267,37,52,60,337,9,253,61,111,31,365,77,115,143,128,73,267,267,
	268,9,253,107,268,268,54,342,72,268,268,84,
	269,7,269,120,302,269,13,112,302,269,46,127,302,269,2,96,302,269,11,116,302,269,12,82,302,269,6,55,302,269,52,85,302,269,22,217,99,302,269,14,365,36,365,211,104,302,269,19,365,18,147,302,
	270,25,52,118,270,270,
	271,10,322,151,157,285,271,23,253,135,272,50,353,91,271,18,139,300,
	272,23,253,59,272,272,18,
	273,25,381,273,273,126,278,
	274,33,89,274,274,50,353,106,392,274,10,322,151,157,81,274,81,
	275,20,357,121,275,275,22,357,86,275,275,39,395,63,314,275,26,395,130,314,275,42,395,114,314,275,3,395,68,314,275,32,395,80,314,275,34,395,123,314,275,1,269,141,314,275,9,253,107,247,275,54,342,72,247,275,74,
	276,23,253,135,272,50,353,91,206,276,18,139,192,
	277,20,357,121,277,277,22,357,86,277,277,39,395,63,163,277,26,395,130,163,277,42,395,114,163,277,3,395,68,163,277,32,395,80,163,277,34,395,123,163,277,1,269,141,163,277,9,253,107,424,277,54,342,72,424,277,84,
	278,33,89,422,278,50,353,106,421,278,10,322,151,157,81,278,81,
	279,10,322,151,157,279,
	280,10,322,151,157,235,280,23,253,135,272,50,353,91,206,280,18,139,192,
	281,10,322,151,157,438,281,23,253,135,272,50,353,91,180,281,18,139,425,
	282,10,322,151,157,242,282,23,253,135,272,50,353,91,180,282,18,139,425,
	283,23,253,135,272,50,353,91,283,18,139,300,
	284,31,365,77,
	285,23,253,135,272,50,353,91,285,18,139,300,
	286,33,89,306,286,50,353,106,372,286,10,322,151,157,286,
	287,33,89,287,287,50,353,106,317,287,10,322,151,157,320,287,23,253,135,272,50,353,91,180,287,18,139,425,
	288,10,322,151,157,288,
	289,33,89,389,289,50,353,106,288,289,10,322,151,157,289,
	290,52,60,337,
	291,33,89,291,291,50,353,106,313,291,10,322,151,157,291,
	292,33,89,292,292,50,353,106,308,292,10,322,151,157,81,292,81,
	293,33,89,158,293,50,353,106,345,293,10,322,151,157,331,293,23,253,135,272,50,353,91,206,293,18,139,192,
	294,10,322,151,157,429,294,23,253,135,272,50,353,91,294,18,139,300,
	295,25,381,295,295,126,249,
	296,33,89,292,296,50,353,106,308,296,10,322,151,157,81,296,81,
	297,10,322,151,157,298,297,23,253,135,272,50,353,91,180,297,18,139,425,
	298,23,253,135,272,50,353,91,180,298,18,139,425,
	299,79,348,43,67,
	300,33,89,300,300,50,353,106,300,
	301,20,357,121,301,301,22,357,86,301,301,39,395,63,407,301,26,395,130,407,301,42,395,114,407,301,3,395,68,407,301,32,395,80,407,301,34,395,123,407,301,1,269,141,407,301,9,253,107,366,301,54,342,72,366,301,
	302,25,238,302,302,19,319,18,66,384,302,21,376,142,336,302,24,376,57,336,302,45,376,103,336,302,20,357,121,347,302,22,357,86,347,302,39,395,63,302,26,395,130,302,42,395,114,302,3,395,68,302,32,395,80,302,34,395,123,302,
	303,23,253,135,272,50,353,91,206,303,18,139,192,
	304,21,376,142,304,304,24,376,57,304,304,45,376,103,304,304,
	305,25,381,295,305,126,249,
	306,33,89,306,306,50,353,106,372,306,10,322,151,157,306,
	307,52,125,307,307,9,
	308,10,322,151,157,81,308,81,
	309,33,89,165,309,50,353,106,409,309,10,322,151,157,265,309,23,253,135,272,50,353,91,206,309,18,139,192,
	310,10,322,140,310,310,
	311,33,89,311,311,50,353,106,378,311,10,322,151,157,311,
	312,21,376,142,312,312,24,376,57,312,312,45,376,103,312,312,20,357,121,401,312,22,357,86,401,312,39,395,63,234,312,26,395,130,234,312,42,395,114,234,312,3,395,68,234,312,32,395,80,234,312,34,395,123,234,312,1,269,141,234,312,9,253,107,268,312,54,342,72,268,312,84,
	313,10,322,151,157,313,
	314,1,269,141,314,314,9,253,107,247,314,54,342,72,247,314,74,
	315,33,89,315,315,50,353,106,439,315,10,322,151,157,162,315,23,253,135,272,50,353,91,315,18,139,300,
	316,52,129,236,
	317,10,322,151,157,320,317,23,253,135,272,50,353,91,180,317,18,139,425,
	318,10,322,151,157,208,318,23,253,135,272,50,353,91,318,18,139,300,
	319,98,194,319,7,269,120,335,194,319,13,112,335,194,319,46,127,335,194,319,2,96,335,194,319,11,116,335,194,319,12,82,335,194,319,6,55,335,194,319,52,85,335,194,319,22,217,99,335,194,319,14,365,36,365,211,104,335,194,319,19,365,18,147,335,194,
	320,23,253,135,272,50,353,91,180,320,18,139,425,
	321,13,88,321,15,62,321,27,131,321,4,132,321,5,122,321,48,119,321,38,145,321,49,87,321,52,129,156,321,51,170,53,124,
	322,5,122,300,322,38,145,300,322,13,88,300,322,49,87,300,322,52,129,156,300,322,15,62,300,322,27,131,300,322,51,170,53,124,300,322,19,198,322,4,132,300,322,48,119,300,
	323,5,122,326,70,415,374,323,38,145,252,70,415,374,323,13,88,171,70,415,374,323,49,87,179,70,415,374,323,52,129,305,70,415,374,323,15,62,418,70,415,374,323,27,131,289,70,415,374,323,51,333,70,415,374,323,19,340,70,415,374,323,4,132,324,70,415,374,323,48,119,244,70,415,374,323,148,53,124,286,374,
	324,33,89,291,324,50,353,106,313,324,10,322,151,157,324,
	325,7,269,120,343,75,327,325,13,112,343,75,327,325,46,127,343,75,327,325,2,96,343,75,327,325,11,116,343,75,327,325,12,82,343,75,327,325,6,55,343,75,327,325,52,85,343,75,327,325,22,217,99,343,75,327,325,14,365,36,365,211,104,343,75,327,325,19,365,18,147,343,75,327,325,136,
	326,33,89,435,326,50,353,106,354,326,10,322,151,157,326,
	327,7,269,120,332,94,327,327,13,112,332,94,327,327,46,127,332,94,327,327,2,96,332,94,327,327,11,116,332,94,327,327,12,82,332,94,327,327,6,55,332,94,327,327,52,85,332,94,327,327,30,109,327,327,
	328,33,89,168,328,50,353,106,360,328,10,322,151,157,81,328,81,
	329,8,52,138,329,90,
	330,10,322,151,157,437,330,23,253,135,272,50,353,91,330,18,139,300,
	331,23,253,135,272,50,353,91,206,331,18,139,192,
	332,25,390,332,332,19,319,18,66,364,332,21,376,142,312,332,24,376,57,312,332,45,376,103,312,332,20,357,121,401,332,22,357,86,401,332,39,395,63,234,332,26,395,130,234,332,42,395,114,234,332,3,395,68,234,332,32,395,80,234,332,34,395,123,234,332,1,269,141,234,332,9,253,107,268,332,54,342,72,268,332,84,
	333,5,122,326,70,415,333,38,145,252,70,415,333,13,88,171,70,415,333,49,87,179,70,415,333,52,129,305,70,415,333,15,62,418,70,415,333,27,131,289,70,415,333,51,333,70,415,333,19,340,70,415,333,4,132,324,70,415,333,48,119,244,70,415,333,148,53,124,286,
	334,10,322,151,157,81,334,81,
	335,25,238,335,335,19,319,18,66,218,335,21,376,142,245,335,24,376,57,245,335,45,376,103,245,335,20,357,121,275,335,22,357,86,275,335,39,395,63,314,335,26,395,130,314,335,42,395,114,314,335,3,395,68,314,335,32,395,80,314,335,34,395,123,314,335,1,269,141,314,335,9,253,107,247,335,54,342,72,247,335,74,
	336,21,376,142,336,336,24,376,57,336,336,45,376,103,336,336,20,357,121,347,336,22,357,86,347,336,39,395,63,336,26,395,130,336,42,395,114,336,3,395,68,336,32,395,80,336,34,395,123,336,
	337,52,125,337,337,
	338,5,122,261,386,338,38,145,263,386,338,52,129,305,155,386,338,49,87,444,386,338,18,50,353,56,349,338,19,338,386,338,27,131,175,386,338,51,323,386,338,15,62,293,386,338,13,88,309,386,338,48,119,187,386,338,4,132,388,386,
	339,33,89,339,339,50,353,106,159,339,10,322,151,157,81,339,81,
	340,5,122,261,340,38,145,263,340,52,129,305,155,340,49,87,444,340,18,50,353,56,206,340,19,338,340,27,131,175,340,51,323,340,15,62,293,340,13,88,309,340,48,119,187,340,4,132,388,
	341,65,267,
	342,7,269,120,193,342,13,112,193,342,46,127,193,342,2,96,193,342,11,116,193,342,12,82,193,342,6,55,193,342,52,85,193,342,22,217,99,193,342,14,365,36,365,211,104,193,342,19,365,18,147,193,
	343,25,238,343,343,19,319,18,66,393,343,21,376,142,228,343,24,376,57,228,343,45,376,103,228,343,20,357,121,277,343,22,357,86,277,343,39,395,63,163,343,26,395,130,163,343,42,395,114,163,343,3,395,68,163,343,32,395,80,163,343,34,395,123,163,343,1,269,141,163,343,9,253,107,424,343,54,342,72,424,343,84,
	344,33,89,361,344,50,353,106,330,344,10,322,151,157,437,344,23,253,135,272,50,353,91,344,18,139,300,
	345,10,322,151,157,331,345,23,253,135,272,50,353,91,206,345,18,139,192,
	346,33,89,346,346,50,353,106,169,346,10,322,151,157,81,346,81,
	347,20,357,121,347,347,22,357,86,347,347,39,395,63,347,26,395,130,347,42,395,114,347,3,395,68,347,32,395,80,347,34,395,123,347,
	348,58,29,52,100,270,329,76,78,348,348,65,267,
	349,10,322,151,157,386,349,23,253,135,272,50,353,91,206,349,18,139,192,
	350,10,322,151,157,190,350,23,253,135,272,50,353,91,180,350,18,139,425,
	351,23,253,135,272,50,353,91,180,351,18,139,425,
	352,25,381,273,352,126,278,
	353,5,122,300,353,38,145,300,353,13,88,300,353,49,87,300,353,52,129,156,300,353,15,62,300,353,27,131,300,353,51,170,53,124,300,353,19,198,353,4,132,300,353,48,119,300,
	354,10,322,151,157,354,
	355,33,89,355,355,50,353,106,279,355,10,322,151,157,355,
	356,25,238,356,356,19,319,18,66,391,356,21,376,142,423,356,24,376,57,423,356,45,376,103,423,356,20,357,121,301,356,22,357,86,301,356,39,395,63,407,356,26,395,130,407,356,42,395,114,407,356,3,395,68,407,356,32,395,80,407,356,34,395,123,407,356,1,269,141,407,356,9,253,107,366,356,54,342,72,366,356,
	357,7,269,120,262,357,13,112,262,357,46,127,262,357,2,96,262,357,11,116,262,357,12,82,262,357,6,55,262,357,52,85,262,357,22,217,99,262,357,14,365,36,365,211,104,262,357,19,365,18,147,262,
	358,33,89,358,358,50,353,106,254,358,10,322,151,157,358,
	359,33,89,183,359,50,353,106,250,359,10,322,151,157,369,359,23,253,135,272,50,353,91,180,359,18,139,425,
	360,10,322,151,157,81,360,81,
	361,33,89,361,361,50,353,106,330,361,10,322,151,157,437,361,23,253,135,272,50,353,91,361,18,139,300,
	362,23,253,135,272,50,353,91,180,362,18,139,425,
	363,23,253,135,272,50,353,91,206,363,18,139,192,
	364,19,319,18,66,364,364,21,376,142,312,364,24,376,57,312,364,45,376,103,312,364,20,357,121,401,364,22,357,86,401,364,39,395,63,234,364,26,395,130,234,364,42,395,114,234,364,3,395,68,234,364,32,395,80,234,364,34,395,123,234,364,1,269,141,234,364,9,253,107,268,364,54,342,72,268,364,84,
	365,7,269,120,356,365,13,112,356,365,46,127,356,365,2,96,356,365,11,116,356,365,12,82,356,365,6,55,356,365,52,85,356,365,22,217,99,356,365,14,365,36,365,211,104,356,365,19,365,18,147,356,
	366,9,253,107,366,366,54,342,72,366,366,
	367,13,112,367,46,127,367,2,96,367,11,116,367,12,82,367,6,55,367,52,85,
	368,33,89,178,368,50,353,106,281,368,10,322,151,157,438,368,23,253,135,272,50,353,91,180,368,18,139,425,
	369,23,253,135,272,50,353,91,180,369,18,139,425,
	370,33,89,370,370,50,353,106,186,370,10,322,151,157,81,370,81,
	371,20,357,121,371,371,22,357,86,371,371,
	372,10,322,151,157,372,
	373,10,322,151,157,197,373,23,253,135,272,50,353,91,373,18,139,300,
	374,23,253,135,272,50,353,91,206,374,18,139,192,
	375,33,89,375,375,50,353,106,225,375,10,322,151,157,81,375,81,
	376,7,269,120,399,376,13,112,399,376,46,127,399,376,2,96,399,376,11,116,399,376,12,82,399,376,6,55,399,376,52,85,399,376,22,217,99,399,376,14,365,36,365,211,104,399,376,19,365,18,147,399,
	377,33,89,377,377,50,353,106,173,377,10,322,151,157,303,377,23,253,135,272,50,353,91,206,377,18,139,192,
	378,10,322,151,157,378,
	379,19,403,18,220,146,
	380,33,89,412,380,50,353,106,394,380,10,322,151,157,214,380,23,253,135,272,50,353,91,380,18,139,300,
	381,52,92,381,32,170,34,117,381,26,101,
	382,33,89,274,382,50,353,106,392,382,10,322,151,157,81,382,81,
	383,33,89,339,383,50,353,106,159,383,10,322,151,157,81,383,81,
	384,19,319,18,66,384,384,21,376,142,336,384,24,376,57,336,384,45,376,103,336,384,20,357,121,347,384,22,357,86,347,384,39,395,63,384,26,395,130,384,42,395,114,384,3,395,68,384,32,395,80,384,34,395,123,384,
	385,33,89,385,385,50,353,106,243,385,10,322,151,157,385,
	386,23,253,135,272,50,353,91,206,386,18,139,192,
	387,33,89,176,387,50,353,106,195,387,10,322,151,157,177,387,23,253,135,272,50,353,91,387,18,139,300,
	388,33,89,181,388,50,353,106,442,388,10,322,151,157,400,388,23,253,135,272,50,353,91,206,388,18,139,192,
	389,33,89,389,389,50,353,106,288,389,10,322,151,157,389,
	390,52,93,390,32,170,34,83,
	391,19,319,18,66,391,391,21,376,142,423,391,24,376,57,423,391,45,376,103,423,391,20,357,121,301,391,22,357,86,301,391,39,395,63,407,391,26,395,130,407,391,42,395,114,407,391,3,395,68,407,391,32,395,80,407,391,34,395,123,407,391,1,269,141,407,391,9,253,107,366,391,54,342,72,366,391,
	392,10,322,151,157,81,392,81,
	393,19,319,18,66,393,393,21,376,142,228,393,24,376,57,228,393,45,376,103,228,393,20,357,121,277,393,22,357,86,277,393,39,395,63,163,393,26,395,130,163,393,42,395,114,163,393,3,395,68,163,393,32,395,80,163,393,34,395,123,163,393,1,269,141,163,393,9,253,107,424,393,54,342,72,424,393,84,
	394,10,322,151,157,214,394,23,253,135,272,50,353,91,394,18,139,300,
	395,7,269,120,210,395,13,112,210,395,46,127,210,395,2,96,210,395,11,116,210,395,12,82,210,395,6,55,210,395,52,85,210,395,22,217,99,210,395,14,365,36,365,211,104,210,395,19,365,18,147,210,
	396,33,89,396,396,50,353,106,251,396,10,322,151,157,363,396,23,253,135,272,50,353,91,206,396,18,139,192,
	397,23,253,59,397,397,
	398,19,319,18,66,398,398,21,376,142,213,398,24,376,57,213,398,45,376,103,213,398,20,357,121,260,398,22,357,86,260,398,39,395,63,414,398,26,395,130,414,398,42,395,114,414,398,3,395,68,414,398,32,395,80,414,398,34,395,123,414,398,1,269,141,414,398,
	399,25,238,399,399,19,319,18,66,258,399,
	400,23,253,135,272,50,353,91,206,400,18,139,192,
	401,20,357,121,401,401,22,357,86,401,401,39,395,63,234,401,26,395,130,234,401,42,395,114,234,401,3,395,68,234,401,32,395,80,234,401,34,395,123,234,401,1,269,141,234,401,9,253,107,268,401,54,342,72,268,401,84,
	402,58,29,52,100,270,329,76,78,402,402,
	403,150,403,5,122,419,149,191,403,38,145,383,149,191,403,13,88,153,149,191,403,49,87,382,149,191,403,15,62,172,149,191,403,27,131,188,149,191,403,51,420,149,191,403,19,405,149,191,403,52,166,149,191,403,48,119,224,149,191,403,4,132,296,149,191,
	404,33,89,404,404,50,353,106,350,404,10,322,151,157,190,404,23,253,135,272,50,353,91,180,404,18,139,425,
	405,5,122,221,405,38,145,436,405,52,129,305,362,405,49,87,368,405,18,50,353,56,180,405,19,202,405,27,131,237,405,51,184,405,15,62,203,405,13,88,223,405,48,119,222,405,4,132,359,
	406,10,322,151,157,209,406,23,253,135,272,50,353,91,180,406,18,139,425,
	407,1,269,141,407,407,9,253,107,366,407,54,342,72,366,407,
	408,23,253,135,272,50,353,91,206,408,18,139,192,
	409,10,322,151,157,265,409,23,253,135,272,50,353,91,206,409,18,139,192,
	410,23,253,135,272,50,353,91,180,410,18,139,425,
	411,19,319,18,66,411,411,21,376,142,417,411,24,376,57,417,411,45,376,103,417,411,20,357,121,371,411,22,357,86,371,411,
	412,33,89,412,412,50,353,106,394,412,10,322,151,157,214,412,23,253,135,272,50,353,91,412,18,139,300,
	413,5,122,230,322,151,310,413,38,145,230,322,151,310,413,13,88,230,322,151,310,413,49,87,230,322,151,310,413,52,129,156,230,322,151,310,413,15,62,230,322,151,310,413,27,131,230,322,151,310,413,51,170,53,124,230,322,151,310,413,19,198,10,322,151,310,413,4,132,230,322,151,310,413,48,119,230,322,151,310,
	414,1,269,141,414,414,
	415,23,253,64,415,415,53,124,286,
	416,33,89,416,416,50,353,106,430,416,10,322,151,157,351,416,23,253,135,272,50,353,91,180,416,18,139,425,
	417,21,376,142,417,417,24,376,57,417,417,45,376,103,417,417,20,357,121,371,417,22,357,86,371,417,
	418,33,89,358,418,50,353,106,254,418,10,322,151,157,418,
	419,33,89,370,419,50,353,106,186,419,10,322,151,157,81,419,81,
	420,5,122,326,70,259,420,38,145,252,70,259,420,13,88,171,70,259,420,49,87,179,70,259,420,52,129,305,70,259,420,15,62,418,70,259,420,27,131,289,70,259,420,51,333,70,259,420,19,340,70,259,420,4,132,324,70,259,420,48,119,244,70,259,420,148,53,124,328,
	421,10,322,151,157,81,421,81,
	422,33,89,422,422,50,353,106,421,422,10,322,151,157,81,422,81,
	423,21,376,142,423,423,24,376,57,423,423,45,376,103,423,423,20,357,121,301,423,22,357,86,301,423,39,395,63,407,423,26,395,130,407,423,42,395,114,407,423,3,395,68,407,423,32,395,80,407,423,34,395,123,407,423,1,269,141,407,423,9,253,107,366,423,54,342,72,366,423,
	424,9,253,107,424,424,54,342,72,424,424,84,
	425,33,89,185,425,50,353,106,334,425,10,322,151,157,81,425,81,
	426,5,122,326,70,415,240,426,38,145,252,70,415,240,426,13,88,171,70,415,240,426,49,87,179,70,415,240,426,52,129,305,70,415,240,426,15,62,418,70,415,240,426,27,131,289,70,415,240,426,51,333,70,415,240,426,19,340,70,415,240,426,4,132,324,70,415,240,426,48,119,244,70,415,240,426,148,53,124,286,240,
	427,33,89,443,427,50,353,106,318,427,10,322,151,157,208,427,23,253,135,272,50,353,91,427,18,139,300,
	428,33,89,428,428,50,353,106,255,428,10,322,151,157,276,428,23,253,135,272,50,353,91,206,428,18,139,192,
	429,23,253,135,272,50,353,91,429,18,139,300,
	430,10,322,151,157,351,430,23,253,135,272,50,353,91,180,430,18,139,425,
	431,33,89,431,431,50,353,106,257,431,10,322,151,157,408,431,23,253,135,272,50,353,91,206,431,18,139,192,
	432,10,322,151,157,81,432,81,
	433,33,89,215,433,50,353,106,212,433,10,322,151,157,283,433,23,253,135,272,50,353,91,433,18,139,300,
	434,23,253,64,434,434,
	435,33,89,435,435,50,353,106,354,435,10,322,151,157,435,
	436,33,89,416,436,50,353,106,430,436,10,322,151,157,351,436,23,253,135,272,50,353,91,180,436,18,139,425,
	437,23,253,135,272,50,353,91,437,18,139,300,
	438,23,253,135,272,50,353,91,180,438,18,139,425,
	439,10,322,151,157,162,439,23,253,135,272,50,353,91,439,18,139,300,
	440,33,89,182,440,50,353,106,294,440,10,322,151,157,429,440,23,253,135,272,50,353,91,440,18,139,300,
	441,5,122,261,285,441,38,145,263,285,441,52,129,305,155,285,441,49,87,444,285,441,18,50,353,56,271,441,19,338,285,441,27,131,175,285,441,51,323,285,441,15,62,293,285,441,13,88,309,285,441,48,119,187,285,441,4,132,388,285,
	442,10,322,151,157,400,442,23,253,135,272,50,353,91,206,442,18,139,192,
	443,33,89,443,443,50,353,106,318,443,10,322,151,157,208,443,23,253,135,272,50,353,91,443,18,139,300,
	444,33,89,229,444,50,353,106,280,444,10,322,151,157,235,444,23,253,135,272,50,353,91,206,444,18,139,192,
};
const size_t parsx_state_translation[] = {
	
};
parsx_step_func_begin()
	while( parsx_has_state ){
		State parsx_current_state_ = parsx_current_state;
		if ( parsx_current_state_ < 55 ){
			if ( parsx_lookahead_token == parsx_token_ids[parsx_current_state_] ){
				parsx_queue_action(parsx_current_state_);
				parsx_pop_state();
				parsx_shift_token();
				return true;
			}else{
				return false;
			}
		}else if ( parsx_current_state_ < 153 ){
			parsx_pop_state();
			parsx_queue_action(parsx_current_state_);
		}else{
			Action parsx_applied_rule;
			switch ( parsx_current_state_ ){
			case 153:{ //Symbol ParamGroup@unit@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Unit)}
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 153;break;
					case parsx_token(OArrow):parsx_applied_rule = 154;break;
					case parsx_token(OVBar):parsx_applied_rule = 155;break;
					default:parsx_applied_rule = 156;break;
				}
			}break;
			case 154:{ //Symbol type(5)@(@identifier@type(0)@identifier
				switch ( parsx_lookahead_token ){
					case parsx_token(OComma):parsx_applied_rule = 157;break;
					case parsx_token(ORParen):parsx_applied_rule = 158;break;
					default:return false;
				}
			}break;
			case 155:{ //Symbol type(0)@(@identifier@type(0)@identifier
				switch ( parsx_lookahead_token ){
					case parsx_token(OComma):parsx_applied_rule = 159;break;
					case parsx_token(ORParen):parsx_applied_rule = 160;break;
					default:return false;
				}
			}break;
			case 156:{ //Symbol (TypeReference'rhs+((WithSrcLoc<TypeReferenceNode*>,))=>{alloc(TypeReference)(to_here($1), $1)})
				switch ( parsx_lookahead_token ){
					case parsx_token(OPeriod):parsx_applied_rule = 161;break;
					default:parsx_applied_rule = 162;break;
				}
			}break;
			case 157:{ //Symbol (TypeUnion'rhs+((List<TypeList>,))=>{alloc(TypeUnion)(SrcSpan($1.first->type->where.from(), $1.last->type->where.to()), $1)})
				switch ( parsx_lookahead_token ){
					case parsx_token(OVBar):parsx_applied_rule = 163;break;
					default:parsx_applied_rule = 164;break;
				}
			}break;
			case 158:{ //Symbol (type(7)'rhs+type(0)@undef@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Undef)}@type(7)'rhs+type(0)@(@undef@type(0)@undef)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 165;break;
					case parsx_token(OArrow):parsx_applied_rule = 166;break;
					case parsx_token(OVBar):parsx_applied_rule = 167;break;
					case parsx_token(OComma):parsx_applied_rule = 168;break;
					case parsx_token(ORParen):parsx_applied_rule = 169;break;
					default:return false;
				}
			}break;
			case 159:{ //Symbol ParamGroup@string@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::String)}@type(7)'rhs@type(5)@type(6)
				switch ( parsx_lookahead_token ){
					case parsx_token(OVBar):parsx_applied_rule = 170;break;
					default:parsx_applied_rule = 171;break;
				}
			}break;
			case 160:{ //Symbol (type(7)'rhs+ParamGroup@double@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Double)}@type(7)'rhs)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 172;break;
					case parsx_token(OArrow):parsx_applied_rule = 173;break;
					case parsx_token(OVBar):parsx_applied_rule = 174;break;
					default:parsx_applied_rule = 175;break;
				}
			}break;
			case 161:{ //Symbol TopLevel
				switch ( parsx_lookahead_token ){
					case parsx_token(KFunction):parsx_applied_rule = 176;break;
					case parsx_token(KGlobal):parsx_applied_rule = 177;break;
					default:return false;
				}
			}break;
			case 162:{ //Symbol type(5)@(@double@type(0)@double
				switch ( parsx_lookahead_token ){
					case parsx_token(OComma):parsx_applied_rule = 178;break;
					case parsx_token(ORParen):parsx_applied_rule = 179;break;
					default:return false;
				}
			}break;
			case 163:{ //Symbol (expr(1,True)'rhs+expr(0,True)'rhs+((Expr*,))=>{alloc(StmtEval)($1)})
				switch ( parsx_lookahead_token ){
					case parsx_token(KAnd):parsx_applied_rule = 180;break;
					case parsx_token(OColon):parsx_applied_rule = 181;break;
					case parsx_token(KOr):parsx_applied_rule = 182;break;
					default:parsx_applied_rule = 183;break;
				}
			}break;
			case 164:{ //Symbol QualID
				switch ( parsx_lookahead_token ){
					case parsx_token(Identifier):parsx_applied_rule = 184;break;
					default:return false;
				}
			}break;
			case 165:{ //Symbol (type(7)'rhs+type(0)@unit@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Unit)}@type(7)'rhs+type(0)@(@unit@type(0)@unit)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 185;break;
					case parsx_token(OArrow):parsx_applied_rule = 186;break;
					case parsx_token(OVBar):parsx_applied_rule = 187;break;
					case parsx_token(OComma):parsx_applied_rule = 188;break;
					case parsx_token(ORParen):parsx_applied_rule = 189;break;
					default:return false;
				}
			}break;
			case 166:{ //Symbol ParamGroup@identifier
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 190;break;
					case parsx_token(OArrow):parsx_applied_rule = 190;break;
					case parsx_token(OVBar):parsx_applied_rule = 190;break;
					case parsx_token(OPeriod):parsx_applied_rule = 190;break;
					case parsx_token(Identifier):parsx_applied_rule = 191;break;
					case parsx_token(OColon):parsx_applied_rule = 191;break;
					default:parsx_applied_rule = 190;break;
				}
			}break;
			case 167:{ //Symbol type(0)@unit@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Unit)}@type(7)'rhs@type(5)@type(6)
				switch ( parsx_lookahead_token ){
					case parsx_token(OVBar):parsx_applied_rule = 192;break;
					default:parsx_applied_rule = 193;break;
				}
			}break;
			case 168:{ //Symbol (type(7)'rhs+ParamGroup@{@TypeList@}@((parsx_token_type, List<TypeList>, parsx_token_type))=>{alloc(TypeTuple)(SrcSpan($1.where.from(), $3.where.to()), $2)}@type(7)'rhs)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 194;break;
					case parsx_token(OArrow):parsx_applied_rule = 195;break;
					case parsx_token(OVBar):parsx_applied_rule = 196;break;
					default:parsx_applied_rule = 197;break;
				}
			}break;
			case 169:{ //Symbol ParamGroup@unit@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Unit)}@type(7)'rhs@type(5)@type(6)
				switch ( parsx_lookahead_token ){
					case parsx_token(OVBar):parsx_applied_rule = 198;break;
					default:parsx_applied_rule = 199;break;
				}
			}break;
			case 170:{ //Symbol TypeList
				switch ( parsx_lookahead_token ){
					case parsx_token(KFloat):parsx_applied_rule = 200;break;
					case parsx_token(KString):parsx_applied_rule = 201;break;
					case parsx_token(KUnit):parsx_applied_rule = 202;break;
					case parsx_token(KBytes):parsx_applied_rule = 203;break;
					case parsx_token(Identifier):parsx_applied_rule = 204;break;
					case parsx_token(KUndef):parsx_applied_rule = 205;break;
					case parsx_token(KBool):parsx_applied_rule = 206;break;
					case parsx_token(OLBrace):parsx_applied_rule = 207;break;
					case parsx_token(OLParen):parsx_applied_rule = 208;break;
					case parsx_token(KInt):parsx_applied_rule = 209;break;
					case parsx_token(KDouble):parsx_applied_rule = 210;break;
					default:parsx_applied_rule = 211;break;
				}
			}break;
			case 171:{ //Symbol type(0)@unit@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Unit)}
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 212;break;
					case parsx_token(OArrow):parsx_applied_rule = 213;break;
					case parsx_token(OVBar):parsx_applied_rule = 214;break;
					default:parsx_applied_rule = 215;break;
				}
			}break;
			case 172:{ //Symbol ParamGroup@undef@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Undef)}
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 216;break;
					case parsx_token(OArrow):parsx_applied_rule = 217;break;
					case parsx_token(OVBar):parsx_applied_rule = 218;break;
					default:parsx_applied_rule = 219;break;
				}
			}break;
			case 173:{ //Symbol (type(0)@string@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::String)}@type(7)'rhs@type(5)@type(6)+type(0)@(@string@type(0)@string)
				switch ( parsx_lookahead_token ){
					case parsx_token(OVBar):parsx_applied_rule = 220;break;
					case parsx_token(OComma):parsx_applied_rule = 221;break;
					case parsx_token(ORParen):parsx_applied_rule = 222;break;
					default:return false;
				}
			}break;
			case 174:{ //Symbol (type(0)@double@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Double)}+type(5)@(@double@type(0)@double)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 223;break;
					case parsx_token(OArrow):parsx_applied_rule = 224;break;
					case parsx_token(OVBar):parsx_applied_rule = 225;break;
					case parsx_token(OComma):parsx_applied_rule = 226;break;
					case parsx_token(ORParen):parsx_applied_rule = 227;break;
					default:return false;
				}
			}break;
			case 175:{ //Symbol (type(0)@bool@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Bool)}+type(0)@(@bool@type(0)@bool)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 228;break;
					case parsx_token(OArrow):parsx_applied_rule = 229;break;
					case parsx_token(OVBar):parsx_applied_rule = 230;break;
					case parsx_token(OComma):parsx_applied_rule = 231;break;
					case parsx_token(ORParen):parsx_applied_rule = 232;break;
					default:return false;
				}
			}break;
			case 176:{ //Symbol (type(7)'rhs+type(0)@bool@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Bool)}@type(7)'rhs+type(5)@(@bool@type(0)@bool)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 233;break;
					case parsx_token(OArrow):parsx_applied_rule = 234;break;
					case parsx_token(OVBar):parsx_applied_rule = 235;break;
					case parsx_token(OComma):parsx_applied_rule = 236;break;
					case parsx_token(ORParen):parsx_applied_rule = 237;break;
					default:return false;
				}
			}break;
			case 177:{ //Symbol type(5)@(@bool@type(0)@bool
				switch ( parsx_lookahead_token ){
					case parsx_token(OComma):parsx_applied_rule = 238;break;
					case parsx_token(ORParen):parsx_applied_rule = 239;break;
					default:return false;
				}
			}break;
			case 178:{ //Symbol (type(7)'rhs+type(0)@bytes@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Bytes)}@type(7)'rhs+ParamGroup@(@bytes@type(0)@bytes)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 240;break;
					case parsx_token(OArrow):parsx_applied_rule = 241;break;
					case parsx_token(OVBar):parsx_applied_rule = 242;break;
					case parsx_token(OComma):parsx_applied_rule = 243;break;
					case parsx_token(ORParen):parsx_applied_rule = 244;break;
					default:return false;
				}
			}break;
			case 179:{ //Symbol type(0)@bytes@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Bytes)}
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 245;break;
					case parsx_token(OArrow):parsx_applied_rule = 246;break;
					case parsx_token(OVBar):parsx_applied_rule = 247;break;
					default:parsx_applied_rule = 248;break;
				}
			}break;
			case 180:{ //Symbol ParamGroup@(@type(5)@(
				switch ( parsx_lookahead_token ){
					case parsx_token(OVBar):parsx_applied_rule = 249;break;
					default:parsx_applied_rule = 250;break;
				}
			}break;
			case 181:{ //Symbol (type(7)'rhs+type(0)@int@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Int)}@type(7)'rhs+type(0)@(@int@type(0)@int)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 251;break;
					case parsx_token(OArrow):parsx_applied_rule = 252;break;
					case parsx_token(OVBar):parsx_applied_rule = 253;break;
					case parsx_token(OComma):parsx_applied_rule = 254;break;
					case parsx_token(ORParen):parsx_applied_rule = 255;break;
					default:return false;
				}
			}break;
			case 182:{ //Symbol (type(7)'rhs+type(0)@unit@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Unit)}@type(7)'rhs+type(5)@(@unit@type(0)@unit)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 256;break;
					case parsx_token(OArrow):parsx_applied_rule = 257;break;
					case parsx_token(OVBar):parsx_applied_rule = 258;break;
					case parsx_token(OComma):parsx_applied_rule = 259;break;
					case parsx_token(ORParen):parsx_applied_rule = 260;break;
					default:return false;
				}
			}break;
			case 183:{ //Symbol (type(7)'rhs+type(0)@int@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Int)}@type(7)'rhs+ParamGroup@(@int@type(0)@int)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 261;break;
					case parsx_token(OArrow):parsx_applied_rule = 262;break;
					case parsx_token(OVBar):parsx_applied_rule = 263;break;
					case parsx_token(OComma):parsx_applied_rule = 264;break;
					case parsx_token(ORParen):parsx_applied_rule = 265;break;
					default:return false;
				}
			}break;
			case 184:{ //Symbol ParamGroup@(@{
				switch ( parsx_lookahead_token ){
					case parsx_token(KFloat):parsx_applied_rule = 266;break;
					case parsx_token(KString):parsx_applied_rule = 267;break;
					case parsx_token(KUnit):parsx_applied_rule = 268;break;
					case parsx_token(KBytes):parsx_applied_rule = 269;break;
					case parsx_token(Identifier):parsx_applied_rule = 270;break;
					case parsx_token(KUndef):parsx_applied_rule = 271;break;
					case parsx_token(KBool):parsx_applied_rule = 272;break;
					case parsx_token(OLBrace):parsx_applied_rule = 273;break;
					case parsx_token(OLParen):parsx_applied_rule = 274;break;
					case parsx_token(KInt):parsx_applied_rule = 275;break;
					case parsx_token(KDouble):parsx_applied_rule = 276;break;
					case parsx_token(ORBrace):parsx_applied_rule = 277;break;
					default:return false;
				}
			}break;
			case 185:{ //Symbol (type(7)'rhs+ParamGroup@(@Type@)@((parsx_token_type, Type*, parsx_token_type))=>{$2}@type(7)'rhs)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 278;break;
					case parsx_token(OArrow):parsx_applied_rule = 279;break;
					case parsx_token(OVBar):parsx_applied_rule = 280;break;
					default:parsx_applied_rule = 281;break;
				}
			}break;
			case 186:{ //Symbol ParamGroup@float@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Float)}@type(7)'rhs@type(5)@type(6)
				switch ( parsx_lookahead_token ){
					case parsx_token(OVBar):parsx_applied_rule = 282;break;
					default:parsx_applied_rule = 283;break;
				}
			}break;
			case 187:{ //Symbol (type(0)@double@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Double)}+type(0)@(@double@type(0)@double)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 284;break;
					case parsx_token(OArrow):parsx_applied_rule = 285;break;
					case parsx_token(OVBar):parsx_applied_rule = 286;break;
					case parsx_token(OComma):parsx_applied_rule = 287;break;
					case parsx_token(ORParen):parsx_applied_rule = 288;break;
					default:return false;
				}
			}break;
			case 188:{ //Symbol ParamGroup@bool@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Bool)}
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 289;break;
					case parsx_token(OArrow):parsx_applied_rule = 290;break;
					case parsx_token(OVBar):parsx_applied_rule = 291;break;
					default:parsx_applied_rule = 292;break;
				}
			}break;
			case 189:{ //Symbol Import
				switch ( parsx_lookahead_token ){
					case parsx_token(KImport):parsx_applied_rule = 293;break;
					default:return false;
				}
			}break;
			case 190:{ //Symbol ParamGroup@(@unit@type(0)@unit
				switch ( parsx_lookahead_token ){
					case parsx_token(OComma):parsx_applied_rule = 294;break;
					case parsx_token(ORParen):parsx_applied_rule = 295;break;
					default:return false;
				}
			}break;
			case 191:{ //Symbol ParamGroups''rhs
				switch ( parsx_lookahead_token ){
					case parsx_token(OComma):parsx_applied_rule = 296;break;
					default:parsx_applied_rule = 297;break;
				}
			}break;
			case 192:{ //Symbol type(0)@(@Type@)@((parsx_token_type, Type*, parsx_token_type))=>{$2}
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 298;break;
					case parsx_token(OArrow):parsx_applied_rule = 299;break;
					case parsx_token(OVBar):parsx_applied_rule = 300;break;
					default:parsx_applied_rule = 301;break;
				}
			}break;
			case 193:{ //Symbol (expr(10,True)'rhs+expr(8,True)'rhs+expr(4,True)'rhs+expr(3,True)'rhs+expr(2,True)@expr(3,True)+expr(1,True)'rhs)
				switch ( parsx_lookahead_token ){
					case parsx_token(OPeriod):parsx_applied_rule = 302;break;
					case parsx_token(OLParen):parsx_applied_rule = 303;break;
					case parsx_token(OMult):parsx_applied_rule = 304;break;
					case parsx_token(ODiv):parsx_applied_rule = 305;break;
					case parsx_token(ORem):parsx_applied_rule = 306;break;
					case parsx_token(OPlus):parsx_applied_rule = 307;break;
					case parsx_token(OMinus):parsx_applied_rule = 308;break;
					case parsx_token(OEQ):parsx_applied_rule = 309;break;
					case parsx_token(ONE):parsx_applied_rule = 310;break;
					case parsx_token(OLE):parsx_applied_rule = 311;break;
					case parsx_token(OGE):parsx_applied_rule = 312;break;
					case parsx_token(OLT):parsx_applied_rule = 313;break;
					case parsx_token(OGT):parsx_applied_rule = 314;break;
					case parsx_token(KAnd):parsx_applied_rule = 315;break;
					default:parsx_applied_rule = 316;break;
				}
			}break;
			case 194:{ //Symbol ExprList'rhs
				switch ( parsx_lookahead_token ){
					case parsx_token(OComma):parsx_applied_rule = 317;break;
					default:parsx_applied_rule = 318;break;
				}
			}break;
			case 195:{ //Symbol (type(0)@bool@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Bool)}@type(7)'rhs@type(5)@type(6)+type(5)@(@bool@type(0)@bool)
				switch ( parsx_lookahead_token ){
					case parsx_token(OVBar):parsx_applied_rule = 319;break;
					case parsx_token(OComma):parsx_applied_rule = 320;break;
					case parsx_token(ORParen):parsx_applied_rule = 321;break;
					default:return false;
				}
			}break;
			case 196:{ //Symbol (type(7)'rhs+type(0)@unit@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Unit)}@type(7)'rhs)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 322;break;
					case parsx_token(OArrow):parsx_applied_rule = 323;break;
					case parsx_token(OVBar):parsx_applied_rule = 324;break;
					default:parsx_applied_rule = 325;break;
				}
			}break;
			case 197:{ //Symbol type(5)@(@int@type(0)@int
				switch ( parsx_lookahead_token ){
					case parsx_token(OComma):parsx_applied_rule = 326;break;
					case parsx_token(ORParen):parsx_applied_rule = 327;break;
					default:return false;
				}
			}break;
			case 198:{ //Symbol type(5)@(
				switch ( parsx_lookahead_token ){
					case parsx_token(KFloat):parsx_applied_rule = 328;break;
					case parsx_token(KString):parsx_applied_rule = 329;break;
					case parsx_token(Identifier):parsx_applied_rule = 330;break;
					case parsx_token(KBytes):parsx_applied_rule = 331;break;
					case parsx_token(ORParen):parsx_applied_rule = 332;break;
					case parsx_token(OLParen):parsx_applied_rule = 333;break;
					case parsx_token(KBool):parsx_applied_rule = 334;break;
					case parsx_token(OLBrace):parsx_applied_rule = 335;break;
					case parsx_token(KUndef):parsx_applied_rule = 336;break;
					case parsx_token(KUnit):parsx_applied_rule = 337;break;
					case parsx_token(KDouble):parsx_applied_rule = 338;break;
					case parsx_token(KInt):parsx_applied_rule = 339;break;
					default:return false;
				}
			}break;
			case 199:{ //Symbol (type(7)'rhs+type(0)@undef@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Undef)}@type(7)'rhs+ParamGroup@(@undef@type(0)@undef)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 340;break;
					case parsx_token(OArrow):parsx_applied_rule = 341;break;
					case parsx_token(OVBar):parsx_applied_rule = 342;break;
					case parsx_token(OComma):parsx_applied_rule = 343;break;
					case parsx_token(ORParen):parsx_applied_rule = 344;break;
					default:return false;
				}
			}break;
			case 200:{ //Symbol (type(7)'rhs+ParamGroup@bool@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Bool)}@type(7)'rhs)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 345;break;
					case parsx_token(OArrow):parsx_applied_rule = 346;break;
					case parsx_token(OVBar):parsx_applied_rule = 347;break;
					default:parsx_applied_rule = 348;break;
				}
			}break;
			case 201:{ //Symbol (type(7)'rhs+type(0)@bool@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Bool)}@type(7)'rhs+ParamGroup@(@bool@type(0)@bool)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 349;break;
					case parsx_token(OArrow):parsx_applied_rule = 350;break;
					case parsx_token(OVBar):parsx_applied_rule = 351;break;
					case parsx_token(OComma):parsx_applied_rule = 352;break;
					case parsx_token(ORParen):parsx_applied_rule = 353;break;
					default:return false;
				}
			}break;
			case 202:{ //Symbol ParamGroup@(@(
				switch ( parsx_lookahead_token ){
					case parsx_token(KFloat):parsx_applied_rule = 354;break;
					case parsx_token(KString):parsx_applied_rule = 355;break;
					case parsx_token(Identifier):parsx_applied_rule = 356;break;
					case parsx_token(KBytes):parsx_applied_rule = 357;break;
					case parsx_token(ORParen):parsx_applied_rule = 358;break;
					case parsx_token(OLParen):parsx_applied_rule = 359;break;
					case parsx_token(KBool):parsx_applied_rule = 360;break;
					case parsx_token(OLBrace):parsx_applied_rule = 361;break;
					case parsx_token(KUndef):parsx_applied_rule = 362;break;
					case parsx_token(KUnit):parsx_applied_rule = 363;break;
					case parsx_token(KDouble):parsx_applied_rule = 364;break;
					case parsx_token(KInt):parsx_applied_rule = 365;break;
					default:return false;
				}
			}break;
			case 203:{ //Symbol (type(0)@undef@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Undef)}+ParamGroup@(@undef@type(0)@undef)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 366;break;
					case parsx_token(OArrow):parsx_applied_rule = 367;break;
					case parsx_token(OVBar):parsx_applied_rule = 368;break;
					case parsx_token(OComma):parsx_applied_rule = 369;break;
					case parsx_token(ORParen):parsx_applied_rule = 370;break;
					default:return false;
				}
			}break;
			case 204:{ //Symbol (type(0)@int@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Int)}+type(5)@(@int@type(0)@int)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 371;break;
					case parsx_token(OArrow):parsx_applied_rule = 372;break;
					case parsx_token(OVBar):parsx_applied_rule = 373;break;
					case parsx_token(OComma):parsx_applied_rule = 374;break;
					case parsx_token(ORParen):parsx_applied_rule = 375;break;
					default:return false;
				}
			}break;
			case 205:{ //Symbol ParamGroup@(@{@type(0)@{
				switch ( parsx_lookahead_token ){
					case parsx_token(OComma):parsx_applied_rule = 376;break;
					case parsx_token(ORParen):parsx_applied_rule = 377;break;
					default:return false;
				}
			}break;
			case 206:{ //Symbol type(0)@(@type(5)@(
				switch ( parsx_lookahead_token ){
					case parsx_token(OVBar):parsx_applied_rule = 378;break;
					default:parsx_applied_rule = 379;break;
				}
			}break;
			case 207:{ //Symbol Imports
				switch ( parsx_lookahead_token ){
					case parsx_token(KImport):parsx_applied_rule = 380;break;
					default:parsx_applied_rule = 380;break;
				}
			}break;
			case 208:{ //Symbol type(5)@(@float@type(0)@float
				switch ( parsx_lookahead_token ){
					case parsx_token(OComma):parsx_applied_rule = 381;break;
					case parsx_token(ORParen):parsx_applied_rule = 382;break;
					default:return false;
				}
			}break;
			case 209:{ //Symbol ParamGroup@(@undef@type(0)@undef
				switch ( parsx_lookahead_token ){
					case parsx_token(OComma):parsx_applied_rule = 383;break;
					case parsx_token(ORParen):parsx_applied_rule = 384;break;
					default:return false;
				}
			}break;
			case 210:{ //Symbol (expr(10,True)'rhs+expr(8,True)'rhs+expr(4,True)'rhs+expr(3,True)'rhs)
				switch ( parsx_lookahead_token ){
					case parsx_token(OPeriod):parsx_applied_rule = 385;break;
					case parsx_token(OLParen):parsx_applied_rule = 386;break;
					case parsx_token(OMult):parsx_applied_rule = 387;break;
					case parsx_token(ODiv):parsx_applied_rule = 388;break;
					case parsx_token(ORem):parsx_applied_rule = 389;break;
					case parsx_token(OPlus):parsx_applied_rule = 390;break;
					case parsx_token(OMinus):parsx_applied_rule = 391;break;
					default:parsx_applied_rule = 392;break;
				}
			}break;
			case 211:{ //Symbol ElseExpr
				switch ( parsx_lookahead_token ){
					case parsx_token(KElse):parsx_applied_rule = 393;break;
					case parsx_token(KElseIf):parsx_applied_rule = 394;break;
					default:return false;
				}
			}break;
			case 212:{ //Symbol (type(0)@undef@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Undef)}@type(7)'rhs@type(5)@type(6)+type(5)@(@undef@type(0)@undef)
				switch ( parsx_lookahead_token ){
					case parsx_token(OVBar):parsx_applied_rule = 395;break;
					case parsx_token(OComma):parsx_applied_rule = 396;break;
					case parsx_token(ORParen):parsx_applied_rule = 397;break;
					default:return false;
				}
			}break;
			case 213:{ //Symbol (expr(4,True)'rhs+expr(3,True)'rhs+expr(2,True)@expr(3,True)+expr(1,True)'rhs)
				switch ( parsx_lookahead_token ){
					case parsx_token(OMult):parsx_applied_rule = 398;break;
					case parsx_token(ODiv):parsx_applied_rule = 399;break;
					case parsx_token(ORem):parsx_applied_rule = 400;break;
					case parsx_token(OPlus):parsx_applied_rule = 401;break;
					case parsx_token(OMinus):parsx_applied_rule = 402;break;
					case parsx_token(OEQ):parsx_applied_rule = 403;break;
					case parsx_token(ONE):parsx_applied_rule = 404;break;
					case parsx_token(OLE):parsx_applied_rule = 405;break;
					case parsx_token(OGE):parsx_applied_rule = 406;break;
					case parsx_token(OLT):parsx_applied_rule = 407;break;
					case parsx_token(OGT):parsx_applied_rule = 408;break;
					case parsx_token(KAnd):parsx_applied_rule = 409;break;
					default:parsx_applied_rule = 410;break;
				}
			}break;
			case 214:{ //Symbol type(5)@(@bytes@type(0)@bytes
				switch ( parsx_lookahead_token ){
					case parsx_token(OComma):parsx_applied_rule = 411;break;
					case parsx_token(ORParen):parsx_applied_rule = 412;break;
					default:return false;
				}
			}break;
			case 215:{ //Symbol (type(7)'rhs+type(0)@undef@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Undef)}@type(7)'rhs+type(5)@(@undef@type(0)@undef)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 413;break;
					case parsx_token(OArrow):parsx_applied_rule = 414;break;
					case parsx_token(OVBar):parsx_applied_rule = 415;break;
					case parsx_token(OComma):parsx_applied_rule = 416;break;
					case parsx_token(ORParen):parsx_applied_rule = 417;break;
					default:return false;
				}
			}break;
			case 216:{ //Symbol type(0)@string@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::String)}@type(7)'rhs@type(5)@type(6)
				switch ( parsx_lookahead_token ){
					case parsx_token(OVBar):parsx_applied_rule = 418;break;
					default:parsx_applied_rule = 419;break;
				}
			}break;
			case 217:{ //Symbol expr(6,True)
				switch ( parsx_lookahead_token ){
					case parsx_token(KNot):parsx_applied_rule = 420;break;
					case parsx_token(KUnit):parsx_applied_rule = 421;break;
					case parsx_token(KTrue):parsx_applied_rule = 422;break;
					case parsx_token(KFalse):parsx_applied_rule = 423;break;
					case parsx_token(KNull):parsx_applied_rule = 424;break;
					case parsx_token(StringLiteral):parsx_applied_rule = 425;break;
					case parsx_token(NumberLiteral):parsx_applied_rule = 426;break;
					case parsx_token(Identifier):parsx_applied_rule = 427;break;
					case parsx_token(OMinus):parsx_applied_rule = 428;break;
					case parsx_token(KIf):parsx_applied_rule = 429;break;
					case parsx_token(OLParen):parsx_applied_rule = 430;break;
					default:return false;
				}
			}break;
			case 218:{ //Symbol (expr(8,True)'rhs+expr(4,True)'rhs+expr(3,True)'rhs+expr(2,True)@expr(3,True)+expr(1,True)'rhs+expr(0,True)'rhs+((Expr*,))=>{alloc(ExprList)($1)})
				switch ( parsx_lookahead_token ){
					case parsx_token(OLParen):parsx_applied_rule = 431;break;
					case parsx_token(OMult):parsx_applied_rule = 432;break;
					case parsx_token(ODiv):parsx_applied_rule = 433;break;
					case parsx_token(ORem):parsx_applied_rule = 434;break;
					case parsx_token(OPlus):parsx_applied_rule = 435;break;
					case parsx_token(OMinus):parsx_applied_rule = 436;break;
					case parsx_token(OEQ):parsx_applied_rule = 437;break;
					case parsx_token(ONE):parsx_applied_rule = 438;break;
					case parsx_token(OLE):parsx_applied_rule = 439;break;
					case parsx_token(OGE):parsx_applied_rule = 440;break;
					case parsx_token(OLT):parsx_applied_rule = 441;break;
					case parsx_token(OGT):parsx_applied_rule = 442;break;
					case parsx_token(KAnd):parsx_applied_rule = 443;break;
					case parsx_token(OColon):parsx_applied_rule = 444;break;
					case parsx_token(KOr):parsx_applied_rule = 445;break;
					default:parsx_applied_rule = 446;break;
				}
			}break;
			case 219:{ //Symbol (type(7)'rhs+type(0)@double@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Double)}@type(7)'rhs+ParamGroup@(@double@type(0)@double)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 447;break;
					case parsx_token(OArrow):parsx_applied_rule = 448;break;
					case parsx_token(OVBar):parsx_applied_rule = 449;break;
					case parsx_token(OComma):parsx_applied_rule = 450;break;
					case parsx_token(ORParen):parsx_applied_rule = 451;break;
					default:return false;
				}
			}break;
			case 220:{ //Symbol MTypeBinder
				switch ( parsx_lookahead_token ){
					case parsx_token(OColon):parsx_applied_rule = 453;break;
					default:parsx_applied_rule = 452;break;
				}
			}break;
			case 221:{ //Symbol (type(0)@float@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Float)}+ParamGroup@(@float@type(0)@float)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 454;break;
					case parsx_token(OArrow):parsx_applied_rule = 455;break;
					case parsx_token(OVBar):parsx_applied_rule = 456;break;
					case parsx_token(OComma):parsx_applied_rule = 457;break;
					case parsx_token(ORParen):parsx_applied_rule = 458;break;
					default:return false;
				}
			}break;
			case 222:{ //Symbol (type(0)@double@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Double)}+ParamGroup@(@double@type(0)@double)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 459;break;
					case parsx_token(OArrow):parsx_applied_rule = 460;break;
					case parsx_token(OVBar):parsx_applied_rule = 461;break;
					case parsx_token(OComma):parsx_applied_rule = 462;break;
					case parsx_token(ORParen):parsx_applied_rule = 463;break;
					default:return false;
				}
			}break;
			case 223:{ //Symbol (type(0)@unit@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Unit)}+ParamGroup@(@unit@type(0)@unit)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 464;break;
					case parsx_token(OArrow):parsx_applied_rule = 465;break;
					case parsx_token(OVBar):parsx_applied_rule = 466;break;
					case parsx_token(OComma):parsx_applied_rule = 467;break;
					case parsx_token(ORParen):parsx_applied_rule = 468;break;
					default:return false;
				}
			}break;
			case 224:{ //Symbol ParamGroup@double@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Double)}
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 469;break;
					case parsx_token(OArrow):parsx_applied_rule = 470;break;
					case parsx_token(OVBar):parsx_applied_rule = 471;break;
					default:parsx_applied_rule = 472;break;
				}
			}break;
			case 225:{ //Symbol ParamGroup@undef@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Undef)}@type(7)'rhs@type(5)@type(6)
				switch ( parsx_lookahead_token ){
					case parsx_token(OVBar):parsx_applied_rule = 473;break;
					default:parsx_applied_rule = 474;break;
				}
			}break;
			case 226:{ //Symbol TypeList2
				switch ( parsx_lookahead_token ){
					case parsx_token(KFloat):parsx_applied_rule = 475;break;
					case parsx_token(KString):parsx_applied_rule = 476;break;
					case parsx_token(KUnit):parsx_applied_rule = 477;break;
					case parsx_token(KBytes):parsx_applied_rule = 478;break;
					case parsx_token(Identifier):parsx_applied_rule = 479;break;
					case parsx_token(KUndef):parsx_applied_rule = 480;break;
					case parsx_token(KBool):parsx_applied_rule = 481;break;
					case parsx_token(OLBrace):parsx_applied_rule = 482;break;
					case parsx_token(OLParen):parsx_applied_rule = 483;break;
					case parsx_token(KInt):parsx_applied_rule = 484;break;
					case parsx_token(KDouble):parsx_applied_rule = 485;break;
					default:return false;
				}
			}break;
			case 227:{ //Symbol (expr(8,True)'rhs+expr(4,True)'rhs)
				switch ( parsx_lookahead_token ){
					case parsx_token(OLParen):parsx_applied_rule = 486;break;
					case parsx_token(OMult):parsx_applied_rule = 487;break;
					case parsx_token(ODiv):parsx_applied_rule = 488;break;
					case parsx_token(ORem):parsx_applied_rule = 489;break;
					default:parsx_applied_rule = 490;break;
				}
			}break;
			case 228:{ //Symbol (expr(4,True)'rhs+expr(3,True)'rhs+expr(2,True)@expr(3,True)+expr(1,True)'rhs+expr(0,True)'rhs+((Expr*,))=>{alloc(StmtEval)($1)})
				switch ( parsx_lookahead_token ){
					case parsx_token(OMult):parsx_applied_rule = 491;break;
					case parsx_token(ODiv):parsx_applied_rule = 492;break;
					case parsx_token(ORem):parsx_applied_rule = 493;break;
					case parsx_token(OPlus):parsx_applied_rule = 494;break;
					case parsx_token(OMinus):parsx_applied_rule = 495;break;
					case parsx_token(OEQ):parsx_applied_rule = 496;break;
					case parsx_token(ONE):parsx_applied_rule = 497;break;
					case parsx_token(OLE):parsx_applied_rule = 498;break;
					case parsx_token(OGE):parsx_applied_rule = 499;break;
					case parsx_token(OLT):parsx_applied_rule = 500;break;
					case parsx_token(OGT):parsx_applied_rule = 501;break;
					case parsx_token(KAnd):parsx_applied_rule = 502;break;
					case parsx_token(OColon):parsx_applied_rule = 503;break;
					case parsx_token(KOr):parsx_applied_rule = 504;break;
					default:parsx_applied_rule = 505;break;
				}
			}break;
			case 229:{ //Symbol (type(7)'rhs+type(0)@bytes@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Bytes)}@type(7)'rhs+type(0)@(@bytes@type(0)@bytes)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 506;break;
					case parsx_token(OArrow):parsx_applied_rule = 507;break;
					case parsx_token(OVBar):parsx_applied_rule = 508;break;
					case parsx_token(OComma):parsx_applied_rule = 509;break;
					case parsx_token(ORParen):parsx_applied_rule = 510;break;
					default:return false;
				}
			}break;
			case 230:{ //Symbol (type(7)'rhs+type(5)@type(6)+vbar)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 511;break;
					case parsx_token(OArrow):parsx_applied_rule = 512;break;
					case parsx_token(OVBar):parsx_applied_rule = 513;break;
					default:return false;
				}
			}break;
			case 231:{ //Symbol (type(7)'rhs+type(0)@bytes@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Bytes)}@type(7)'rhs)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 514;break;
					case parsx_token(OArrow):parsx_applied_rule = 515;break;
					case parsx_token(OVBar):parsx_applied_rule = 516;break;
					default:parsx_applied_rule = 517;break;
				}
			}break;
			case 232:{ //Symbol FunctionBody
				switch ( parsx_lookahead_token ){
					case parsx_token(KImport):parsx_applied_rule = 518;break;
					case parsx_token(KNot):parsx_applied_rule = 519;break;
					case parsx_token(KUnit):parsx_applied_rule = 519;break;
					case parsx_token(NumberLiteral):parsx_applied_rule = 519;break;
					case parsx_token(KNull):parsx_applied_rule = 519;break;
					case parsx_token(OMinus):parsx_applied_rule = 519;break;
					case parsx_token(Identifier):parsx_applied_rule = 519;break;
					case parsx_token(KTrue):parsx_applied_rule = 519;break;
					case parsx_token(KIf):parsx_applied_rule = 519;break;
					case parsx_token(KEnd):parsx_applied_rule = 519;break;
					case parsx_token(OLParen):parsx_applied_rule = 519;break;
					case parsx_token(KFalse):parsx_applied_rule = 519;break;
					case parsx_token(StringLiteral):parsx_applied_rule = 519;break;
					default:return false;
				}
			}break;
			case 233:{ //Symbol (type(0)@(@type(5)@(+ParamGroup@(@(@type(0)@()
				switch ( parsx_lookahead_token ){
					case parsx_token(OVBar):parsx_applied_rule = 520;break;
					case parsx_token(OComma):parsx_applied_rule = 521;break;
					case parsx_token(ORParen):parsx_applied_rule = 522;break;
					default:return false;
				}
			}break;
			case 234:{ //Symbol (expr(1,False)'rhs+expr(0,False)'rhs+((Expr*,))=>{alloc(StmtEval)($1)})
				switch ( parsx_lookahead_token ){
					case parsx_token(KAnd):parsx_applied_rule = 523;break;
					case parsx_token(OColon):parsx_applied_rule = 524;break;
					case parsx_token(KOr):parsx_applied_rule = 525;break;
					default:parsx_applied_rule = 526;break;
				}
			}break;
			case 235:{ //Symbol type(0)@(@bytes@type(0)@bytes
				switch ( parsx_lookahead_token ){
					case parsx_token(OComma):parsx_applied_rule = 527;break;
					case parsx_token(ORParen):parsx_applied_rule = 528;break;
					default:return false;
				}
			}break;
			case 236:{ //Symbol TypeReference'rhs
				switch ( parsx_lookahead_token ){
					case parsx_token(OPeriod):parsx_applied_rule = 529;break;
					default:parsx_applied_rule = 530;break;
				}
			}break;
			case 237:{ //Symbol (type(0)@bool@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Bool)}+ParamGroup@(@bool@type(0)@bool)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 531;break;
					case parsx_token(OArrow):parsx_applied_rule = 532;break;
					case parsx_token(OVBar):parsx_applied_rule = 533;break;
					case parsx_token(OComma):parsx_applied_rule = 534;break;
					case parsx_token(ORParen):parsx_applied_rule = 535;break;
					default:return false;
				}
			}break;
			case 238:{ //Symbol expr(10,True)@expr(10,True)@.
				switch ( parsx_lookahead_token ){
					case parsx_token(Identifier):parsx_applied_rule = 536;break;
					case parsx_token(OLT):parsx_applied_rule = 537;break;
					default:return false;
				}
			}break;
			case 239:{ //Symbol ParamGroup@double@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Double)}@type(7)'rhs@type(5)@type(6)
				switch ( parsx_lookahead_token ){
					case parsx_token(OVBar):parsx_applied_rule = 538;break;
					default:parsx_applied_rule = 539;break;
				}
			}break;
			case 240:{ //Symbol type(5)@(@{@type(0)@{
				switch ( parsx_lookahead_token ){
					case parsx_token(OComma):parsx_applied_rule = 540;break;
					case parsx_token(ORParen):parsx_applied_rule = 541;break;
					default:return false;
				}
			}break;
			case 241:{ //Symbol (type(7)'rhs+type(0)@int@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Int)}@type(7)'rhs+type(5)@(@int@type(0)@int)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 542;break;
					case parsx_token(OArrow):parsx_applied_rule = 543;break;
					case parsx_token(OVBar):parsx_applied_rule = 544;break;
					case parsx_token(OComma):parsx_applied_rule = 545;break;
					case parsx_token(ORParen):parsx_applied_rule = 546;break;
					default:return false;
				}
			}break;
			case 242:{ //Symbol ParamGroup@(@bool@type(0)@bool
				switch ( parsx_lookahead_token ){
					case parsx_token(OComma):parsx_applied_rule = 547;break;
					case parsx_token(ORParen):parsx_applied_rule = 548;break;
					default:return false;
				}
			}break;
			case 243:{ //Symbol type(0)@(@Type@)@((parsx_token_type, Type*, parsx_token_type))=>{$2}@type(7)'rhs@type(5)@type(6)
				switch ( parsx_lookahead_token ){
					case parsx_token(OVBar):parsx_applied_rule = 549;break;
					default:parsx_applied_rule = 550;break;
				}
			}break;
			case 244:{ //Symbol type(0)@double@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Double)}
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 551;break;
					case parsx_token(OArrow):parsx_applied_rule = 552;break;
					case parsx_token(OVBar):parsx_applied_rule = 553;break;
					default:parsx_applied_rule = 554;break;
				}
			}break;
			case 245:{ //Symbol (expr(4,True)'rhs+expr(3,True)'rhs+expr(2,True)@expr(3,True)+expr(1,True)'rhs+expr(0,True)'rhs+((Expr*,))=>{alloc(ExprList)($1)})
				switch ( parsx_lookahead_token ){
					case parsx_token(OMult):parsx_applied_rule = 555;break;
					case parsx_token(ODiv):parsx_applied_rule = 556;break;
					case parsx_token(ORem):parsx_applied_rule = 557;break;
					case parsx_token(OPlus):parsx_applied_rule = 558;break;
					case parsx_token(OMinus):parsx_applied_rule = 559;break;
					case parsx_token(OEQ):parsx_applied_rule = 560;break;
					case parsx_token(ONE):parsx_applied_rule = 561;break;
					case parsx_token(OLE):parsx_applied_rule = 562;break;
					case parsx_token(OGE):parsx_applied_rule = 563;break;
					case parsx_token(OLT):parsx_applied_rule = 564;break;
					case parsx_token(OGT):parsx_applied_rule = 565;break;
					case parsx_token(KAnd):parsx_applied_rule = 566;break;
					case parsx_token(OColon):parsx_applied_rule = 567;break;
					case parsx_token(KOr):parsx_applied_rule = 568;break;
					default:parsx_applied_rule = 569;break;
				}
			}break;
			case 246:{ //Symbol type(0)@bytes@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Bytes)}@type(7)'rhs@type(5)@type(6)
				switch ( parsx_lookahead_token ){
					case parsx_token(OVBar):parsx_applied_rule = 570;break;
					default:parsx_applied_rule = 571;break;
				}
			}break;
			case 247:{ //Symbol (expr(0,True)'rhs+((Expr*,))=>{alloc(ExprList)($1)})
				switch ( parsx_lookahead_token ){
					case parsx_token(OColon):parsx_applied_rule = 572;break;
					case parsx_token(KOr):parsx_applied_rule = 573;break;
					default:parsx_applied_rule = 574;break;
				}
			}break;
			case 248:{ //Symbol TypeBinding
				switch ( parsx_lookahead_token ){
					case parsx_token(OColon):parsx_applied_rule = 575;break;
					default:return false;
				}
			}break;
			case 249:{ //Symbol type(0)@identifier@((parsx_token_type,))=>{WithSrcLoc<TypeReferenceNode*>($1.where.from(), alloc(TypeReferenceLeaf)(sym($1)))}@TypeReference'rhs@((WithSrcLoc<TypeReferenceNode*>,))=>{alloc(TypeReference)(to_here($1), $1)}
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 576;break;
					case parsx_token(OArrow):parsx_applied_rule = 577;break;
					case parsx_token(OVBar):parsx_applied_rule = 578;break;
					default:parsx_applied_rule = 579;break;
				}
			}break;
			case 250:{ //Symbol (type(0)@int@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Int)}@type(7)'rhs@type(5)@type(6)+ParamGroup@(@int@type(0)@int)
				switch ( parsx_lookahead_token ){
					case parsx_token(OVBar):parsx_applied_rule = 580;break;
					case parsx_token(OComma):parsx_applied_rule = 581;break;
					case parsx_token(ORParen):parsx_applied_rule = 582;break;
					default:return false;
				}
			}break;
			case 251:{ //Symbol (type(0)@float@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Float)}@type(7)'rhs@type(5)@type(6)+type(0)@(@float@type(0)@float)
				switch ( parsx_lookahead_token ){
					case parsx_token(OVBar):parsx_applied_rule = 583;break;
					case parsx_token(OComma):parsx_applied_rule = 584;break;
					case parsx_token(ORParen):parsx_applied_rule = 585;break;
					default:return false;
				}
			}break;
			case 252:{ //Symbol type(0)@string@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::String)}
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 586;break;
					case parsx_token(OArrow):parsx_applied_rule = 587;break;
					case parsx_token(OVBar):parsx_applied_rule = 588;break;
					default:parsx_applied_rule = 589;break;
				}
			}break;
			case 253:{ //Symbol Type
				switch ( parsx_lookahead_token ){
					case parsx_token(KFloat):parsx_applied_rule = 590;break;
					case parsx_token(KString):parsx_applied_rule = 591;break;
					case parsx_token(KUnit):parsx_applied_rule = 592;break;
					case parsx_token(KBytes):parsx_applied_rule = 593;break;
					case parsx_token(Identifier):parsx_applied_rule = 594;break;
					case parsx_token(KUndef):parsx_applied_rule = 595;break;
					case parsx_token(KBool):parsx_applied_rule = 596;break;
					case parsx_token(OLBrace):parsx_applied_rule = 597;break;
					case parsx_token(OLParen):parsx_applied_rule = 598;break;
					case parsx_token(KInt):parsx_applied_rule = 599;break;
					case parsx_token(KDouble):parsx_applied_rule = 600;break;
					default:return false;
				}
			}break;
			case 254:{ //Symbol type(0)@undef@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Undef)}@type(7)'rhs@type(5)@type(6)
				switch ( parsx_lookahead_token ){
					case parsx_token(OVBar):parsx_applied_rule = 601;break;
					default:parsx_applied_rule = 602;break;
				}
			}break;
			case 255:{ //Symbol (type(0)@double@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Double)}@type(7)'rhs@type(5)@type(6)+type(0)@(@double@type(0)@double)
				switch ( parsx_lookahead_token ){
					case parsx_token(OVBar):parsx_applied_rule = 603;break;
					case parsx_token(OComma):parsx_applied_rule = 604;break;
					case parsx_token(ORParen):parsx_applied_rule = 605;break;
					default:return false;
				}
			}break;
			case 256:{ //Symbol SrcMarker
				switch ( parsx_lookahead_token ){
					default:parsx_applied_rule = 606;break;
				}
			}break;
			case 257:{ //Symbol (type(0)@bool@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Bool)}@type(7)'rhs@type(5)@type(6)+type(0)@(@bool@type(0)@bool)
				switch ( parsx_lookahead_token ){
					case parsx_token(OVBar):parsx_applied_rule = 607;break;
					case parsx_token(OComma):parsx_applied_rule = 608;break;
					case parsx_token(ORParen):parsx_applied_rule = 609;break;
					default:return false;
				}
			}break;
			case 258:{ //Symbol expr(8,True)'rhs
				switch ( parsx_lookahead_token ){
					case parsx_token(OLParen):parsx_applied_rule = 610;break;
					default:parsx_applied_rule = 611;break;
				}
			}break;
			case 259:{ //Symbol (TypeList''rhs+ParamGroup@{@TypeList)
				switch ( parsx_lookahead_token ){
					case parsx_token(OComma):parsx_applied_rule = 612;break;
					case parsx_token(ORBrace):parsx_applied_rule = 613;break;
					default:return false;
				}
			}break;
			case 260:{ //Symbol (expr(3,True)'rhs+expr(2,True)@expr(3,True)+expr(1,True)'rhs)
				switch ( parsx_lookahead_token ){
					case parsx_token(OPlus):parsx_applied_rule = 614;break;
					case parsx_token(OMinus):parsx_applied_rule = 615;break;
					case parsx_token(OEQ):parsx_applied_rule = 616;break;
					case parsx_token(ONE):parsx_applied_rule = 617;break;
					case parsx_token(OLE):parsx_applied_rule = 618;break;
					case parsx_token(OGE):parsx_applied_rule = 619;break;
					case parsx_token(OLT):parsx_applied_rule = 620;break;
					case parsx_token(OGT):parsx_applied_rule = 621;break;
					case parsx_token(KAnd):parsx_applied_rule = 622;break;
					default:parsx_applied_rule = 623;break;
				}
			}break;
			case 261:{ //Symbol (type(0)@float@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Float)}+type(0)@(@float@type(0)@float)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 624;break;
					case parsx_token(OArrow):parsx_applied_rule = 625;break;
					case parsx_token(OVBar):parsx_applied_rule = 626;break;
					case parsx_token(OComma):parsx_applied_rule = 627;break;
					case parsx_token(ORParen):parsx_applied_rule = 628;break;
					default:return false;
				}
			}break;
			case 262:{ //Symbol (expr(10,True)'rhs+expr(8,True)'rhs+expr(4,True)'rhs)
				switch ( parsx_lookahead_token ){
					case parsx_token(OPeriod):parsx_applied_rule = 629;break;
					case parsx_token(OLParen):parsx_applied_rule = 630;break;
					case parsx_token(OMult):parsx_applied_rule = 631;break;
					case parsx_token(ODiv):parsx_applied_rule = 632;break;
					case parsx_token(ORem):parsx_applied_rule = 633;break;
					default:parsx_applied_rule = 634;break;
				}
			}break;
			case 263:{ //Symbol (type(0)@string@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::String)}+type(0)@(@string@type(0)@string)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 635;break;
					case parsx_token(OArrow):parsx_applied_rule = 636;break;
					case parsx_token(OVBar):parsx_applied_rule = 637;break;
					case parsx_token(OComma):parsx_applied_rule = 638;break;
					case parsx_token(ORParen):parsx_applied_rule = 639;break;
					default:return false;
				}
			}break;
			case 264:{ //Symbol (type(7)'rhs+type(0)@string@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::String)}@type(7)'rhs)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 640;break;
					case parsx_token(OArrow):parsx_applied_rule = 641;break;
					case parsx_token(OVBar):parsx_applied_rule = 642;break;
					default:parsx_applied_rule = 643;break;
				}
			}break;
			case 265:{ //Symbol type(0)@(@unit@type(0)@unit
				switch ( parsx_lookahead_token ){
					case parsx_token(OComma):parsx_applied_rule = 644;break;
					case parsx_token(ORParen):parsx_applied_rule = 645;break;
					default:return false;
				}
			}break;
			case 266:{ //Symbol ParamGroup
				switch ( parsx_lookahead_token ){
					case parsx_token(KFloat):parsx_applied_rule = 646;break;
					case parsx_token(KString):parsx_applied_rule = 647;break;
					case parsx_token(KUnit):parsx_applied_rule = 648;break;
					case parsx_token(KBytes):parsx_applied_rule = 649;break;
					case parsx_token(KUndef):parsx_applied_rule = 650;break;
					case parsx_token(KBool):parsx_applied_rule = 651;break;
					case parsx_token(OLBrace):parsx_applied_rule = 652;break;
					case parsx_token(OLParen):parsx_applied_rule = 653;break;
					case parsx_token(Identifier):parsx_applied_rule = 654;break;
					case parsx_token(KDouble):parsx_applied_rule = 655;break;
					case parsx_token(KInt):parsx_applied_rule = 656;break;
					default:return false;
				}
			}break;
			case 267:{ //Symbol TopLevels'rhs
				switch ( parsx_lookahead_token ){
					case parsx_token(KFunction):parsx_applied_rule = 657;break;
					case parsx_token(KGlobal):parsx_applied_rule = 658;break;
					default:parsx_applied_rule = 659;break;
				}
			}break;
			case 268:{ //Symbol (expr(0,False)'rhs+((Expr*,))=>{alloc(StmtEval)($1)})
				switch ( parsx_lookahead_token ){
					case parsx_token(OColon):parsx_applied_rule = 660;break;
					case parsx_token(KOr):parsx_applied_rule = 661;break;
					default:parsx_applied_rule = 662;break;
				}
			}break;
			case 269:{ //Symbol expr(2,True)
				switch ( parsx_lookahead_token ){
					case parsx_token(KNot):parsx_applied_rule = 663;break;
					case parsx_token(KUnit):parsx_applied_rule = 664;break;
					case parsx_token(KTrue):parsx_applied_rule = 665;break;
					case parsx_token(KFalse):parsx_applied_rule = 666;break;
					case parsx_token(KNull):parsx_applied_rule = 667;break;
					case parsx_token(StringLiteral):parsx_applied_rule = 668;break;
					case parsx_token(NumberLiteral):parsx_applied_rule = 669;break;
					case parsx_token(Identifier):parsx_applied_rule = 670;break;
					case parsx_token(OMinus):parsx_applied_rule = 671;break;
					case parsx_token(KIf):parsx_applied_rule = 672;break;
					case parsx_token(OLParen):parsx_applied_rule = 673;break;
					default:return false;
				}
			}break;
			case 270:{ //Symbol QualID'rhs
				switch ( parsx_lookahead_token ){
					case parsx_token(OPeriod):parsx_applied_rule = 674;break;
					default:parsx_applied_rule = 675;break;
				}
			}break;
			case 271:{ //Symbol (type(0)@(@type(5)@(+type(5)@(@(@type(0)@()
				switch ( parsx_lookahead_token ){
					case parsx_token(OVBar):parsx_applied_rule = 676;break;
					case parsx_token(OComma):parsx_applied_rule = 677;break;
					case parsx_token(ORParen):parsx_applied_rule = 678;break;
					default:return false;
				}
			}break;
			case 272:{ //Symbol (TypeList2'rhs+))
				switch ( parsx_lookahead_token ){
					case parsx_token(OComma):parsx_applied_rule = 679;break;
					case parsx_token(ORParen):parsx_applied_rule = 680;break;
					default:return false;
				}
			}break;
			case 273:{ //Symbol (TypeReference'rhs+ParamGroup@identifier@((parsx_token_type,))=>{WithSrcLoc<TypeReferenceNode*>($1.where.from(), alloc(TypeReferenceLeaf)(sym($1)))}@TypeReference'rhs)
				switch ( parsx_lookahead_token ){
					case parsx_token(OPeriod):parsx_applied_rule = 681;break;
					case parsx_token(OQuestion):parsx_applied_rule = 682;break;
					case parsx_token(OArrow):parsx_applied_rule = 682;break;
					case parsx_token(OVBar):parsx_applied_rule = 682;break;
					default:parsx_applied_rule = 682;break;
				}
			}break;
			case 274:{ //Symbol (type(7)'rhs+ParamGroup@bytes@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Bytes)}@type(7)'rhs)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 683;break;
					case parsx_token(OArrow):parsx_applied_rule = 684;break;
					case parsx_token(OVBar):parsx_applied_rule = 685;break;
					default:parsx_applied_rule = 686;break;
				}
			}break;
			case 275:{ //Symbol (expr(3,True)'rhs+expr(2,True)@expr(3,True)+expr(1,True)'rhs+expr(0,True)'rhs+((Expr*,))=>{alloc(ExprList)($1)})
				switch ( parsx_lookahead_token ){
					case parsx_token(OPlus):parsx_applied_rule = 687;break;
					case parsx_token(OMinus):parsx_applied_rule = 688;break;
					case parsx_token(OEQ):parsx_applied_rule = 689;break;
					case parsx_token(ONE):parsx_applied_rule = 690;break;
					case parsx_token(OLE):parsx_applied_rule = 691;break;
					case parsx_token(OGE):parsx_applied_rule = 692;break;
					case parsx_token(OLT):parsx_applied_rule = 693;break;
					case parsx_token(OGT):parsx_applied_rule = 694;break;
					case parsx_token(KAnd):parsx_applied_rule = 695;break;
					case parsx_token(OColon):parsx_applied_rule = 696;break;
					case parsx_token(KOr):parsx_applied_rule = 697;break;
					default:parsx_applied_rule = 698;break;
				}
			}break;
			case 276:{ //Symbol type(0)@(@double@type(0)@double
				switch ( parsx_lookahead_token ){
					case parsx_token(OComma):parsx_applied_rule = 699;break;
					case parsx_token(ORParen):parsx_applied_rule = 700;break;
					default:return false;
				}
			}break;
			case 277:{ //Symbol (expr(3,True)'rhs+expr(2,True)@expr(3,True)+expr(1,True)'rhs+expr(0,True)'rhs+((Expr*,))=>{alloc(StmtEval)($1)})
				switch ( parsx_lookahead_token ){
					case parsx_token(OPlus):parsx_applied_rule = 701;break;
					case parsx_token(OMinus):parsx_applied_rule = 702;break;
					case parsx_token(OEQ):parsx_applied_rule = 703;break;
					case parsx_token(ONE):parsx_applied_rule = 704;break;
					case parsx_token(OLE):parsx_applied_rule = 705;break;
					case parsx_token(OGE):parsx_applied_rule = 706;break;
					case parsx_token(OLT):parsx_applied_rule = 707;break;
					case parsx_token(OGT):parsx_applied_rule = 708;break;
					case parsx_token(KAnd):parsx_applied_rule = 709;break;
					case parsx_token(OColon):parsx_applied_rule = 710;break;
					case parsx_token(KOr):parsx_applied_rule = 711;break;
					default:parsx_applied_rule = 712;break;
				}
			}break;
			case 278:{ //Symbol ParamGroup@identifier@((parsx_token_type,))=>{WithSrcLoc<TypeReferenceNode*>($1.where.from(), alloc(TypeReferenceLeaf)(sym($1)))}@TypeReference'rhs@((WithSrcLoc<TypeReferenceNode*>,))=>{alloc(TypeReference)(to_here($1), $1)}
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 713;break;
					case parsx_token(OArrow):parsx_applied_rule = 714;break;
					case parsx_token(OVBar):parsx_applied_rule = 715;break;
					default:parsx_applied_rule = 716;break;
				}
			}break;
			case 279:{ //Symbol type(0)@double@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Double)}@type(7)'rhs@type(5)@type(6)
				switch ( parsx_lookahead_token ){
					case parsx_token(OVBar):parsx_applied_rule = 717;break;
					default:parsx_applied_rule = 718;break;
				}
			}break;
			case 280:{ //Symbol (type(0)@bytes@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Bytes)}@type(7)'rhs@type(5)@type(6)+type(0)@(@bytes@type(0)@bytes)
				switch ( parsx_lookahead_token ){
					case parsx_token(OVBar):parsx_applied_rule = 719;break;
					case parsx_token(OComma):parsx_applied_rule = 720;break;
					case parsx_token(ORParen):parsx_applied_rule = 721;break;
					default:return false;
				}
			}break;
			case 281:{ //Symbol (type(0)@bytes@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Bytes)}@type(7)'rhs@type(5)@type(6)+ParamGroup@(@bytes@type(0)@bytes)
				switch ( parsx_lookahead_token ){
					case parsx_token(OVBar):parsx_applied_rule = 722;break;
					case parsx_token(OComma):parsx_applied_rule = 723;break;
					case parsx_token(ORParen):parsx_applied_rule = 724;break;
					default:return false;
				}
			}break;
			case 282:{ //Symbol (type(0)@bool@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Bool)}@type(7)'rhs@type(5)@type(6)+ParamGroup@(@bool@type(0)@bool)
				switch ( parsx_lookahead_token ){
					case parsx_token(OVBar):parsx_applied_rule = 725;break;
					case parsx_token(OComma):parsx_applied_rule = 726;break;
					case parsx_token(ORParen):parsx_applied_rule = 727;break;
					default:return false;
				}
			}break;
			case 283:{ //Symbol type(5)@(@undef@type(0)@undef
				switch ( parsx_lookahead_token ){
					case parsx_token(OComma):parsx_applied_rule = 728;break;
					case parsx_token(ORParen):parsx_applied_rule = 729;break;
					default:return false;
				}
			}break;
			case 284:{ //Symbol Initializer
				switch ( parsx_lookahead_token ){
					case parsx_token(OAssign):parsx_applied_rule = 730;break;
					default:return false;
				}
			}break;
			case 285:{ //Symbol type(5)@(@(@type(0)@(
				switch ( parsx_lookahead_token ){
					case parsx_token(OComma):parsx_applied_rule = 731;break;
					case parsx_token(ORParen):parsx_applied_rule = 732;break;
					default:return false;
				}
			}break;
			case 286:{ //Symbol type(0)@{@TypeList@}@((parsx_token_type, List<TypeList>, parsx_token_type))=>{alloc(TypeTuple)(SrcSpan($1.where.from(), $3.where.to()), $2)}
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 733;break;
					case parsx_token(OArrow):parsx_applied_rule = 734;break;
					case parsx_token(OVBar):parsx_applied_rule = 735;break;
					default:parsx_applied_rule = 736;break;
				}
			}break;
			case 287:{ //Symbol (type(7)'rhs+type(0)@float@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Float)}@type(7)'rhs+ParamGroup@(@float@type(0)@float)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 737;break;
					case parsx_token(OArrow):parsx_applied_rule = 738;break;
					case parsx_token(OVBar):parsx_applied_rule = 739;break;
					case parsx_token(OComma):parsx_applied_rule = 740;break;
					case parsx_token(ORParen):parsx_applied_rule = 741;break;
					default:return false;
				}
			}break;
			case 288:{ //Symbol type(0)@bool@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Bool)}@type(7)'rhs@type(5)@type(6)
				switch ( parsx_lookahead_token ){
					case parsx_token(OVBar):parsx_applied_rule = 742;break;
					default:parsx_applied_rule = 743;break;
				}
			}break;
			case 289:{ //Symbol type(0)@bool@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Bool)}
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 744;break;
					case parsx_token(OArrow):parsx_applied_rule = 745;break;
					case parsx_token(OVBar):parsx_applied_rule = 746;break;
					default:parsx_applied_rule = 747;break;
				}
			}break;
			case 290:{ //Symbol Names
				switch ( parsx_lookahead_token ){
					case parsx_token(Identifier):parsx_applied_rule = 748;break;
					default:return false;
				}
			}break;
			case 291:{ //Symbol (type(7)'rhs+type(0)@int@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Int)}@type(7)'rhs)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 749;break;
					case parsx_token(OArrow):parsx_applied_rule = 750;break;
					case parsx_token(OVBar):parsx_applied_rule = 751;break;
					default:parsx_applied_rule = 752;break;
				}
			}break;
			case 292:{ //Symbol (type(7)'rhs+ParamGroup@int@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Int)}@type(7)'rhs)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 753;break;
					case parsx_token(OArrow):parsx_applied_rule = 754;break;
					case parsx_token(OVBar):parsx_applied_rule = 755;break;
					default:parsx_applied_rule = 756;break;
				}
			}break;
			case 293:{ //Symbol (type(0)@undef@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Undef)}+type(0)@(@undef@type(0)@undef)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 757;break;
					case parsx_token(OArrow):parsx_applied_rule = 758;break;
					case parsx_token(OVBar):parsx_applied_rule = 759;break;
					case parsx_token(OComma):parsx_applied_rule = 760;break;
					case parsx_token(ORParen):parsx_applied_rule = 761;break;
					default:return false;
				}
			}break;
			case 294:{ //Symbol (type(0)@unit@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Unit)}@type(7)'rhs@type(5)@type(6)+type(5)@(@unit@type(0)@unit)
				switch ( parsx_lookahead_token ){
					case parsx_token(OVBar):parsx_applied_rule = 762;break;
					case parsx_token(OComma):parsx_applied_rule = 763;break;
					case parsx_token(ORParen):parsx_applied_rule = 764;break;
					default:return false;
				}
			}break;
			case 295:{ //Symbol (TypeReference'rhs+type(0)@identifier@((parsx_token_type,))=>{WithSrcLoc<TypeReferenceNode*>($1.where.from(), alloc(TypeReferenceLeaf)(sym($1)))}@TypeReference'rhs)
				switch ( parsx_lookahead_token ){
					case parsx_token(OPeriod):parsx_applied_rule = 765;break;
					case parsx_token(OQuestion):parsx_applied_rule = 766;break;
					case parsx_token(OArrow):parsx_applied_rule = 766;break;
					case parsx_token(OVBar):parsx_applied_rule = 766;break;
					default:parsx_applied_rule = 766;break;
				}
			}break;
			case 296:{ //Symbol ParamGroup@int@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Int)}
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 767;break;
					case parsx_token(OArrow):parsx_applied_rule = 768;break;
					case parsx_token(OVBar):parsx_applied_rule = 769;break;
					default:parsx_applied_rule = 770;break;
				}
			}break;
			case 297:{ //Symbol (type(0)@double@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Double)}@type(7)'rhs@type(5)@type(6)+ParamGroup@(@double@type(0)@double)
				switch ( parsx_lookahead_token ){
					case parsx_token(OVBar):parsx_applied_rule = 771;break;
					case parsx_token(OComma):parsx_applied_rule = 772;break;
					case parsx_token(ORParen):parsx_applied_rule = 773;break;
					default:return false;
				}
			}break;
			case 298:{ //Symbol ParamGroup@(@double@type(0)@double
				switch ( parsx_lookahead_token ){
					case parsx_token(OComma):parsx_applied_rule = 774;break;
					case parsx_token(ORParen):parsx_applied_rule = 775;break;
					default:return false;
				}
			}break;
			case 299:{ //Symbol Module
				switch ( parsx_lookahead_token ){
					case parsx_token(KGlobal):parsx_applied_rule = 776;break;
					case parsx_token(KImport):parsx_applied_rule = 776;break;
					case parsx_token(KFunction):parsx_applied_rule = 776;break;
					case parsx_token(EndOfFile):parsx_applied_rule = 776;break;
					default:return false;
				}
			}break;
			case 300:{ //Symbol (type(7)'rhs+type(5)@type(6))
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 777;break;
					case parsx_token(OArrow):parsx_applied_rule = 778;break;
					default:parsx_applied_rule = 779;break;
				}
			}break;
			case 301:{ //Symbol (expr(3,True)'rhs+expr(2,True)@expr(3,True)+expr(1,True)'rhs+expr(0,True)'rhs)
				switch ( parsx_lookahead_token ){
					case parsx_token(OPlus):parsx_applied_rule = 780;break;
					case parsx_token(OMinus):parsx_applied_rule = 781;break;
					case parsx_token(OEQ):parsx_applied_rule = 782;break;
					case parsx_token(ONE):parsx_applied_rule = 783;break;
					case parsx_token(OLE):parsx_applied_rule = 784;break;
					case parsx_token(OGE):parsx_applied_rule = 785;break;
					case parsx_token(OLT):parsx_applied_rule = 786;break;
					case parsx_token(OGT):parsx_applied_rule = 787;break;
					case parsx_token(KAnd):parsx_applied_rule = 788;break;
					case parsx_token(OColon):parsx_applied_rule = 789;break;
					case parsx_token(KOr):parsx_applied_rule = 790;break;
					default:parsx_applied_rule = 791;break;
				}
			}break;
			case 302:{ //Symbol (expr(10,True)'rhs+expr(8,True)'rhs+expr(4,True)'rhs+expr(3,True)'rhs+expr(2,True)@expr(3,True))
				switch ( parsx_lookahead_token ){
					case parsx_token(OPeriod):parsx_applied_rule = 792;break;
					case parsx_token(OLParen):parsx_applied_rule = 793;break;
					case parsx_token(OMult):parsx_applied_rule = 794;break;
					case parsx_token(ODiv):parsx_applied_rule = 795;break;
					case parsx_token(ORem):parsx_applied_rule = 796;break;
					case parsx_token(OPlus):parsx_applied_rule = 797;break;
					case parsx_token(OMinus):parsx_applied_rule = 798;break;
					case parsx_token(OEQ):parsx_applied_rule = 799;break;
					case parsx_token(ONE):parsx_applied_rule = 800;break;
					case parsx_token(OLE):parsx_applied_rule = 801;break;
					case parsx_token(OGE):parsx_applied_rule = 802;break;
					case parsx_token(OLT):parsx_applied_rule = 803;break;
					case parsx_token(OGT):parsx_applied_rule = 804;break;
					default:parsx_applied_rule = 805;break;
				}
			}break;
			case 303:{ //Symbol type(0)@(@string@type(0)@string
				switch ( parsx_lookahead_token ){
					case parsx_token(OComma):parsx_applied_rule = 806;break;
					case parsx_token(ORParen):parsx_applied_rule = 807;break;
					default:return false;
				}
			}break;
			case 304:{ //Symbol expr(4,True)'rhs
				switch ( parsx_lookahead_token ){
					case parsx_token(OMult):parsx_applied_rule = 808;break;
					case parsx_token(ODiv):parsx_applied_rule = 809;break;
					case parsx_token(ORem):parsx_applied_rule = 810;break;
					default:parsx_applied_rule = 811;break;
				}
			}break;
			case 305:{ //Symbol type(0)@identifier@((parsx_token_type,))=>{WithSrcLoc<TypeReferenceNode*>($1.where.from(), alloc(TypeReferenceLeaf)(sym($1)))}
				switch ( parsx_lookahead_token ){
					case parsx_token(OPeriod):parsx_applied_rule = 812;break;
					case parsx_token(OQuestion):parsx_applied_rule = 813;break;
					case parsx_token(OArrow):parsx_applied_rule = 813;break;
					case parsx_token(OVBar):parsx_applied_rule = 813;break;
					default:parsx_applied_rule = 813;break;
				}
			}break;
			case 306:{ //Symbol (type(7)'rhs+type(0)@{@TypeList@}@((parsx_token_type, List<TypeList>, parsx_token_type))=>{alloc(TypeTuple)(SrcSpan($1.where.from(), $3.where.to()), $2)}@type(7)'rhs)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 814;break;
					case parsx_token(OArrow):parsx_applied_rule = 815;break;
					case parsx_token(OVBar):parsx_applied_rule = 816;break;
					default:parsx_applied_rule = 817;break;
				}
			}break;
			case 307:{ //Symbol (Names'rhs+colon)
				switch ( parsx_lookahead_token ){
					case parsx_token(Identifier):parsx_applied_rule = 818;break;
					case parsx_token(OColon):parsx_applied_rule = 819;break;
					default:return false;
				}
			}break;
			case 308:{ //Symbol ParamGroup@int@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Int)}@type(7)'rhs@type(5)@type(6)
				switch ( parsx_lookahead_token ){
					case parsx_token(OVBar):parsx_applied_rule = 820;break;
					default:parsx_applied_rule = 821;break;
				}
			}break;
			case 309:{ //Symbol (type(0)@unit@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Unit)}+type(0)@(@unit@type(0)@unit)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 822;break;
					case parsx_token(OArrow):parsx_applied_rule = 823;break;
					case parsx_token(OVBar):parsx_applied_rule = 824;break;
					case parsx_token(OComma):parsx_applied_rule = 825;break;
					case parsx_token(ORParen):parsx_applied_rule = 826;break;
					default:return false;
				}
			}break;
			case 310:{ //Symbol TypeUnion'rhs
				switch ( parsx_lookahead_token ){
					case parsx_token(OVBar):parsx_applied_rule = 827;break;
					default:parsx_applied_rule = 828;break;
				}
			}break;
			case 311:{ //Symbol (type(7)'rhs+type(0)@identifier@((parsx_token_type,))=>{WithSrcLoc<TypeReferenceNode*>($1.where.from(), alloc(TypeReferenceLeaf)(sym($1)))}@TypeReference'rhs@((WithSrcLoc<TypeReferenceNode*>,))=>{alloc(TypeReference)(to_here($1), $1)}@type(7)'rhs)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 829;break;
					case parsx_token(OArrow):parsx_applied_rule = 830;break;
					case parsx_token(OVBar):parsx_applied_rule = 831;break;
					default:parsx_applied_rule = 832;break;
				}
			}break;
			case 312:{ //Symbol (expr(4,False)'rhs+expr(3,False)'rhs+expr(2,False)@expr(3,False)+expr(1,False)'rhs+expr(0,False)'rhs+((Expr*,))=>{alloc(StmtEval)($1)})
				switch ( parsx_lookahead_token ){
					case parsx_token(OMult):parsx_applied_rule = 833;break;
					case parsx_token(ODiv):parsx_applied_rule = 834;break;
					case parsx_token(ORem):parsx_applied_rule = 835;break;
					case parsx_token(OPlus):parsx_applied_rule = 836;break;
					case parsx_token(OMinus):parsx_applied_rule = 837;break;
					case parsx_token(OEQ):parsx_applied_rule = 838;break;
					case parsx_token(ONE):parsx_applied_rule = 839;break;
					case parsx_token(OLE):parsx_applied_rule = 840;break;
					case parsx_token(OGE):parsx_applied_rule = 841;break;
					case parsx_token(OLT):parsx_applied_rule = 842;break;
					case parsx_token(OGT):parsx_applied_rule = 843;break;
					case parsx_token(KAnd):parsx_applied_rule = 844;break;
					case parsx_token(OColon):parsx_applied_rule = 845;break;
					case parsx_token(KOr):parsx_applied_rule = 846;break;
					default:parsx_applied_rule = 847;break;
				}
			}break;
			case 313:{ //Symbol type(0)@int@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Int)}@type(7)'rhs@type(5)@type(6)
				switch ( parsx_lookahead_token ){
					case parsx_token(OVBar):parsx_applied_rule = 848;break;
					default:parsx_applied_rule = 849;break;
				}
			}break;
			case 314:{ //Symbol (expr(1,True)'rhs+expr(0,True)'rhs+((Expr*,))=>{alloc(ExprList)($1)})
				switch ( parsx_lookahead_token ){
					case parsx_token(KAnd):parsx_applied_rule = 850;break;
					case parsx_token(OColon):parsx_applied_rule = 851;break;
					case parsx_token(KOr):parsx_applied_rule = 852;break;
					default:parsx_applied_rule = 853;break;
				}
			}break;
			case 315:{ //Symbol (type(7)'rhs+type(0)@double@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Double)}@type(7)'rhs+type(5)@(@double@type(0)@double)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 854;break;
					case parsx_token(OArrow):parsx_applied_rule = 855;break;
					case parsx_token(OVBar):parsx_applied_rule = 856;break;
					case parsx_token(OComma):parsx_applied_rule = 857;break;
					case parsx_token(ORParen):parsx_applied_rule = 858;break;
					default:return false;
				}
			}break;
			case 316:{ //Symbol TypeReference
				switch ( parsx_lookahead_token ){
					case parsx_token(Identifier):parsx_applied_rule = 859;break;
					default:return false;
				}
			}break;
			case 317:{ //Symbol (type(0)@float@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Float)}@type(7)'rhs@type(5)@type(6)+ParamGroup@(@float@type(0)@float)
				switch ( parsx_lookahead_token ){
					case parsx_token(OVBar):parsx_applied_rule = 860;break;
					case parsx_token(OComma):parsx_applied_rule = 861;break;
					case parsx_token(ORParen):parsx_applied_rule = 862;break;
					default:return false;
				}
			}break;
			case 318:{ //Symbol (type(0)@float@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Float)}@type(7)'rhs@type(5)@type(6)+type(5)@(@float@type(0)@float)
				switch ( parsx_lookahead_token ){
					case parsx_token(OVBar):parsx_applied_rule = 863;break;
					case parsx_token(OComma):parsx_applied_rule = 864;break;
					case parsx_token(ORParen):parsx_applied_rule = 865;break;
					default:return false;
				}
			}break;
			case 319:{ //Symbol ExprList
				switch ( parsx_lookahead_token ){
					case parsx_token(OComma):parsx_applied_rule = 866;break;
					case parsx_token(KNot):parsx_applied_rule = 867;break;
					case parsx_token(KUnit):parsx_applied_rule = 868;break;
					case parsx_token(KTrue):parsx_applied_rule = 869;break;
					case parsx_token(KFalse):parsx_applied_rule = 870;break;
					case parsx_token(KNull):parsx_applied_rule = 871;break;
					case parsx_token(StringLiteral):parsx_applied_rule = 872;break;
					case parsx_token(NumberLiteral):parsx_applied_rule = 873;break;
					case parsx_token(Identifier):parsx_applied_rule = 874;break;
					case parsx_token(OMinus):parsx_applied_rule = 875;break;
					case parsx_token(KIf):parsx_applied_rule = 876;break;
					case parsx_token(OLParen):parsx_applied_rule = 877;break;
					default:parsx_applied_rule = 866;break;
				}
			}break;
			case 320:{ //Symbol ParamGroup@(@float@type(0)@float
				switch ( parsx_lookahead_token ){
					case parsx_token(OComma):parsx_applied_rule = 878;break;
					case parsx_token(ORParen):parsx_applied_rule = 879;break;
					default:return false;
				}
			}break;
			case 321:{ //Symbol TypePrim
				switch ( parsx_lookahead_token ){
					case parsx_token(KUnit):parsx_applied_rule = 880;break;
					case parsx_token(KUndef):parsx_applied_rule = 881;break;
					case parsx_token(KBool):parsx_applied_rule = 882;break;
					case parsx_token(KInt):parsx_applied_rule = 883;break;
					case parsx_token(KFloat):parsx_applied_rule = 884;break;
					case parsx_token(KDouble):parsx_applied_rule = 885;break;
					case parsx_token(KString):parsx_applied_rule = 886;break;
					case parsx_token(KBytes):parsx_applied_rule = 887;break;
					case parsx_token(Identifier):parsx_applied_rule = 888;break;
					case parsx_token(OLBrace):parsx_applied_rule = 889;break;
					default:return false;
				}
			}break;
			case 322:{ //Symbol type(1)
				switch ( parsx_lookahead_token ){
					case parsx_token(KFloat):parsx_applied_rule = 890;break;
					case parsx_token(KString):parsx_applied_rule = 891;break;
					case parsx_token(KUnit):parsx_applied_rule = 892;break;
					case parsx_token(KBytes):parsx_applied_rule = 893;break;
					case parsx_token(Identifier):parsx_applied_rule = 894;break;
					case parsx_token(KUndef):parsx_applied_rule = 895;break;
					case parsx_token(KBool):parsx_applied_rule = 896;break;
					case parsx_token(OLBrace):parsx_applied_rule = 897;break;
					case parsx_token(OLParen):parsx_applied_rule = 898;break;
					case parsx_token(KInt):parsx_applied_rule = 899;break;
					case parsx_token(KDouble):parsx_applied_rule = 900;break;
					default:return false;
				}
			}break;
			case 323:{ //Symbol type(0)@(@{
				switch ( parsx_lookahead_token ){
					case parsx_token(KFloat):parsx_applied_rule = 901;break;
					case parsx_token(KString):parsx_applied_rule = 902;break;
					case parsx_token(KUnit):parsx_applied_rule = 903;break;
					case parsx_token(KBytes):parsx_applied_rule = 904;break;
					case parsx_token(Identifier):parsx_applied_rule = 905;break;
					case parsx_token(KUndef):parsx_applied_rule = 906;break;
					case parsx_token(KBool):parsx_applied_rule = 907;break;
					case parsx_token(OLBrace):parsx_applied_rule = 908;break;
					case parsx_token(OLParen):parsx_applied_rule = 909;break;
					case parsx_token(KInt):parsx_applied_rule = 910;break;
					case parsx_token(KDouble):parsx_applied_rule = 911;break;
					case parsx_token(ORBrace):parsx_applied_rule = 912;break;
					default:return false;
				}
			}break;
			case 324:{ //Symbol type(0)@int@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Int)}
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 913;break;
					case parsx_token(OArrow):parsx_applied_rule = 914;break;
					case parsx_token(OVBar):parsx_applied_rule = 915;break;
					default:parsx_applied_rule = 916;break;
				}
			}break;
			case 325:{ //Symbol Stmts
				switch ( parsx_lookahead_token ){
					case parsx_token(KNot):parsx_applied_rule = 917;break;
					case parsx_token(KUnit):parsx_applied_rule = 918;break;
					case parsx_token(KTrue):parsx_applied_rule = 919;break;
					case parsx_token(KFalse):parsx_applied_rule = 920;break;
					case parsx_token(KNull):parsx_applied_rule = 921;break;
					case parsx_token(StringLiteral):parsx_applied_rule = 922;break;
					case parsx_token(NumberLiteral):parsx_applied_rule = 923;break;
					case parsx_token(Identifier):parsx_applied_rule = 924;break;
					case parsx_token(OMinus):parsx_applied_rule = 925;break;
					case parsx_token(KIf):parsx_applied_rule = 926;break;
					case parsx_token(OLParen):parsx_applied_rule = 927;break;
					default:parsx_applied_rule = 928;break;
				}
			}break;
			case 326:{ //Symbol type(0)@float@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Float)}
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 929;break;
					case parsx_token(OArrow):parsx_applied_rule = 930;break;
					case parsx_token(OVBar):parsx_applied_rule = 931;break;
					default:parsx_applied_rule = 932;break;
				}
			}break;
			case 327:{ //Symbol Stmts''rhs
				switch ( parsx_lookahead_token ){
					case parsx_token(KNot):parsx_applied_rule = 933;break;
					case parsx_token(KUnit):parsx_applied_rule = 934;break;
					case parsx_token(KTrue):parsx_applied_rule = 935;break;
					case parsx_token(KFalse):parsx_applied_rule = 936;break;
					case parsx_token(KNull):parsx_applied_rule = 937;break;
					case parsx_token(StringLiteral):parsx_applied_rule = 938;break;
					case parsx_token(NumberLiteral):parsx_applied_rule = 939;break;
					case parsx_token(Identifier):parsx_applied_rule = 940;break;
					case parsx_token(OSemicolon):parsx_applied_rule = 941;break;
					default:parsx_applied_rule = 942;break;
				}
			}break;
			case 328:{ //Symbol ParamGroup@{@TypeList@}@((parsx_token_type, List<TypeList>, parsx_token_type))=>{alloc(TypeTuple)(SrcSpan($1.where.from(), $3.where.to()), $2)}
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 943;break;
					case parsx_token(OArrow):parsx_applied_rule = 944;break;
					case parsx_token(OVBar):parsx_applied_rule = 945;break;
					default:parsx_applied_rule = 946;break;
				}
			}break;
			case 329:{ //Symbol ImportAs
				switch ( parsx_lookahead_token ){
					case parsx_token(KAs):parsx_applied_rule = 947;break;
					default:parsx_applied_rule = 948;break;
				}
			}break;
			case 330:{ //Symbol (type(0)@string@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::String)}@type(7)'rhs@type(5)@type(6)+type(5)@(@string@type(0)@string)
				switch ( parsx_lookahead_token ){
					case parsx_token(OVBar):parsx_applied_rule = 949;break;
					case parsx_token(OComma):parsx_applied_rule = 950;break;
					case parsx_token(ORParen):parsx_applied_rule = 951;break;
					default:return false;
				}
			}break;
			case 331:{ //Symbol type(0)@(@undef@type(0)@undef
				switch ( parsx_lookahead_token ){
					case parsx_token(OComma):parsx_applied_rule = 952;break;
					case parsx_token(ORParen):parsx_applied_rule = 953;break;
					default:return false;
				}
			}break;
			case 332:{ //Symbol (expr(10,False)'rhs+expr(8,False)'rhs+expr(4,False)'rhs+expr(3,False)'rhs+expr(2,False)@expr(3,False)+expr(1,False)'rhs+expr(0,False)'rhs+((Expr*,))=>{alloc(StmtEval)($1)})
				switch ( parsx_lookahead_token ){
					case parsx_token(OPeriod):parsx_applied_rule = 954;break;
					case parsx_token(OLParen):parsx_applied_rule = 955;break;
					case parsx_token(OMult):parsx_applied_rule = 956;break;
					case parsx_token(ODiv):parsx_applied_rule = 957;break;
					case parsx_token(ORem):parsx_applied_rule = 958;break;
					case parsx_token(OPlus):parsx_applied_rule = 959;break;
					case parsx_token(OMinus):parsx_applied_rule = 960;break;
					case parsx_token(OEQ):parsx_applied_rule = 961;break;
					case parsx_token(ONE):parsx_applied_rule = 962;break;
					case parsx_token(OLE):parsx_applied_rule = 963;break;
					case parsx_token(OGE):parsx_applied_rule = 964;break;
					case parsx_token(OLT):parsx_applied_rule = 965;break;
					case parsx_token(OGT):parsx_applied_rule = 966;break;
					case parsx_token(KAnd):parsx_applied_rule = 967;break;
					case parsx_token(OColon):parsx_applied_rule = 968;break;
					case parsx_token(KOr):parsx_applied_rule = 969;break;
					default:parsx_applied_rule = 970;break;
				}
			}break;
			case 333:{ //Symbol type(0)@{
				switch ( parsx_lookahead_token ){
					case parsx_token(KFloat):parsx_applied_rule = 971;break;
					case parsx_token(KString):parsx_applied_rule = 972;break;
					case parsx_token(KUnit):parsx_applied_rule = 973;break;
					case parsx_token(KBytes):parsx_applied_rule = 974;break;
					case parsx_token(Identifier):parsx_applied_rule = 975;break;
					case parsx_token(KUndef):parsx_applied_rule = 976;break;
					case parsx_token(KBool):parsx_applied_rule = 977;break;
					case parsx_token(OLBrace):parsx_applied_rule = 978;break;
					case parsx_token(OLParen):parsx_applied_rule = 979;break;
					case parsx_token(KInt):parsx_applied_rule = 980;break;
					case parsx_token(KDouble):parsx_applied_rule = 981;break;
					case parsx_token(ORBrace):parsx_applied_rule = 982;break;
					default:return false;
				}
			}break;
			case 334:{ //Symbol ParamGroup@(@Type@)@((parsx_token_type, Type*, parsx_token_type))=>{$2}@type(7)'rhs@type(5)@type(6)
				switch ( parsx_lookahead_token ){
					case parsx_token(OVBar):parsx_applied_rule = 983;break;
					default:parsx_applied_rule = 984;break;
				}
			}break;
			case 335:{ //Symbol (expr(10,True)'rhs+expr(8,True)'rhs+expr(4,True)'rhs+expr(3,True)'rhs+expr(2,True)@expr(3,True)+expr(1,True)'rhs+expr(0,True)'rhs+((Expr*,))=>{alloc(ExprList)($1)})
				switch ( parsx_lookahead_token ){
					case parsx_token(OPeriod):parsx_applied_rule = 985;break;
					case parsx_token(OLParen):parsx_applied_rule = 986;break;
					case parsx_token(OMult):parsx_applied_rule = 987;break;
					case parsx_token(ODiv):parsx_applied_rule = 988;break;
					case parsx_token(ORem):parsx_applied_rule = 989;break;
					case parsx_token(OPlus):parsx_applied_rule = 990;break;
					case parsx_token(OMinus):parsx_applied_rule = 991;break;
					case parsx_token(OEQ):parsx_applied_rule = 992;break;
					case parsx_token(ONE):parsx_applied_rule = 993;break;
					case parsx_token(OLE):parsx_applied_rule = 994;break;
					case parsx_token(OGE):parsx_applied_rule = 995;break;
					case parsx_token(OLT):parsx_applied_rule = 996;break;
					case parsx_token(OGT):parsx_applied_rule = 997;break;
					case parsx_token(KAnd):parsx_applied_rule = 998;break;
					case parsx_token(OColon):parsx_applied_rule = 999;break;
					case parsx_token(KOr):parsx_applied_rule = 1000;break;
					default:parsx_applied_rule = 1001;break;
				}
			}break;
			case 336:{ //Symbol (expr(4,True)'rhs+expr(3,True)'rhs+expr(2,True)@expr(3,True))
				switch ( parsx_lookahead_token ){
					case parsx_token(OMult):parsx_applied_rule = 1002;break;
					case parsx_token(ODiv):parsx_applied_rule = 1003;break;
					case parsx_token(ORem):parsx_applied_rule = 1004;break;
					case parsx_token(OPlus):parsx_applied_rule = 1005;break;
					case parsx_token(OMinus):parsx_applied_rule = 1006;break;
					case parsx_token(OEQ):parsx_applied_rule = 1007;break;
					case parsx_token(ONE):parsx_applied_rule = 1008;break;
					case parsx_token(OLE):parsx_applied_rule = 1009;break;
					case parsx_token(OGE):parsx_applied_rule = 1010;break;
					case parsx_token(OLT):parsx_applied_rule = 1011;break;
					case parsx_token(OGT):parsx_applied_rule = 1012;break;
					default:parsx_applied_rule = 1013;break;
				}
			}break;
			case 337:{ //Symbol Names'rhs
				switch ( parsx_lookahead_token ){
					case parsx_token(Identifier):parsx_applied_rule = 1014;break;
					default:parsx_applied_rule = 1015;break;
				}
			}break;
			case 338:{ //Symbol type(0)@(@(
				switch ( parsx_lookahead_token ){
					case parsx_token(KFloat):parsx_applied_rule = 1016;break;
					case parsx_token(KString):parsx_applied_rule = 1017;break;
					case parsx_token(Identifier):parsx_applied_rule = 1018;break;
					case parsx_token(KBytes):parsx_applied_rule = 1019;break;
					case parsx_token(ORParen):parsx_applied_rule = 1020;break;
					case parsx_token(OLParen):parsx_applied_rule = 1021;break;
					case parsx_token(KBool):parsx_applied_rule = 1022;break;
					case parsx_token(OLBrace):parsx_applied_rule = 1023;break;
					case parsx_token(KUndef):parsx_applied_rule = 1024;break;
					case parsx_token(KUnit):parsx_applied_rule = 1025;break;
					case parsx_token(KDouble):parsx_applied_rule = 1026;break;
					case parsx_token(KInt):parsx_applied_rule = 1027;break;
					default:return false;
				}
			}break;
			case 339:{ //Symbol (type(7)'rhs+ParamGroup@string@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::String)}@type(7)'rhs)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 1028;break;
					case parsx_token(OArrow):parsx_applied_rule = 1029;break;
					case parsx_token(OVBar):parsx_applied_rule = 1030;break;
					default:parsx_applied_rule = 1031;break;
				}
			}break;
			case 340:{ //Symbol type(0)@(
				switch ( parsx_lookahead_token ){
					case parsx_token(KFloat):parsx_applied_rule = 1032;break;
					case parsx_token(KString):parsx_applied_rule = 1033;break;
					case parsx_token(Identifier):parsx_applied_rule = 1034;break;
					case parsx_token(KBytes):parsx_applied_rule = 1035;break;
					case parsx_token(ORParen):parsx_applied_rule = 1036;break;
					case parsx_token(OLParen):parsx_applied_rule = 1037;break;
					case parsx_token(KBool):parsx_applied_rule = 1038;break;
					case parsx_token(OLBrace):parsx_applied_rule = 1039;break;
					case parsx_token(KUndef):parsx_applied_rule = 1040;break;
					case parsx_token(KUnit):parsx_applied_rule = 1041;break;
					case parsx_token(KDouble):parsx_applied_rule = 1042;break;
					case parsx_token(KInt):parsx_applied_rule = 1043;break;
					default:return false;
				}
			}break;
			case 341:{ //Symbol TopLevels
				switch ( parsx_lookahead_token ){
					case parsx_token(KGlobal):parsx_applied_rule = 1044;break;
					case parsx_token(KFunction):parsx_applied_rule = 1044;break;
					default:parsx_applied_rule = 1044;break;
				}
			}break;
			case 342:{ //Symbol expr(1,True)
				switch ( parsx_lookahead_token ){
					case parsx_token(KNot):parsx_applied_rule = 1045;break;
					case parsx_token(KUnit):parsx_applied_rule = 1046;break;
					case parsx_token(KTrue):parsx_applied_rule = 1047;break;
					case parsx_token(KFalse):parsx_applied_rule = 1048;break;
					case parsx_token(KNull):parsx_applied_rule = 1049;break;
					case parsx_token(StringLiteral):parsx_applied_rule = 1050;break;
					case parsx_token(NumberLiteral):parsx_applied_rule = 1051;break;
					case parsx_token(Identifier):parsx_applied_rule = 1052;break;
					case parsx_token(OMinus):parsx_applied_rule = 1053;break;
					case parsx_token(KIf):parsx_applied_rule = 1054;break;
					case parsx_token(OLParen):parsx_applied_rule = 1055;break;
					default:return false;
				}
			}break;
			case 343:{ //Symbol (expr(10,True)'rhs+expr(8,True)'rhs+expr(4,True)'rhs+expr(3,True)'rhs+expr(2,True)@expr(3,True)+expr(1,True)'rhs+expr(0,True)'rhs+((Expr*,))=>{alloc(StmtEval)($1)})
				switch ( parsx_lookahead_token ){
					case parsx_token(OPeriod):parsx_applied_rule = 1056;break;
					case parsx_token(OLParen):parsx_applied_rule = 1057;break;
					case parsx_token(OMult):parsx_applied_rule = 1058;break;
					case parsx_token(ODiv):parsx_applied_rule = 1059;break;
					case parsx_token(ORem):parsx_applied_rule = 1060;break;
					case parsx_token(OPlus):parsx_applied_rule = 1061;break;
					case parsx_token(OMinus):parsx_applied_rule = 1062;break;
					case parsx_token(OEQ):parsx_applied_rule = 1063;break;
					case parsx_token(ONE):parsx_applied_rule = 1064;break;
					case parsx_token(OLE):parsx_applied_rule = 1065;break;
					case parsx_token(OGE):parsx_applied_rule = 1066;break;
					case parsx_token(OLT):parsx_applied_rule = 1067;break;
					case parsx_token(OGT):parsx_applied_rule = 1068;break;
					case parsx_token(KAnd):parsx_applied_rule = 1069;break;
					case parsx_token(OColon):parsx_applied_rule = 1070;break;
					case parsx_token(KOr):parsx_applied_rule = 1071;break;
					default:parsx_applied_rule = 1072;break;
				}
			}break;
			case 344:{ //Symbol (type(0)@string@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::String)}+type(5)@(@string@type(0)@string)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 1073;break;
					case parsx_token(OArrow):parsx_applied_rule = 1074;break;
					case parsx_token(OVBar):parsx_applied_rule = 1075;break;
					case parsx_token(OComma):parsx_applied_rule = 1076;break;
					case parsx_token(ORParen):parsx_applied_rule = 1077;break;
					default:return false;
				}
			}break;
			case 345:{ //Symbol (type(0)@undef@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Undef)}@type(7)'rhs@type(5)@type(6)+type(0)@(@undef@type(0)@undef)
				switch ( parsx_lookahead_token ){
					case parsx_token(OVBar):parsx_applied_rule = 1078;break;
					case parsx_token(OComma):parsx_applied_rule = 1079;break;
					case parsx_token(ORParen):parsx_applied_rule = 1080;break;
					default:return false;
				}
			}break;
			case 346:{ //Symbol (type(7)'rhs+ParamGroup@unit@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Unit)}@type(7)'rhs)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 1081;break;
					case parsx_token(OArrow):parsx_applied_rule = 1082;break;
					case parsx_token(OVBar):parsx_applied_rule = 1083;break;
					default:parsx_applied_rule = 1084;break;
				}
			}break;
			case 347:{ //Symbol (expr(3,True)'rhs+expr(2,True)@expr(3,True))
				switch ( parsx_lookahead_token ){
					case parsx_token(OPlus):parsx_applied_rule = 1085;break;
					case parsx_token(OMinus):parsx_applied_rule = 1086;break;
					case parsx_token(OEQ):parsx_applied_rule = 1087;break;
					case parsx_token(ONE):parsx_applied_rule = 1088;break;
					case parsx_token(OLE):parsx_applied_rule = 1089;break;
					case parsx_token(OGE):parsx_applied_rule = 1090;break;
					case parsx_token(OLT):parsx_applied_rule = 1091;break;
					case parsx_token(OGT):parsx_applied_rule = 1092;break;
					default:parsx_applied_rule = 1093;break;
				}
			}break;
			case 348:{ //Symbol (Imports'rhs+TopLevels)
				switch ( parsx_lookahead_token ){
					case parsx_token(KImport):parsx_applied_rule = 1094;break;
					case parsx_token(KGlobal):parsx_applied_rule = 1095;break;
					case parsx_token(KFunction):parsx_applied_rule = 1095;break;
					default:parsx_applied_rule = 1095;break;
				}
			}break;
			case 349:{ //Symbol (type(0)@(@type(5)@(+type(0)@(@(@type(0)@()
				switch ( parsx_lookahead_token ){
					case parsx_token(OVBar):parsx_applied_rule = 1096;break;
					case parsx_token(OComma):parsx_applied_rule = 1097;break;
					case parsx_token(ORParen):parsx_applied_rule = 1098;break;
					default:return false;
				}
			}break;
			case 350:{ //Symbol (type(0)@unit@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Unit)}@type(7)'rhs@type(5)@type(6)+ParamGroup@(@unit@type(0)@unit)
				switch ( parsx_lookahead_token ){
					case parsx_token(OVBar):parsx_applied_rule = 1099;break;
					case parsx_token(OComma):parsx_applied_rule = 1100;break;
					case parsx_token(ORParen):parsx_applied_rule = 1101;break;
					default:return false;
				}
			}break;
			case 351:{ //Symbol ParamGroup@(@string@type(0)@string
				switch ( parsx_lookahead_token ){
					case parsx_token(OComma):parsx_applied_rule = 1102;break;
					case parsx_token(ORParen):parsx_applied_rule = 1103;break;
					default:return false;
				}
			}break;
			case 352:{ //Symbol ParamGroup@identifier@((parsx_token_type,))=>{WithSrcLoc<TypeReferenceNode*>($1.where.from(), alloc(TypeReferenceLeaf)(sym($1)))}
				switch ( parsx_lookahead_token ){
					case parsx_token(OPeriod):parsx_applied_rule = 1104;break;
					case parsx_token(OQuestion):parsx_applied_rule = 1105;break;
					case parsx_token(OArrow):parsx_applied_rule = 1105;break;
					case parsx_token(OVBar):parsx_applied_rule = 1105;break;
					default:parsx_applied_rule = 1105;break;
				}
			}break;
			case 353:{ //Symbol type(5)
				switch ( parsx_lookahead_token ){
					case parsx_token(KFloat):parsx_applied_rule = 1106;break;
					case parsx_token(KString):parsx_applied_rule = 1107;break;
					case parsx_token(KUnit):parsx_applied_rule = 1108;break;
					case parsx_token(KBytes):parsx_applied_rule = 1109;break;
					case parsx_token(Identifier):parsx_applied_rule = 1110;break;
					case parsx_token(KUndef):parsx_applied_rule = 1111;break;
					case parsx_token(KBool):parsx_applied_rule = 1112;break;
					case parsx_token(OLBrace):parsx_applied_rule = 1113;break;
					case parsx_token(OLParen):parsx_applied_rule = 1114;break;
					case parsx_token(KInt):parsx_applied_rule = 1115;break;
					case parsx_token(KDouble):parsx_applied_rule = 1116;break;
					default:return false;
				}
			}break;
			case 354:{ //Symbol type(0)@float@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Float)}@type(7)'rhs@type(5)@type(6)
				switch ( parsx_lookahead_token ){
					case parsx_token(OVBar):parsx_applied_rule = 1117;break;
					default:parsx_applied_rule = 1118;break;
				}
			}break;
			case 355:{ //Symbol (type(7)'rhs+type(0)@double@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Double)}@type(7)'rhs)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 1119;break;
					case parsx_token(OArrow):parsx_applied_rule = 1120;break;
					case parsx_token(OVBar):parsx_applied_rule = 1121;break;
					default:parsx_applied_rule = 1122;break;
				}
			}break;
			case 356:{ //Symbol (expr(10,True)'rhs+expr(8,True)'rhs+expr(4,True)'rhs+expr(3,True)'rhs+expr(2,True)@expr(3,True)+expr(1,True)'rhs+expr(0,True)'rhs)
				switch ( parsx_lookahead_token ){
					case parsx_token(OPeriod):parsx_applied_rule = 1123;break;
					case parsx_token(OLParen):parsx_applied_rule = 1124;break;
					case parsx_token(OMult):parsx_applied_rule = 1125;break;
					case parsx_token(ODiv):parsx_applied_rule = 1126;break;
					case parsx_token(ORem):parsx_applied_rule = 1127;break;
					case parsx_token(OPlus):parsx_applied_rule = 1128;break;
					case parsx_token(OMinus):parsx_applied_rule = 1129;break;
					case parsx_token(OEQ):parsx_applied_rule = 1130;break;
					case parsx_token(ONE):parsx_applied_rule = 1131;break;
					case parsx_token(OLE):parsx_applied_rule = 1132;break;
					case parsx_token(OGE):parsx_applied_rule = 1133;break;
					case parsx_token(OLT):parsx_applied_rule = 1134;break;
					case parsx_token(OGT):parsx_applied_rule = 1135;break;
					case parsx_token(KAnd):parsx_applied_rule = 1136;break;
					case parsx_token(OColon):parsx_applied_rule = 1137;break;
					case parsx_token(KOr):parsx_applied_rule = 1138;break;
					default:parsx_applied_rule = 1139;break;
				}
			}break;
			case 357:{ //Symbol expr(4,True)
				switch ( parsx_lookahead_token ){
					case parsx_token(KNot):parsx_applied_rule = 1140;break;
					case parsx_token(KUnit):parsx_applied_rule = 1141;break;
					case parsx_token(KTrue):parsx_applied_rule = 1142;break;
					case parsx_token(KFalse):parsx_applied_rule = 1143;break;
					case parsx_token(KNull):parsx_applied_rule = 1144;break;
					case parsx_token(StringLiteral):parsx_applied_rule = 1145;break;
					case parsx_token(NumberLiteral):parsx_applied_rule = 1146;break;
					case parsx_token(Identifier):parsx_applied_rule = 1147;break;
					case parsx_token(OMinus):parsx_applied_rule = 1148;break;
					case parsx_token(KIf):parsx_applied_rule = 1149;break;
					case parsx_token(OLParen):parsx_applied_rule = 1150;break;
					default:return false;
				}
			}break;
			case 358:{ //Symbol (type(7)'rhs+type(0)@undef@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Undef)}@type(7)'rhs)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 1151;break;
					case parsx_token(OArrow):parsx_applied_rule = 1152;break;
					case parsx_token(OVBar):parsx_applied_rule = 1153;break;
					default:parsx_applied_rule = 1154;break;
				}
			}break;
			case 359:{ //Symbol (type(0)@int@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Int)}+ParamGroup@(@int@type(0)@int)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 1155;break;
					case parsx_token(OArrow):parsx_applied_rule = 1156;break;
					case parsx_token(OVBar):parsx_applied_rule = 1157;break;
					case parsx_token(OComma):parsx_applied_rule = 1158;break;
					case parsx_token(ORParen):parsx_applied_rule = 1159;break;
					default:return false;
				}
			}break;
			case 360:{ //Symbol ParamGroup@{@TypeList@}@((parsx_token_type, List<TypeList>, parsx_token_type))=>{alloc(TypeTuple)(SrcSpan($1.where.from(), $3.where.to()), $2)}@type(7)'rhs@type(5)@type(6)
				switch ( parsx_lookahead_token ){
					case parsx_token(OVBar):parsx_applied_rule = 1160;break;
					default:parsx_applied_rule = 1161;break;
				}
			}break;
			case 361:{ //Symbol (type(7)'rhs+type(0)@string@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::String)}@type(7)'rhs+type(5)@(@string@type(0)@string)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 1162;break;
					case parsx_token(OArrow):parsx_applied_rule = 1163;break;
					case parsx_token(OVBar):parsx_applied_rule = 1164;break;
					case parsx_token(OComma):parsx_applied_rule = 1165;break;
					case parsx_token(ORParen):parsx_applied_rule = 1166;break;
					default:return false;
				}
			}break;
			case 362:{ //Symbol ParamGroup@(@identifier@type(0)@identifier
				switch ( parsx_lookahead_token ){
					case parsx_token(OComma):parsx_applied_rule = 1167;break;
					case parsx_token(ORParen):parsx_applied_rule = 1168;break;
					default:return false;
				}
			}break;
			case 363:{ //Symbol type(0)@(@float@type(0)@float
				switch ( parsx_lookahead_token ){
					case parsx_token(OComma):parsx_applied_rule = 1169;break;
					case parsx_token(ORParen):parsx_applied_rule = 1170;break;
					default:return false;
				}
			}break;
			case 364:{ //Symbol (expr(8,False)'rhs+expr(4,False)'rhs+expr(3,False)'rhs+expr(2,False)@expr(3,False)+expr(1,False)'rhs+expr(0,False)'rhs+((Expr*,))=>{alloc(StmtEval)($1)})
				switch ( parsx_lookahead_token ){
					case parsx_token(OLParen):parsx_applied_rule = 1171;break;
					case parsx_token(OMult):parsx_applied_rule = 1172;break;
					case parsx_token(ODiv):parsx_applied_rule = 1173;break;
					case parsx_token(ORem):parsx_applied_rule = 1174;break;
					case parsx_token(OPlus):parsx_applied_rule = 1175;break;
					case parsx_token(OMinus):parsx_applied_rule = 1176;break;
					case parsx_token(OEQ):parsx_applied_rule = 1177;break;
					case parsx_token(ONE):parsx_applied_rule = 1178;break;
					case parsx_token(OLE):parsx_applied_rule = 1179;break;
					case parsx_token(OGE):parsx_applied_rule = 1180;break;
					case parsx_token(OLT):parsx_applied_rule = 1181;break;
					case parsx_token(OGT):parsx_applied_rule = 1182;break;
					case parsx_token(KAnd):parsx_applied_rule = 1183;break;
					case parsx_token(OColon):parsx_applied_rule = 1184;break;
					case parsx_token(KOr):parsx_applied_rule = 1185;break;
					default:parsx_applied_rule = 1186;break;
				}
			}break;
			case 365:{ //Symbol Expr
				switch ( parsx_lookahead_token ){
					case parsx_token(KNot):parsx_applied_rule = 1187;break;
					case parsx_token(KUnit):parsx_applied_rule = 1188;break;
					case parsx_token(KTrue):parsx_applied_rule = 1189;break;
					case parsx_token(KFalse):parsx_applied_rule = 1190;break;
					case parsx_token(KNull):parsx_applied_rule = 1191;break;
					case parsx_token(StringLiteral):parsx_applied_rule = 1192;break;
					case parsx_token(NumberLiteral):parsx_applied_rule = 1193;break;
					case parsx_token(Identifier):parsx_applied_rule = 1194;break;
					case parsx_token(OMinus):parsx_applied_rule = 1195;break;
					case parsx_token(KIf):parsx_applied_rule = 1196;break;
					case parsx_token(OLParen):parsx_applied_rule = 1197;break;
					default:return false;
				}
			}break;
			case 366:{ //Symbol expr(0,True)'rhs
				switch ( parsx_lookahead_token ){
					case parsx_token(OColon):parsx_applied_rule = 1198;break;
					case parsx_token(KOr):parsx_applied_rule = 1199;break;
					default:parsx_applied_rule = 1200;break;
				}
			}break;
			case 367:{ //Symbol ExprPrim
				switch ( parsx_lookahead_token ){
					case parsx_token(KUnit):parsx_applied_rule = 1201;break;
					case parsx_token(KTrue):parsx_applied_rule = 1202;break;
					case parsx_token(KFalse):parsx_applied_rule = 1203;break;
					case parsx_token(KNull):parsx_applied_rule = 1204;break;
					case parsx_token(StringLiteral):parsx_applied_rule = 1205;break;
					case parsx_token(NumberLiteral):parsx_applied_rule = 1206;break;
					case parsx_token(Identifier):parsx_applied_rule = 1207;break;
					default:return false;
				}
			}break;
			case 368:{ //Symbol (type(0)@bytes@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Bytes)}+ParamGroup@(@bytes@type(0)@bytes)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 1208;break;
					case parsx_token(OArrow):parsx_applied_rule = 1209;break;
					case parsx_token(OVBar):parsx_applied_rule = 1210;break;
					case parsx_token(OComma):parsx_applied_rule = 1211;break;
					case parsx_token(ORParen):parsx_applied_rule = 1212;break;
					default:return false;
				}
			}break;
			case 369:{ //Symbol ParamGroup@(@int@type(0)@int
				switch ( parsx_lookahead_token ){
					case parsx_token(OComma):parsx_applied_rule = 1213;break;
					case parsx_token(ORParen):parsx_applied_rule = 1214;break;
					default:return false;
				}
			}break;
			case 370:{ //Symbol (type(7)'rhs+ParamGroup@float@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Float)}@type(7)'rhs)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 1215;break;
					case parsx_token(OArrow):parsx_applied_rule = 1216;break;
					case parsx_token(OVBar):parsx_applied_rule = 1217;break;
					default:parsx_applied_rule = 1218;break;
				}
			}break;
			case 371:{ //Symbol expr(3,True)'rhs
				switch ( parsx_lookahead_token ){
					case parsx_token(OPlus):parsx_applied_rule = 1219;break;
					case parsx_token(OMinus):parsx_applied_rule = 1220;break;
					default:parsx_applied_rule = 1221;break;
				}
			}break;
			case 372:{ //Symbol type(0)@{@TypeList@}@((parsx_token_type, List<TypeList>, parsx_token_type))=>{alloc(TypeTuple)(SrcSpan($1.where.from(), $3.where.to()), $2)}@type(7)'rhs@type(5)@type(6)
				switch ( parsx_lookahead_token ){
					case parsx_token(OVBar):parsx_applied_rule = 1222;break;
					default:parsx_applied_rule = 1223;break;
				}
			}break;
			case 373:{ //Symbol (type(0)@int@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Int)}@type(7)'rhs@type(5)@type(6)+type(5)@(@int@type(0)@int)
				switch ( parsx_lookahead_token ){
					case parsx_token(OVBar):parsx_applied_rule = 1224;break;
					case parsx_token(OComma):parsx_applied_rule = 1225;break;
					case parsx_token(ORParen):parsx_applied_rule = 1226;break;
					default:return false;
				}
			}break;
			case 374:{ //Symbol type(0)@(@{@type(0)@{
				switch ( parsx_lookahead_token ){
					case parsx_token(OComma):parsx_applied_rule = 1227;break;
					case parsx_token(ORParen):parsx_applied_rule = 1228;break;
					default:return false;
				}
			}break;
			case 375:{ //Symbol (type(7)'rhs+ParamGroup@undef@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Undef)}@type(7)'rhs)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 1229;break;
					case parsx_token(OArrow):parsx_applied_rule = 1230;break;
					case parsx_token(OVBar):parsx_applied_rule = 1231;break;
					default:parsx_applied_rule = 1232;break;
				}
			}break;
			case 376:{ //Symbol expr(5,True)
				switch ( parsx_lookahead_token ){
					case parsx_token(KNot):parsx_applied_rule = 1233;break;
					case parsx_token(KUnit):parsx_applied_rule = 1234;break;
					case parsx_token(KTrue):parsx_applied_rule = 1235;break;
					case parsx_token(KFalse):parsx_applied_rule = 1236;break;
					case parsx_token(KNull):parsx_applied_rule = 1237;break;
					case parsx_token(StringLiteral):parsx_applied_rule = 1238;break;
					case parsx_token(NumberLiteral):parsx_applied_rule = 1239;break;
					case parsx_token(Identifier):parsx_applied_rule = 1240;break;
					case parsx_token(OMinus):parsx_applied_rule = 1241;break;
					case parsx_token(KIf):parsx_applied_rule = 1242;break;
					case parsx_token(OLParen):parsx_applied_rule = 1243;break;
					default:return false;
				}
			}break;
			case 377:{ //Symbol (type(7)'rhs+type(0)@string@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::String)}@type(7)'rhs+type(0)@(@string@type(0)@string)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 1244;break;
					case parsx_token(OArrow):parsx_applied_rule = 1245;break;
					case parsx_token(OVBar):parsx_applied_rule = 1246;break;
					case parsx_token(OComma):parsx_applied_rule = 1247;break;
					case parsx_token(ORParen):parsx_applied_rule = 1248;break;
					default:return false;
				}
			}break;
			case 378:{ //Symbol type(0)@identifier@((parsx_token_type,))=>{WithSrcLoc<TypeReferenceNode*>($1.where.from(), alloc(TypeReferenceLeaf)(sym($1)))}@TypeReference'rhs@((WithSrcLoc<TypeReferenceNode*>,))=>{alloc(TypeReference)(to_here($1), $1)}@type(7)'rhs@type(5)@type(6)
				switch ( parsx_lookahead_token ){
					case parsx_token(OVBar):parsx_applied_rule = 1249;break;
					default:parsx_applied_rule = 1250;break;
				}
			}break;
			case 379:{ //Symbol FunctionSignature
				switch ( parsx_lookahead_token ){
					case parsx_token(OLParen):parsx_applied_rule = 1251;break;
					default:return false;
				}
			}break;
			case 380:{ //Symbol (type(0)@bytes@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Bytes)}+type(5)@(@bytes@type(0)@bytes)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 1252;break;
					case parsx_token(OArrow):parsx_applied_rule = 1253;break;
					case parsx_token(OVBar):parsx_applied_rule = 1254;break;
					case parsx_token(OComma):parsx_applied_rule = 1255;break;
					case parsx_token(ORParen):parsx_applied_rule = 1256;break;
					default:return false;
				}
			}break;
			case 381:{ //Symbol TypeReference@TypeReference@.
				switch ( parsx_lookahead_token ){
					case parsx_token(Identifier):parsx_applied_rule = 1257;break;
					case parsx_token(OLT):parsx_applied_rule = 1258;break;
					case parsx_token(ONE):parsx_applied_rule = 1259;break;
					default:return false;
				}
			}break;
			case 382:{ //Symbol ParamGroup@bytes@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Bytes)}
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 1260;break;
					case parsx_token(OArrow):parsx_applied_rule = 1261;break;
					case parsx_token(OVBar):parsx_applied_rule = 1262;break;
					default:parsx_applied_rule = 1263;break;
				}
			}break;
			case 383:{ //Symbol ParamGroup@string@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::String)}
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 1264;break;
					case parsx_token(OArrow):parsx_applied_rule = 1265;break;
					case parsx_token(OVBar):parsx_applied_rule = 1266;break;
					default:parsx_applied_rule = 1267;break;
				}
			}break;
			case 384:{ //Symbol (expr(8,True)'rhs+expr(4,True)'rhs+expr(3,True)'rhs+expr(2,True)@expr(3,True))
				switch ( parsx_lookahead_token ){
					case parsx_token(OLParen):parsx_applied_rule = 1268;break;
					case parsx_token(OMult):parsx_applied_rule = 1269;break;
					case parsx_token(ODiv):parsx_applied_rule = 1270;break;
					case parsx_token(ORem):parsx_applied_rule = 1271;break;
					case parsx_token(OPlus):parsx_applied_rule = 1272;break;
					case parsx_token(OMinus):parsx_applied_rule = 1273;break;
					case parsx_token(OEQ):parsx_applied_rule = 1274;break;
					case parsx_token(ONE):parsx_applied_rule = 1275;break;
					case parsx_token(OLE):parsx_applied_rule = 1276;break;
					case parsx_token(OGE):parsx_applied_rule = 1277;break;
					case parsx_token(OLT):parsx_applied_rule = 1278;break;
					case parsx_token(OGT):parsx_applied_rule = 1279;break;
					default:parsx_applied_rule = 1280;break;
				}
			}break;
			case 385:{ //Symbol (type(7)'rhs+type(0)@(@Type@)@((parsx_token_type, Type*, parsx_token_type))=>{$2}@type(7)'rhs)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 1281;break;
					case parsx_token(OArrow):parsx_applied_rule = 1282;break;
					case parsx_token(OVBar):parsx_applied_rule = 1283;break;
					default:parsx_applied_rule = 1284;break;
				}
			}break;
			case 386:{ //Symbol type(0)@(@(@type(0)@(
				switch ( parsx_lookahead_token ){
					case parsx_token(OComma):parsx_applied_rule = 1285;break;
					case parsx_token(ORParen):parsx_applied_rule = 1286;break;
					default:return false;
				}
			}break;
			case 387:{ //Symbol (type(0)@bool@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Bool)}+type(5)@(@bool@type(0)@bool)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 1287;break;
					case parsx_token(OArrow):parsx_applied_rule = 1288;break;
					case parsx_token(OVBar):parsx_applied_rule = 1289;break;
					case parsx_token(OComma):parsx_applied_rule = 1290;break;
					case parsx_token(ORParen):parsx_applied_rule = 1291;break;
					default:return false;
				}
			}break;
			case 388:{ //Symbol (type(0)@int@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Int)}+type(0)@(@int@type(0)@int)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 1292;break;
					case parsx_token(OArrow):parsx_applied_rule = 1293;break;
					case parsx_token(OVBar):parsx_applied_rule = 1294;break;
					case parsx_token(OComma):parsx_applied_rule = 1295;break;
					case parsx_token(ORParen):parsx_applied_rule = 1296;break;
					default:return false;
				}
			}break;
			case 389:{ //Symbol (type(7)'rhs+type(0)@bool@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Bool)}@type(7)'rhs)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 1297;break;
					case parsx_token(OArrow):parsx_applied_rule = 1298;break;
					case parsx_token(OVBar):parsx_applied_rule = 1299;break;
					default:parsx_applied_rule = 1300;break;
				}
			}break;
			case 390:{ //Symbol expr(10,False)@expr(10,False)@.
				switch ( parsx_lookahead_token ){
					case parsx_token(Identifier):parsx_applied_rule = 1301;break;
					case parsx_token(OLT):parsx_applied_rule = 1302;break;
					default:return false;
				}
			}break;
			case 391:{ //Symbol (expr(8,True)'rhs+expr(4,True)'rhs+expr(3,True)'rhs+expr(2,True)@expr(3,True)+expr(1,True)'rhs+expr(0,True)'rhs)
				switch ( parsx_lookahead_token ){
					case parsx_token(OLParen):parsx_applied_rule = 1303;break;
					case parsx_token(OMult):parsx_applied_rule = 1304;break;
					case parsx_token(ODiv):parsx_applied_rule = 1305;break;
					case parsx_token(ORem):parsx_applied_rule = 1306;break;
					case parsx_token(OPlus):parsx_applied_rule = 1307;break;
					case parsx_token(OMinus):parsx_applied_rule = 1308;break;
					case parsx_token(OEQ):parsx_applied_rule = 1309;break;
					case parsx_token(ONE):parsx_applied_rule = 1310;break;
					case parsx_token(OLE):parsx_applied_rule = 1311;break;
					case parsx_token(OGE):parsx_applied_rule = 1312;break;
					case parsx_token(OLT):parsx_applied_rule = 1313;break;
					case parsx_token(OGT):parsx_applied_rule = 1314;break;
					case parsx_token(KAnd):parsx_applied_rule = 1315;break;
					case parsx_token(OColon):parsx_applied_rule = 1316;break;
					case parsx_token(KOr):parsx_applied_rule = 1317;break;
					default:parsx_applied_rule = 1318;break;
				}
			}break;
			case 392:{ //Symbol ParamGroup@bytes@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Bytes)}@type(7)'rhs@type(5)@type(6)
				switch ( parsx_lookahead_token ){
					case parsx_token(OVBar):parsx_applied_rule = 1319;break;
					default:parsx_applied_rule = 1320;break;
				}
			}break;
			case 393:{ //Symbol (expr(8,True)'rhs+expr(4,True)'rhs+expr(3,True)'rhs+expr(2,True)@expr(3,True)+expr(1,True)'rhs+expr(0,True)'rhs+((Expr*,))=>{alloc(StmtEval)($1)})
				switch ( parsx_lookahead_token ){
					case parsx_token(OLParen):parsx_applied_rule = 1321;break;
					case parsx_token(OMult):parsx_applied_rule = 1322;break;
					case parsx_token(ODiv):parsx_applied_rule = 1323;break;
					case parsx_token(ORem):parsx_applied_rule = 1324;break;
					case parsx_token(OPlus):parsx_applied_rule = 1325;break;
					case parsx_token(OMinus):parsx_applied_rule = 1326;break;
					case parsx_token(OEQ):parsx_applied_rule = 1327;break;
					case parsx_token(ONE):parsx_applied_rule = 1328;break;
					case parsx_token(OLE):parsx_applied_rule = 1329;break;
					case parsx_token(OGE):parsx_applied_rule = 1330;break;
					case parsx_token(OLT):parsx_applied_rule = 1331;break;
					case parsx_token(OGT):parsx_applied_rule = 1332;break;
					case parsx_token(KAnd):parsx_applied_rule = 1333;break;
					case parsx_token(OColon):parsx_applied_rule = 1334;break;
					case parsx_token(KOr):parsx_applied_rule = 1335;break;
					default:parsx_applied_rule = 1336;break;
				}
			}break;
			case 394:{ //Symbol (type(0)@bytes@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Bytes)}@type(7)'rhs@type(5)@type(6)+type(5)@(@bytes@type(0)@bytes)
				switch ( parsx_lookahead_token ){
					case parsx_token(OVBar):parsx_applied_rule = 1337;break;
					case parsx_token(OComma):parsx_applied_rule = 1338;break;
					case parsx_token(ORParen):parsx_applied_rule = 1339;break;
					default:return false;
				}
			}break;
			case 395:{ //Symbol expr(3,True)
				switch ( parsx_lookahead_token ){
					case parsx_token(KNot):parsx_applied_rule = 1340;break;
					case parsx_token(KUnit):parsx_applied_rule = 1341;break;
					case parsx_token(KTrue):parsx_applied_rule = 1342;break;
					case parsx_token(KFalse):parsx_applied_rule = 1343;break;
					case parsx_token(KNull):parsx_applied_rule = 1344;break;
					case parsx_token(StringLiteral):parsx_applied_rule = 1345;break;
					case parsx_token(NumberLiteral):parsx_applied_rule = 1346;break;
					case parsx_token(Identifier):parsx_applied_rule = 1347;break;
					case parsx_token(OMinus):parsx_applied_rule = 1348;break;
					case parsx_token(KIf):parsx_applied_rule = 1349;break;
					case parsx_token(OLParen):parsx_applied_rule = 1350;break;
					default:return false;
				}
			}break;
			case 396:{ //Symbol (type(7)'rhs+type(0)@float@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Float)}@type(7)'rhs+type(0)@(@float@type(0)@float)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 1351;break;
					case parsx_token(OArrow):parsx_applied_rule = 1352;break;
					case parsx_token(OVBar):parsx_applied_rule = 1353;break;
					case parsx_token(OComma):parsx_applied_rule = 1354;break;
					case parsx_token(ORParen):parsx_applied_rule = 1355;break;
					default:return false;
				}
			}break;
			case 397:{ //Symbol TypeList2'rhs
				switch ( parsx_lookahead_token ){
					case parsx_token(OComma):parsx_applied_rule = 1356;break;
					default:parsx_applied_rule = 1357;break;
				}
			}break;
			case 398:{ //Symbol (expr(8,True)'rhs+expr(4,True)'rhs+expr(3,True)'rhs+expr(2,True)@expr(3,True)+expr(1,True)'rhs)
				switch ( parsx_lookahead_token ){
					case parsx_token(OLParen):parsx_applied_rule = 1358;break;
					case parsx_token(OMult):parsx_applied_rule = 1359;break;
					case parsx_token(ODiv):parsx_applied_rule = 1360;break;
					case parsx_token(ORem):parsx_applied_rule = 1361;break;
					case parsx_token(OPlus):parsx_applied_rule = 1362;break;
					case parsx_token(OMinus):parsx_applied_rule = 1363;break;
					case parsx_token(OEQ):parsx_applied_rule = 1364;break;
					case parsx_token(ONE):parsx_applied_rule = 1365;break;
					case parsx_token(OLE):parsx_applied_rule = 1366;break;
					case parsx_token(OGE):parsx_applied_rule = 1367;break;
					case parsx_token(OLT):parsx_applied_rule = 1368;break;
					case parsx_token(OGT):parsx_applied_rule = 1369;break;
					case parsx_token(KAnd):parsx_applied_rule = 1370;break;
					default:parsx_applied_rule = 1371;break;
				}
			}break;
			case 399:{ //Symbol (expr(10,True)'rhs+expr(8,True)'rhs)
				switch ( parsx_lookahead_token ){
					case parsx_token(OPeriod):parsx_applied_rule = 1372;break;
					case parsx_token(OLParen):parsx_applied_rule = 1373;break;
					default:parsx_applied_rule = 1374;break;
				}
			}break;
			case 400:{ //Symbol type(0)@(@int@type(0)@int
				switch ( parsx_lookahead_token ){
					case parsx_token(OComma):parsx_applied_rule = 1375;break;
					case parsx_token(ORParen):parsx_applied_rule = 1376;break;
					default:return false;
				}
			}break;
			case 401:{ //Symbol (expr(3,False)'rhs+expr(2,False)@expr(3,False)+expr(1,False)'rhs+expr(0,False)'rhs+((Expr*,))=>{alloc(StmtEval)($1)})
				switch ( parsx_lookahead_token ){
					case parsx_token(OPlus):parsx_applied_rule = 1377;break;
					case parsx_token(OMinus):parsx_applied_rule = 1378;break;
					case parsx_token(OEQ):parsx_applied_rule = 1379;break;
					case parsx_token(ONE):parsx_applied_rule = 1380;break;
					case parsx_token(OLE):parsx_applied_rule = 1381;break;
					case parsx_token(OGE):parsx_applied_rule = 1382;break;
					case parsx_token(OLT):parsx_applied_rule = 1383;break;
					case parsx_token(OGT):parsx_applied_rule = 1384;break;
					case parsx_token(KAnd):parsx_applied_rule = 1385;break;
					case parsx_token(OColon):parsx_applied_rule = 1386;break;
					case parsx_token(KOr):parsx_applied_rule = 1387;break;
					default:parsx_applied_rule = 1388;break;
				}
			}break;
			case 402:{ //Symbol Imports'rhs
				switch ( parsx_lookahead_token ){
					case parsx_token(KImport):parsx_applied_rule = 1389;break;
					default:parsx_applied_rule = 1390;break;
				}
			}break;
			case 403:{ //Symbol ParamGroups
				switch ( parsx_lookahead_token ){
					case parsx_token(KFloat):parsx_applied_rule = 1392;break;
					case parsx_token(KString):parsx_applied_rule = 1393;break;
					case parsx_token(KUnit):parsx_applied_rule = 1394;break;
					case parsx_token(KBytes):parsx_applied_rule = 1395;break;
					case parsx_token(KUndef):parsx_applied_rule = 1396;break;
					case parsx_token(KBool):parsx_applied_rule = 1397;break;
					case parsx_token(OLBrace):parsx_applied_rule = 1398;break;
					case parsx_token(OLParen):parsx_applied_rule = 1399;break;
					case parsx_token(Identifier):parsx_applied_rule = 1400;break;
					case parsx_token(KDouble):parsx_applied_rule = 1401;break;
					case parsx_token(KInt):parsx_applied_rule = 1402;break;
					default:parsx_applied_rule = 1391;break;
				}
			}break;
			case 404:{ //Symbol (type(7)'rhs+type(0)@unit@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Unit)}@type(7)'rhs+ParamGroup@(@unit@type(0)@unit)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 1403;break;
					case parsx_token(OArrow):parsx_applied_rule = 1404;break;
					case parsx_token(OVBar):parsx_applied_rule = 1405;break;
					case parsx_token(OComma):parsx_applied_rule = 1406;break;
					case parsx_token(ORParen):parsx_applied_rule = 1407;break;
					default:return false;
				}
			}break;
			case 405:{ //Symbol ParamGroup@(
				switch ( parsx_lookahead_token ){
					case parsx_token(KFloat):parsx_applied_rule = 1408;break;
					case parsx_token(KString):parsx_applied_rule = 1409;break;
					case parsx_token(Identifier):parsx_applied_rule = 1410;break;
					case parsx_token(KBytes):parsx_applied_rule = 1411;break;
					case parsx_token(ORParen):parsx_applied_rule = 1412;break;
					case parsx_token(OLParen):parsx_applied_rule = 1413;break;
					case parsx_token(KBool):parsx_applied_rule = 1414;break;
					case parsx_token(OLBrace):parsx_applied_rule = 1415;break;
					case parsx_token(KUndef):parsx_applied_rule = 1416;break;
					case parsx_token(KUnit):parsx_applied_rule = 1417;break;
					case parsx_token(KDouble):parsx_applied_rule = 1418;break;
					case parsx_token(KInt):parsx_applied_rule = 1419;break;
					default:return false;
				}
			}break;
			case 406:{ //Symbol (type(0)@undef@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Undef)}@type(7)'rhs@type(5)@type(6)+ParamGroup@(@undef@type(0)@undef)
				switch ( parsx_lookahead_token ){
					case parsx_token(OVBar):parsx_applied_rule = 1420;break;
					case parsx_token(OComma):parsx_applied_rule = 1421;break;
					case parsx_token(ORParen):parsx_applied_rule = 1422;break;
					default:return false;
				}
			}break;
			case 407:{ //Symbol (expr(1,True)'rhs+expr(0,True)'rhs)
				switch ( parsx_lookahead_token ){
					case parsx_token(KAnd):parsx_applied_rule = 1423;break;
					case parsx_token(OColon):parsx_applied_rule = 1424;break;
					case parsx_token(KOr):parsx_applied_rule = 1425;break;
					default:parsx_applied_rule = 1426;break;
				}
			}break;
			case 408:{ //Symbol type(0)@(@bool@type(0)@bool
				switch ( parsx_lookahead_token ){
					case parsx_token(OComma):parsx_applied_rule = 1427;break;
					case parsx_token(ORParen):parsx_applied_rule = 1428;break;
					default:return false;
				}
			}break;
			case 409:{ //Symbol (type(0)@unit@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Unit)}@type(7)'rhs@type(5)@type(6)+type(0)@(@unit@type(0)@unit)
				switch ( parsx_lookahead_token ){
					case parsx_token(OVBar):parsx_applied_rule = 1429;break;
					case parsx_token(OComma):parsx_applied_rule = 1430;break;
					case parsx_token(ORParen):parsx_applied_rule = 1431;break;
					default:return false;
				}
			}break;
			case 410:{ //Symbol ParamGroup@(@(@type(0)@(
				switch ( parsx_lookahead_token ){
					case parsx_token(OComma):parsx_applied_rule = 1432;break;
					case parsx_token(ORParen):parsx_applied_rule = 1433;break;
					default:return false;
				}
			}break;
			case 411:{ //Symbol (expr(8,True)'rhs+expr(4,True)'rhs+expr(3,True)'rhs)
				switch ( parsx_lookahead_token ){
					case parsx_token(OLParen):parsx_applied_rule = 1434;break;
					case parsx_token(OMult):parsx_applied_rule = 1435;break;
					case parsx_token(ODiv):parsx_applied_rule = 1436;break;
					case parsx_token(ORem):parsx_applied_rule = 1437;break;
					case parsx_token(OPlus):parsx_applied_rule = 1438;break;
					case parsx_token(OMinus):parsx_applied_rule = 1439;break;
					default:parsx_applied_rule = 1440;break;
				}
			}break;
			case 412:{ //Symbol (type(7)'rhs+type(0)@bytes@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Bytes)}@type(7)'rhs+type(5)@(@bytes@type(0)@bytes)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 1441;break;
					case parsx_token(OArrow):parsx_applied_rule = 1442;break;
					case parsx_token(OVBar):parsx_applied_rule = 1443;break;
					case parsx_token(OComma):parsx_applied_rule = 1444;break;
					case parsx_token(ORParen):parsx_applied_rule = 1445;break;
					default:return false;
				}
			}break;
			case 413:{ //Symbol TypeUnion
				switch ( parsx_lookahead_token ){
					case parsx_token(KFloat):parsx_applied_rule = 1446;break;
					case parsx_token(KString):parsx_applied_rule = 1447;break;
					case parsx_token(KUnit):parsx_applied_rule = 1448;break;
					case parsx_token(KBytes):parsx_applied_rule = 1449;break;
					case parsx_token(Identifier):parsx_applied_rule = 1450;break;
					case parsx_token(KUndef):parsx_applied_rule = 1451;break;
					case parsx_token(KBool):parsx_applied_rule = 1452;break;
					case parsx_token(OLBrace):parsx_applied_rule = 1453;break;
					case parsx_token(OLParen):parsx_applied_rule = 1454;break;
					case parsx_token(KInt):parsx_applied_rule = 1455;break;
					case parsx_token(KDouble):parsx_applied_rule = 1456;break;
					default:return false;
				}
			}break;
			case 414:{ //Symbol expr(1,True)'rhs
				switch ( parsx_lookahead_token ){
					case parsx_token(KAnd):parsx_applied_rule = 1457;break;
					default:parsx_applied_rule = 1458;break;
				}
			}break;
			case 415:{ //Symbol (TypeList''rhs+type(0)@{@TypeList)
				switch ( parsx_lookahead_token ){
					case parsx_token(OComma):parsx_applied_rule = 1459;break;
					case parsx_token(ORBrace):parsx_applied_rule = 1460;break;
					default:return false;
				}
			}break;
			case 416:{ //Symbol (type(7)'rhs+type(0)@string@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::String)}@type(7)'rhs+ParamGroup@(@string@type(0)@string)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 1461;break;
					case parsx_token(OArrow):parsx_applied_rule = 1462;break;
					case parsx_token(OVBar):parsx_applied_rule = 1463;break;
					case parsx_token(OComma):parsx_applied_rule = 1464;break;
					case parsx_token(ORParen):parsx_applied_rule = 1465;break;
					default:return false;
				}
			}break;
			case 417:{ //Symbol (expr(4,True)'rhs+expr(3,True)'rhs)
				switch ( parsx_lookahead_token ){
					case parsx_token(OMult):parsx_applied_rule = 1466;break;
					case parsx_token(ODiv):parsx_applied_rule = 1467;break;
					case parsx_token(ORem):parsx_applied_rule = 1468;break;
					case parsx_token(OPlus):parsx_applied_rule = 1469;break;
					case parsx_token(OMinus):parsx_applied_rule = 1470;break;
					default:parsx_applied_rule = 1471;break;
				}
			}break;
			case 418:{ //Symbol type(0)@undef@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Undef)}
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 1472;break;
					case parsx_token(OArrow):parsx_applied_rule = 1473;break;
					case parsx_token(OVBar):parsx_applied_rule = 1474;break;
					default:parsx_applied_rule = 1475;break;
				}
			}break;
			case 419:{ //Symbol ParamGroup@float@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Float)}
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 1476;break;
					case parsx_token(OArrow):parsx_applied_rule = 1477;break;
					case parsx_token(OVBar):parsx_applied_rule = 1478;break;
					default:parsx_applied_rule = 1479;break;
				}
			}break;
			case 420:{ //Symbol ParamGroup@{
				switch ( parsx_lookahead_token ){
					case parsx_token(KFloat):parsx_applied_rule = 1480;break;
					case parsx_token(KString):parsx_applied_rule = 1481;break;
					case parsx_token(KUnit):parsx_applied_rule = 1482;break;
					case parsx_token(KBytes):parsx_applied_rule = 1483;break;
					case parsx_token(Identifier):parsx_applied_rule = 1484;break;
					case parsx_token(KUndef):parsx_applied_rule = 1485;break;
					case parsx_token(KBool):parsx_applied_rule = 1486;break;
					case parsx_token(OLBrace):parsx_applied_rule = 1487;break;
					case parsx_token(OLParen):parsx_applied_rule = 1488;break;
					case parsx_token(KInt):parsx_applied_rule = 1489;break;
					case parsx_token(KDouble):parsx_applied_rule = 1490;break;
					case parsx_token(ORBrace):parsx_applied_rule = 1491;break;
					default:return false;
				}
			}break;
			case 421:{ //Symbol ParamGroup@identifier@((parsx_token_type,))=>{WithSrcLoc<TypeReferenceNode*>($1.where.from(), alloc(TypeReferenceLeaf)(sym($1)))}@TypeReference'rhs@((WithSrcLoc<TypeReferenceNode*>,))=>{alloc(TypeReference)(to_here($1), $1)}@type(7)'rhs@type(5)@type(6)
				switch ( parsx_lookahead_token ){
					case parsx_token(OVBar):parsx_applied_rule = 1492;break;
					default:parsx_applied_rule = 1493;break;
				}
			}break;
			case 422:{ //Symbol (type(7)'rhs+ParamGroup@identifier@((parsx_token_type,))=>{WithSrcLoc<TypeReferenceNode*>($1.where.from(), alloc(TypeReferenceLeaf)(sym($1)))}@TypeReference'rhs@((WithSrcLoc<TypeReferenceNode*>,))=>{alloc(TypeReference)(to_here($1), $1)}@type(7)'rhs)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 1494;break;
					case parsx_token(OArrow):parsx_applied_rule = 1495;break;
					case parsx_token(OVBar):parsx_applied_rule = 1496;break;
					default:parsx_applied_rule = 1497;break;
				}
			}break;
			case 423:{ //Symbol (expr(4,True)'rhs+expr(3,True)'rhs+expr(2,True)@expr(3,True)+expr(1,True)'rhs+expr(0,True)'rhs)
				switch ( parsx_lookahead_token ){
					case parsx_token(OMult):parsx_applied_rule = 1498;break;
					case parsx_token(ODiv):parsx_applied_rule = 1499;break;
					case parsx_token(ORem):parsx_applied_rule = 1500;break;
					case parsx_token(OPlus):parsx_applied_rule = 1501;break;
					case parsx_token(OMinus):parsx_applied_rule = 1502;break;
					case parsx_token(OEQ):parsx_applied_rule = 1503;break;
					case parsx_token(ONE):parsx_applied_rule = 1504;break;
					case parsx_token(OLE):parsx_applied_rule = 1505;break;
					case parsx_token(OGE):parsx_applied_rule = 1506;break;
					case parsx_token(OLT):parsx_applied_rule = 1507;break;
					case parsx_token(OGT):parsx_applied_rule = 1508;break;
					case parsx_token(KAnd):parsx_applied_rule = 1509;break;
					case parsx_token(OColon):parsx_applied_rule = 1510;break;
					case parsx_token(KOr):parsx_applied_rule = 1511;break;
					default:parsx_applied_rule = 1512;break;
				}
			}break;
			case 424:{ //Symbol (expr(0,True)'rhs+((Expr*,))=>{alloc(StmtEval)($1)})
				switch ( parsx_lookahead_token ){
					case parsx_token(OColon):parsx_applied_rule = 1513;break;
					case parsx_token(KOr):parsx_applied_rule = 1514;break;
					default:parsx_applied_rule = 1515;break;
				}
			}break;
			case 425:{ //Symbol ParamGroup@(@Type@)@((parsx_token_type, Type*, parsx_token_type))=>{$2}
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 1516;break;
					case parsx_token(OArrow):parsx_applied_rule = 1517;break;
					case parsx_token(OVBar):parsx_applied_rule = 1518;break;
					default:parsx_applied_rule = 1519;break;
				}
			}break;
			case 426:{ //Symbol type(5)@(@{
				switch ( parsx_lookahead_token ){
					case parsx_token(KFloat):parsx_applied_rule = 1520;break;
					case parsx_token(KString):parsx_applied_rule = 1521;break;
					case parsx_token(KUnit):parsx_applied_rule = 1522;break;
					case parsx_token(KBytes):parsx_applied_rule = 1523;break;
					case parsx_token(Identifier):parsx_applied_rule = 1524;break;
					case parsx_token(KUndef):parsx_applied_rule = 1525;break;
					case parsx_token(KBool):parsx_applied_rule = 1526;break;
					case parsx_token(OLBrace):parsx_applied_rule = 1527;break;
					case parsx_token(OLParen):parsx_applied_rule = 1528;break;
					case parsx_token(KInt):parsx_applied_rule = 1529;break;
					case parsx_token(KDouble):parsx_applied_rule = 1530;break;
					case parsx_token(ORBrace):parsx_applied_rule = 1531;break;
					default:return false;
				}
			}break;
			case 427:{ //Symbol (type(0)@float@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Float)}+type(5)@(@float@type(0)@float)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 1532;break;
					case parsx_token(OArrow):parsx_applied_rule = 1533;break;
					case parsx_token(OVBar):parsx_applied_rule = 1534;break;
					case parsx_token(OComma):parsx_applied_rule = 1535;break;
					case parsx_token(ORParen):parsx_applied_rule = 1536;break;
					default:return false;
				}
			}break;
			case 428:{ //Symbol (type(7)'rhs+type(0)@double@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Double)}@type(7)'rhs+type(0)@(@double@type(0)@double)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 1537;break;
					case parsx_token(OArrow):parsx_applied_rule = 1538;break;
					case parsx_token(OVBar):parsx_applied_rule = 1539;break;
					case parsx_token(OComma):parsx_applied_rule = 1540;break;
					case parsx_token(ORParen):parsx_applied_rule = 1541;break;
					default:return false;
				}
			}break;
			case 429:{ //Symbol type(5)@(@unit@type(0)@unit
				switch ( parsx_lookahead_token ){
					case parsx_token(OComma):parsx_applied_rule = 1542;break;
					case parsx_token(ORParen):parsx_applied_rule = 1543;break;
					default:return false;
				}
			}break;
			case 430:{ //Symbol (type(0)@string@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::String)}@type(7)'rhs@type(5)@type(6)+ParamGroup@(@string@type(0)@string)
				switch ( parsx_lookahead_token ){
					case parsx_token(OVBar):parsx_applied_rule = 1544;break;
					case parsx_token(OComma):parsx_applied_rule = 1545;break;
					case parsx_token(ORParen):parsx_applied_rule = 1546;break;
					default:return false;
				}
			}break;
			case 431:{ //Symbol (type(7)'rhs+type(0)@bool@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Bool)}@type(7)'rhs+type(0)@(@bool@type(0)@bool)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 1547;break;
					case parsx_token(OArrow):parsx_applied_rule = 1548;break;
					case parsx_token(OVBar):parsx_applied_rule = 1549;break;
					case parsx_token(OComma):parsx_applied_rule = 1550;break;
					case parsx_token(ORParen):parsx_applied_rule = 1551;break;
					default:return false;
				}
			}break;
			case 432:{ //Symbol ParamGroup@bool@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Bool)}@type(7)'rhs@type(5)@type(6)
				switch ( parsx_lookahead_token ){
					case parsx_token(OVBar):parsx_applied_rule = 1552;break;
					default:parsx_applied_rule = 1553;break;
				}
			}break;
			case 433:{ //Symbol (type(0)@undef@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Undef)}+type(5)@(@undef@type(0)@undef)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 1554;break;
					case parsx_token(OArrow):parsx_applied_rule = 1555;break;
					case parsx_token(OVBar):parsx_applied_rule = 1556;break;
					case parsx_token(OComma):parsx_applied_rule = 1557;break;
					case parsx_token(ORParen):parsx_applied_rule = 1558;break;
					default:return false;
				}
			}break;
			case 434:{ //Symbol TypeList''rhs
				switch ( parsx_lookahead_token ){
					case parsx_token(OComma):parsx_applied_rule = 1559;break;
					default:parsx_applied_rule = 1560;break;
				}
			}break;
			case 435:{ //Symbol (type(7)'rhs+type(0)@float@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Float)}@type(7)'rhs)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 1561;break;
					case parsx_token(OArrow):parsx_applied_rule = 1562;break;
					case parsx_token(OVBar):parsx_applied_rule = 1563;break;
					default:parsx_applied_rule = 1564;break;
				}
			}break;
			case 436:{ //Symbol (type(0)@string@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::String)}+ParamGroup@(@string@type(0)@string)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 1565;break;
					case parsx_token(OArrow):parsx_applied_rule = 1566;break;
					case parsx_token(OVBar):parsx_applied_rule = 1567;break;
					case parsx_token(OComma):parsx_applied_rule = 1568;break;
					case parsx_token(ORParen):parsx_applied_rule = 1569;break;
					default:return false;
				}
			}break;
			case 437:{ //Symbol type(5)@(@string@type(0)@string
				switch ( parsx_lookahead_token ){
					case parsx_token(OComma):parsx_applied_rule = 1570;break;
					case parsx_token(ORParen):parsx_applied_rule = 1571;break;
					default:return false;
				}
			}break;
			case 438:{ //Symbol ParamGroup@(@bytes@type(0)@bytes
				switch ( parsx_lookahead_token ){
					case parsx_token(OComma):parsx_applied_rule = 1572;break;
					case parsx_token(ORParen):parsx_applied_rule = 1573;break;
					default:return false;
				}
			}break;
			case 439:{ //Symbol (type(0)@double@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Double)}@type(7)'rhs@type(5)@type(6)+type(5)@(@double@type(0)@double)
				switch ( parsx_lookahead_token ){
					case parsx_token(OVBar):parsx_applied_rule = 1574;break;
					case parsx_token(OComma):parsx_applied_rule = 1575;break;
					case parsx_token(ORParen):parsx_applied_rule = 1576;break;
					default:return false;
				}
			}break;
			case 440:{ //Symbol (type(0)@unit@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Unit)}+type(5)@(@unit@type(0)@unit)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 1577;break;
					case parsx_token(OArrow):parsx_applied_rule = 1578;break;
					case parsx_token(OVBar):parsx_applied_rule = 1579;break;
					case parsx_token(OComma):parsx_applied_rule = 1580;break;
					case parsx_token(ORParen):parsx_applied_rule = 1581;break;
					default:return false;
				}
			}break;
			case 441:{ //Symbol type(5)@(@(
				switch ( parsx_lookahead_token ){
					case parsx_token(KFloat):parsx_applied_rule = 1582;break;
					case parsx_token(KString):parsx_applied_rule = 1583;break;
					case parsx_token(Identifier):parsx_applied_rule = 1584;break;
					case parsx_token(KBytes):parsx_applied_rule = 1585;break;
					case parsx_token(ORParen):parsx_applied_rule = 1586;break;
					case parsx_token(OLParen):parsx_applied_rule = 1587;break;
					case parsx_token(KBool):parsx_applied_rule = 1588;break;
					case parsx_token(OLBrace):parsx_applied_rule = 1589;break;
					case parsx_token(KUndef):parsx_applied_rule = 1590;break;
					case parsx_token(KUnit):parsx_applied_rule = 1591;break;
					case parsx_token(KDouble):parsx_applied_rule = 1592;break;
					case parsx_token(KInt):parsx_applied_rule = 1593;break;
					default:return false;
				}
			}break;
			case 442:{ //Symbol (type(0)@int@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Int)}@type(7)'rhs@type(5)@type(6)+type(0)@(@int@type(0)@int)
				switch ( parsx_lookahead_token ){
					case parsx_token(OVBar):parsx_applied_rule = 1594;break;
					case parsx_token(OComma):parsx_applied_rule = 1595;break;
					case parsx_token(ORParen):parsx_applied_rule = 1596;break;
					default:return false;
				}
			}break;
			case 443:{ //Symbol (type(7)'rhs+type(0)@float@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Float)}@type(7)'rhs+type(5)@(@float@type(0)@float)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 1597;break;
					case parsx_token(OArrow):parsx_applied_rule = 1598;break;
					case parsx_token(OVBar):parsx_applied_rule = 1599;break;
					case parsx_token(OComma):parsx_applied_rule = 1600;break;
					case parsx_token(ORParen):parsx_applied_rule = 1601;break;
					default:return false;
				}
			}break;
			case 444:{ //Symbol (type(0)@bytes@((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Bytes)}+type(0)@(@bytes@type(0)@bytes)
				switch ( parsx_lookahead_token ){
					case parsx_token(OQuestion):parsx_applied_rule = 1602;break;
					case parsx_token(OArrow):parsx_applied_rule = 1603;break;
					case parsx_token(OVBar):parsx_applied_rule = 1604;break;
					case parsx_token(OComma):parsx_applied_rule = 1605;break;
					case parsx_token(ORParen):parsx_applied_rule = 1606;break;
					default:return false;
				}
			}break;
			}
			parsx_queue_action(parsx_applied_rule);
			parsx_pop_state();
			const size_t* parsx_indicies = &parsx_state_translation[parsx_applied_rule * 2];
			const State* parsx_states = &parsx_state_table[parsx_indicies[0]];
			size_t parsx_push_count = parsx_indicies[1];
			while ( parsx_push_count-- ) parsx_push_state(parsx_states[parsx_push_count]);
		}
	}
parsx_step_func_end()


parsx_commit_func_begin()
	while ( parsx_has_queued_action ){
		Action parsx_action = parsx_pop_queued_action;
		if ( parsx_action < 55 ){
			parsx_commit_token(parsx_token_type)
			return true;
		} else if ( parsx_action < 153 ){
			switch ( parsx_action ){
			case 55:{ //action ((parsx_token_type,))=>{alloc(ExprNumber)($1.where, sym($1))}
				parsx_token_type act_param_1 = parsx_pop_value(parsx_token_type);
				parsx_push_value(Expr*, alloc(ExprNumber)(act_param_1.where, sym(act_param_1)));
			}break;
			case 56:{ //action ((parsx_token_type, parsx_token_type, parsx_token_type, Type*))=>{alloc(TypeFunction)(SrcSpan($1.where.from(), $4->where.to()), List<TypeList>(), $4)}
				Type* act_param_4 = parsx_pop_value(Type*);
				parsx_token_type act_param_3 = parsx_pop_value(parsx_token_type);
				parsx_token_type act_param_2 = parsx_pop_value(parsx_token_type);
				parsx_token_type act_param_1 = parsx_pop_value(parsx_token_type);
				parsx_push_value(Type*, alloc(TypeFunction)(SrcSpan(act_param_1.where.from(), act_param_4->where.to()), List<TypeList>(), act_param_4));
			}break;
			case 57:{ //action ((Expr*, parsx_token_type, Expr*))=>{alloc(ExprBinOp)(SrcSpan($1->where.from(), $3->where.to()), ExprBinOp::Div, $1, $3)}
				Expr* act_param_3 = parsx_pop_value(Expr*);
				parsx_token_type act_param_2 = parsx_pop_value(parsx_token_type);
				Expr* act_param_1 = parsx_pop_value(Expr*);
				parsx_push_value(Expr*, alloc(ExprBinOp)(SrcSpan(act_param_1->where.from(), act_param_3->where.to()), ExprBinOp::Div, act_param_1, act_param_3));
			}break;
			case 58:{ //action (())=>{parsx_next_shifted.where.from()}
				parsx_push_value(SrcLoc, parsx_next_shifted.where.from());
			}break;
			case 59:{ //action ((List<TypeList>, parsx_token_type, Type*))=>{$1.append(alloc(TypeList)($3))}
				Type* act_param_3 = parsx_pop_value(Type*);
				parsx_token_type act_param_2 = parsx_pop_value(parsx_token_type);
				List<TypeList> act_param_1 = parsx_pop_value(List<TypeList>);
				parsx_push_value(List<TypeList>, act_param_1.append(alloc(TypeList)(act_param_3)));
			}break;
			case 60:{ //action ((parsx_token_type,))=>{alloc(Name)($1.where, sym($1))}
				parsx_token_type act_param_1 = parsx_pop_value(parsx_token_type);
				parsx_push_value(List<Name>, alloc(Name)(act_param_1.where, sym(act_param_1)));
			}break;
			case 61:{ //action ((parsx_token_type, Type*))=>{$2}
				Type* act_param_2 = parsx_pop_value(Type*);
				parsx_token_type act_param_1 = parsx_pop_value(parsx_token_type);
				parsx_push_value(Type*, act_param_2);
			}break;
			case 62:{ //action ((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Undef)}
				parsx_token_type act_param_1 = parsx_pop_value(parsx_token_type);
				parsx_push_value(Type*, alloc(TypePrim)(act_param_1.where, TypePrim::Undef));
			}break;
			case 63:{ //action ((Expr*, parsx_token_type, Expr*))=>{alloc(ExprBinOp)(SrcSpan($1->where.from(), $3->where.to()), ExprBinOp::EQ, $1, $3)}
				Expr* act_param_3 = parsx_pop_value(Expr*);
				parsx_token_type act_param_2 = parsx_pop_value(parsx_token_type);
				Expr* act_param_1 = parsx_pop_value(Expr*);
				parsx_push_value(Expr*, alloc(ExprBinOp)(SrcSpan(act_param_1->where.from(), act_param_3->where.to()), ExprBinOp::EQ, act_param_1, act_param_3));
			}break;
			case 64:{ //action ((List<TypeList>, parsx_token_type, Type*))=>{$1.append(alloc(TypeList)($3))}
				Type* act_param_3 = parsx_pop_value(Type*);
				parsx_token_type act_param_2 = parsx_pop_value(parsx_token_type);
				List<TypeList> act_param_1 = parsx_pop_value(List<TypeList>);
				parsx_push_value(List<TypeList>, act_param_1.append(alloc(TypeList)(act_param_3)));
			}break;
			case 65:{ //action (())=>{List<TopLevel>()}
				parsx_push_value(List<TopLevel>, List<TopLevel>());
			}break;
			case 66:{ //action ((Expr*, parsx_token_type, List<ExprList>, parsx_token_type))=>{alloc(ExprCall)(SrcSpan($2.where, $4.where), $1, $3)}
				parsx_token_type act_param_4 = parsx_pop_value(parsx_token_type);
				List<ExprList> act_param_3 = parsx_pop_value(List<ExprList>);
				parsx_token_type act_param_2 = parsx_pop_value(parsx_token_type);
				Expr* act_param_1 = parsx_pop_value(Expr*);
				parsx_push_value(Expr*, alloc(ExprCall)(SrcSpan(act_param_2.where, act_param_4.where), act_param_1, act_param_3));
			}break;
			case 67:{ //action ((List<Import>, List<TopLevel>, parsx_token_type))=>{alloc(Module)($1)}
				parsx_token_type act_param_3 = parsx_pop_value(parsx_token_type);
				List<TopLevel> act_param_2 = parsx_pop_value(List<TopLevel>);
				List<Import> act_param_1 = parsx_pop_value(List<Import>);
				parsx_push_value(Module*, alloc(Module)(act_param_1));
			}break;
			case 68:{ //action ((Expr*, parsx_token_type, Expr*))=>{alloc(ExprBinOp)(SrcSpan($1->where.from(), $3->where.to()), ExprBinOp::GE, $1, $3)}
				Expr* act_param_3 = parsx_pop_value(Expr*);
				parsx_token_type act_param_2 = parsx_pop_value(parsx_token_type);
				Expr* act_param_1 = parsx_pop_value(Expr*);
				parsx_push_value(Expr*, alloc(ExprBinOp)(SrcSpan(act_param_1->where.from(), act_param_3->where.to()), ExprBinOp::GE, act_param_1, act_param_3));
			}break;
			case 69:{ //action ((parsx_token_type, Expr*, parsx_token_type))=>{$2}
				parsx_token_type act_param_3 = parsx_pop_value(parsx_token_type);
				Expr* act_param_2 = parsx_pop_value(Expr*);
				parsx_token_type act_param_1 = parsx_pop_value(parsx_token_type);
				parsx_push_value(Expr*, act_param_2);
			}break;
			case 70:{ //action ((Type*,))=>{alloc(TypeList)($1)}
				Type* act_param_1 = parsx_pop_value(Type*);
				parsx_push_value(List<TypeList>, alloc(TypeList)(act_param_1));
			}break;
			case 71:{ //action ((List<ExprList>, parsx_token_type, Expr*))=>{$1.append(alloc(ExprList)($3))}
				Expr* act_param_3 = parsx_pop_value(Expr*);
				parsx_token_type act_param_2 = parsx_pop_value(parsx_token_type);
				List<ExprList> act_param_1 = parsx_pop_value(List<ExprList>);
				parsx_push_value(List<ExprList>, act_param_1.append(alloc(ExprList)(act_param_3)));
			}break;
			case 72:{ //action ((Expr*, parsx_token_type, Expr*))=>{alloc(ExprBinOp)(SrcSpan($1->where.from(), $3->where.to()), ExprBinOp::Or, $1, $3)}
				Expr* act_param_3 = parsx_pop_value(Expr*);
				parsx_token_type act_param_2 = parsx_pop_value(parsx_token_type);
				Expr* act_param_1 = parsx_pop_value(Expr*);
				parsx_push_value(Expr*, alloc(ExprBinOp)(SrcSpan(act_param_1->where.from(), act_param_3->where.to()), ExprBinOp::Or, act_param_1, act_param_3));
			}break;
			case 73:{ //action ((List<TopLevel>, TopLevel*))=>{$1.append($2)}
				TopLevel* act_param_2 = parsx_pop_value(TopLevel*);
				List<TopLevel> act_param_1 = parsx_pop_value(List<TopLevel>);
				parsx_push_value(List<TopLevel>, act_param_1.append(act_param_2));
			}break;
			case 74:{ //action ((Expr*,))=>{alloc(ExprList)($1)}
				Expr* act_param_1 = parsx_pop_value(Expr*);
				parsx_push_value(List<ExprList>, alloc(ExprList)(act_param_1));
			}break;
			case 75:{ //action ((Stmt*,))=>{List<Stmt>($1)}
				Stmt* act_param_1 = parsx_pop_value(Stmt*);
				parsx_push_value(List<Stmt>, List<Stmt>(act_param_1));
			}break;
			case 76:{ //action ((SrcLoc, parsx_token_type, QualID*, StringRef))=>{alloc(Import)(to_here($1), $3, $4)}
				StringRef act_param_4 = parsx_pop_value(StringRef);
				QualID* act_param_3 = parsx_pop_value(QualID*);
				parsx_token_type act_param_2 = parsx_pop_value(parsx_token_type);
				SrcLoc act_param_1 = parsx_pop_value(SrcLoc);
				parsx_push_value(Import*, alloc(Import)(to_here(act_param_1), act_param_3, act_param_4));
			}break;
			case 77:{ //action ((parsx_token_type, Expr*))=>{$2}
				Expr* act_param_2 = parsx_pop_value(Expr*);
				parsx_token_type act_param_1 = parsx_pop_value(parsx_token_type);
				parsx_push_value(Expr*, act_param_2);
			}break;
			case 78:{ //action ((List<Import>, Import*))=>{$1.append($2)}
				Import* act_param_2 = parsx_pop_value(Import*);
				List<Import> act_param_1 = parsx_pop_value(List<Import>);
				parsx_push_value(List<Import>, act_param_1.append(act_param_2));
			}break;
			case 79:{ //action (())=>{List<Import>()}
				parsx_push_value(List<Import>, List<Import>());
			}break;
			case 80:{ //action ((Expr*, parsx_token_type, Expr*))=>{alloc(ExprBinOp)(SrcSpan($1->where.from(), $3->where.to()), ExprBinOp::LT, $1, $3)}
				Expr* act_param_3 = parsx_pop_value(Expr*);
				parsx_token_type act_param_2 = parsx_pop_value(parsx_token_type);
				Expr* act_param_1 = parsx_pop_value(Expr*);
				parsx_push_value(Expr*, alloc(ExprBinOp)(SrcSpan(act_param_1->where.from(), act_param_3->where.to()), ExprBinOp::LT, act_param_1, act_param_3));
			}break;
			case 81:{ //action ((Type*,))=>{alloc(ParamGroup)(nullptr, $1)}
				Type* act_param_1 = parsx_pop_value(Type*);
				parsx_push_value(ParamGroup*, alloc(ParamGroup)(nullptr, act_param_1));
			}break;
			case 82:{ //action ((parsx_token_type,))=>{alloc(ExprString)($1.where, lit($1))}
				parsx_token_type act_param_1 = parsx_pop_value(parsx_token_type);
				parsx_push_value(Expr*, alloc(ExprString)(act_param_1.where, lit(act_param_1)));
			}break;
			case 83:{ //action ((Expr*, parsx_token_type, parsx_token_type, List<TypeList>, parsx_token_type))=>{alloc(ExprInstance)(SrcSpan($2.where, $5.where), $1, $4)}
				parsx_token_type act_param_5 = parsx_pop_value(parsx_token_type);
				List<TypeList> act_param_4 = parsx_pop_value(List<TypeList>);
				parsx_token_type act_param_3 = parsx_pop_value(parsx_token_type);
				parsx_token_type act_param_2 = parsx_pop_value(parsx_token_type);
				Expr* act_param_1 = parsx_pop_value(Expr*);
				parsx_push_value(Expr*, alloc(ExprInstance)(SrcSpan(act_param_2.where, act_param_5.where), act_param_1, act_param_4));
			}break;
			case 84:{ //action ((Expr*,))=>{alloc(StmtEval)($1)}
				Expr* act_param_1 = parsx_pop_value(Expr*);
				parsx_push_value(Stmt*, alloc(StmtEval)(act_param_1));
			}break;
			case 85:{ //action ((parsx_token_type,))=>{alloc(ExprID)($1.where, sym($1))}
				parsx_token_type act_param_1 = parsx_pop_value(parsx_token_type);
				parsx_push_value(Expr*, alloc(ExprID)(act_param_1.where, sym(act_param_1)));
			}break;
			case 86:{ //action ((Expr*, parsx_token_type, Expr*))=>{alloc(ExprBinOp)(SrcSpan($1->where.from(), $3->where.to()), ExprBinOp::Minus, $1, $3)}
				Expr* act_param_3 = parsx_pop_value(Expr*);
				parsx_token_type act_param_2 = parsx_pop_value(parsx_token_type);
				Expr* act_param_1 = parsx_pop_value(Expr*);
				parsx_push_value(Expr*, alloc(ExprBinOp)(SrcSpan(act_param_1->where.from(), act_param_3->where.to()), ExprBinOp::Minus, act_param_1, act_param_3));
			}break;
			case 87:{ //action ((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Bytes)}
				parsx_token_type act_param_1 = parsx_pop_value(parsx_token_type);
				parsx_push_value(Type*, alloc(TypePrim)(act_param_1.where, TypePrim::Bytes));
			}break;
			case 88:{ //action ((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Unit)}
				parsx_token_type act_param_1 = parsx_pop_value(parsx_token_type);
				parsx_push_value(Type*, alloc(TypePrim)(act_param_1.where, TypePrim::Unit));
			}break;
			case 89:{ //action ((Type*, parsx_token_type))=>{alloc(TypeOptional)(SrcSpan($1->where.from(), $2.where.to()), $1)}
				parsx_token_type act_param_2 = parsx_pop_value(parsx_token_type);
				Type* act_param_1 = parsx_pop_value(Type*);
				parsx_push_value(Type*, alloc(TypeOptional)(SrcSpan(act_param_1->where.from(), act_param_2.where.to()), act_param_1));
			}break;
			case 90:{ //action (())=>{StringRef()}
				parsx_push_value(StringRef, StringRef());
			}break;
			case 91:{ //action ((parsx_token_type, List<TypeList>, parsx_token_type, parsx_token_type, Type*))=>{alloc(TypeFunction)(SrcSpan($1.where.from(), $5->where.to()), $2, $5)}
				Type* act_param_5 = parsx_pop_value(Type*);
				parsx_token_type act_param_4 = parsx_pop_value(parsx_token_type);
				parsx_token_type act_param_3 = parsx_pop_value(parsx_token_type);
				List<TypeList> act_param_2 = parsx_pop_value(List<TypeList>);
				parsx_token_type act_param_1 = parsx_pop_value(parsx_token_type);
				parsx_push_value(Type*, alloc(TypeFunction)(SrcSpan(act_param_1.where.from(), act_param_5->where.to()), act_param_2, act_param_5));
			}break;
			case 92:{ //action ((WithSrcLoc<TypeReferenceNode*>, parsx_token_type, parsx_token_type))=>{WithSrcLoc<TypeReferenceNode*>($1, alloc(TypeReferenceSubscript)($1, sym($3)))}
				parsx_token_type act_param_3 = parsx_pop_value(parsx_token_type);
				parsx_token_type act_param_2 = parsx_pop_value(parsx_token_type);
				WithSrcLoc<TypeReferenceNode*> act_param_1 = parsx_pop_value(WithSrcLoc<TypeReferenceNode*>);
				parsx_push_value(WithSrcLoc<TypeReferenceNode*>, WithSrcLoc<TypeReferenceNode*>(act_param_1, alloc(TypeReferenceSubscript)(act_param_1, sym(act_param_3))));
			}break;
			case 93:{ //action ((Expr*, parsx_token_type, parsx_token_type))=>{alloc(ExprSubscript)(SrcSpan($2.where, $3.where), $1, sym($3))}
				parsx_token_type act_param_3 = parsx_pop_value(parsx_token_type);
				parsx_token_type act_param_2 = parsx_pop_value(parsx_token_type);
				Expr* act_param_1 = parsx_pop_value(Expr*);
				parsx_push_value(Expr*, alloc(ExprSubscript)(SrcSpan(act_param_2.where, act_param_3.where), act_param_1, sym(act_param_3)));
			}break;
			case 94:{ //action ((List<Stmt>, Stmt*))=>{$1.append($2)}
				Stmt* act_param_2 = parsx_pop_value(Stmt*);
				List<Stmt> act_param_1 = parsx_pop_value(List<Stmt>);
				parsx_push_value(List<Stmt>, act_param_1.append(act_param_2));
			}break;
			case 95:{ //action ((List<Name>, parsx_token_type, Type*))=>{alloc(ParamGroup)($1, $3)}
				Type* act_param_3 = parsx_pop_value(Type*);
				parsx_token_type act_param_2 = parsx_pop_value(parsx_token_type);
				List<Name> act_param_1 = parsx_pop_value(List<Name>);
				parsx_push_value(ParamGroup*, alloc(ParamGroup)(act_param_1, act_param_3));
			}break;
			case 96:{ //action ((parsx_token_type,))=>{alloc(ExprFalse)($1.where)}
				parsx_token_type act_param_1 = parsx_pop_value(parsx_token_type);
				parsx_push_value(Expr*, alloc(ExprFalse)(act_param_1.where));
			}break;
			case 97:{ //action (())=>{alloc(TypeMissing)(parsx_ud.lastSrcLoc)}
				parsx_push_value(Type*, alloc(TypeMissing)(parsx_ud.lastSrcLoc));
			}break;
			case 98:{ //action (())=>{List<ExprList>()}
				parsx_push_value(List<ExprList>, List<ExprList>());
			}break;
			case 99:{ //action ((parsx_token_type, Expr*))=>{alloc(ExprUnOp)(SrcSpan($1.where.from(), $2->where.to()), ExprUnOp::Negate, $2)}
				Expr* act_param_2 = parsx_pop_value(Expr*);
				parsx_token_type act_param_1 = parsx_pop_value(parsx_token_type);
				parsx_push_value(Expr*, alloc(ExprUnOp)(SrcSpan(act_param_1.where.from(), act_param_2->where.to()), ExprUnOp::Negate, act_param_2));
			}break;
			case 100:{ //action ((parsx_token_type,))=>{alloc(QualID)($1.where, sym($1))}
				parsx_token_type act_param_1 = parsx_pop_value(parsx_token_type);
				parsx_push_value(QualID*, alloc(QualID)(act_param_1.where, sym(act_param_1)));
			}break;
			case 101:{ //action ((WithSrcLoc<TypeReferenceNode*>, parsx_token_type, parsx_token_type))=>{WithSrcLoc<TypeReferenceNode*>($1, alloc(TypeReferenceInstance)($1, List<TypeList>()))}
				parsx_token_type act_param_3 = parsx_pop_value(parsx_token_type);
				parsx_token_type act_param_2 = parsx_pop_value(parsx_token_type);
				WithSrcLoc<TypeReferenceNode*> act_param_1 = parsx_pop_value(WithSrcLoc<TypeReferenceNode*>);
				parsx_push_value(WithSrcLoc<TypeReferenceNode*>, WithSrcLoc<TypeReferenceNode*>(act_param_1, alloc(TypeReferenceInstance)(act_param_1, List<TypeList>())));
			}break;
			case 102:{ //action (())=>{alloc(ExprMissing)(parsx_ud.lastSrcLoc)}
				parsx_push_value(Expr*, alloc(ExprMissing)(parsx_ud.lastSrcLoc));
			}break;
			case 103:{ //action ((Expr*, parsx_token_type, Expr*))=>{alloc(ExprBinOp)(SrcSpan($1->where.from(), $3->where.to()), ExprBinOp::Rem, $1, $3)}
				Expr* act_param_3 = parsx_pop_value(Expr*);
				parsx_token_type act_param_2 = parsx_pop_value(parsx_token_type);
				Expr* act_param_1 = parsx_pop_value(Expr*);
				parsx_push_value(Expr*, alloc(ExprBinOp)(SrcSpan(act_param_1->where.from(), act_param_3->where.to()), ExprBinOp::Rem, act_param_1, act_param_3));
			}break;
			case 104:{ //action ((parsx_token_type, Expr*, parsx_token_type, Expr*, Expr*))=>{alloc(ExprIf)($1.where, $2, $4, $5)}
				Expr* act_param_5 = parsx_pop_value(Expr*);
				Expr* act_param_4 = parsx_pop_value(Expr*);
				parsx_token_type act_param_3 = parsx_pop_value(parsx_token_type);
				Expr* act_param_2 = parsx_pop_value(Expr*);
				parsx_token_type act_param_1 = parsx_pop_value(parsx_token_type);
				parsx_push_value(Expr*, alloc(ExprIf)(act_param_1.where, act_param_2, act_param_4, act_param_5));
			}break;
			case 105:{ //action ((parsx_token_type, parsx_token_type, FunctionSignature*, FunctionBody*))=>{alloc(GlobalFunction)($2.where, sym($2), $3, $4)}
				FunctionBody* act_param_4 = parsx_pop_value(FunctionBody*);
				FunctionSignature* act_param_3 = parsx_pop_value(FunctionSignature*);
				parsx_token_type act_param_2 = parsx_pop_value(parsx_token_type);
				parsx_token_type act_param_1 = parsx_pop_value(parsx_token_type);
				parsx_push_value(TopLevel*, alloc(GlobalFunction)(act_param_2.where, sym(act_param_2), act_param_3, act_param_4));
			}break;
			case 106:{ //action ((Type*, parsx_token_type, Type*))=>{alloc(TypeFunction)(SrcSpan($1->where.from(), $3->where.to()), alloc(TypeList)($1), $3)}
				Type* act_param_3 = parsx_pop_value(Type*);
				parsx_token_type act_param_2 = parsx_pop_value(parsx_token_type);
				Type* act_param_1 = parsx_pop_value(Type*);
				parsx_push_value(Type*, alloc(TypeFunction)(SrcSpan(act_param_1->where.from(), act_param_3->where.to()), alloc(TypeList)(act_param_1), act_param_3));
			}break;
			case 107:{ //action ((Expr*, parsx_token_type, Type*))=>{alloc(ExprCoerce)(SrcSpan($1->where, $3->where), $1, $3)}
				Type* act_param_3 = parsx_pop_value(Type*);
				parsx_token_type act_param_2 = parsx_pop_value(parsx_token_type);
				Expr* act_param_1 = parsx_pop_value(Expr*);
				parsx_push_value(Expr*, alloc(ExprCoerce)(SrcSpan(act_param_1->where, act_param_3->where), act_param_1, act_param_3));
			}break;
			case 108:{ //action ((List<TypeList>,))=>{alloc(TypeUnion)(SrcSpan($1.first->type->where.from(), $1.last->type->where.to()), $1)}
				List<TypeList> act_param_1 = parsx_pop_value(List<TypeList>);
				parsx_push_value(Type*, alloc(TypeUnion)(SrcSpan(act_param_1.first->type->where.from(), act_param_1.last->type->where.to()), act_param_1));
			}break;
			case 109:{ //action ((List<Stmt>, parsx_token_type))=>{$1}
				parsx_token_type act_param_2 = parsx_pop_value(parsx_token_type);
				List<Stmt> act_param_1 = parsx_pop_value(List<Stmt>);
				parsx_push_value(List<Stmt>, act_param_1);
			}break;
			case 110:{ //action ((<null>, FunctionBody*, <null>))=>{$2}
				FunctionBody* act_param_2 = parsx_pop_value(FunctionBody*);
				parsx_push_value(FunctionBody*, act_param_2);
			}break;
			case 111:{ //action (())=>{use_def}
				use_def;
			}break;
			case 112:{ //action ((parsx_token_type,))=>{alloc(ExprUnit)($1.where)}
				parsx_token_type act_param_1 = parsx_pop_value(parsx_token_type);
				parsx_push_value(Expr*, alloc(ExprUnit)(act_param_1.where));
			}break;
			case 113:{ //action (())=>{nullptr}
				parsx_push_value(Type*, nullptr);
			}break;
			case 114:{ //action ((Expr*, parsx_token_type, Expr*))=>{alloc(ExprBinOp)(SrcSpan($1->where.from(), $3->where.to()), ExprBinOp::LE, $1, $3)}
				Expr* act_param_3 = parsx_pop_value(Expr*);
				parsx_token_type act_param_2 = parsx_pop_value(parsx_token_type);
				Expr* act_param_1 = parsx_pop_value(Expr*);
				parsx_push_value(Expr*, alloc(ExprBinOp)(SrcSpan(act_param_1->where.from(), act_param_3->where.to()), ExprBinOp::LE, act_param_1, act_param_3));
			}break;
			case 115:{ //action (())=>{use_decl}
				use_decl;
			}break;
			case 116:{ //action ((parsx_token_type,))=>{alloc(ExprNull)($1.where)}
				parsx_token_type act_param_1 = parsx_pop_value(parsx_token_type);
				parsx_push_value(Expr*, alloc(ExprNull)(act_param_1.where));
			}break;
			case 117:{ //action ((WithSrcLoc<TypeReferenceNode*>, parsx_token_type, parsx_token_type, List<TypeList>, parsx_token_type))=>{WithSrcLoc<TypeReferenceNode*>($1, alloc(TypeReferenceInstance)($1, $4))}
				parsx_token_type act_param_5 = parsx_pop_value(parsx_token_type);
				List<TypeList> act_param_4 = parsx_pop_value(List<TypeList>);
				parsx_token_type act_param_3 = parsx_pop_value(parsx_token_type);
				parsx_token_type act_param_2 = parsx_pop_value(parsx_token_type);
				WithSrcLoc<TypeReferenceNode*> act_param_1 = parsx_pop_value(WithSrcLoc<TypeReferenceNode*>);
				parsx_push_value(WithSrcLoc<TypeReferenceNode*>, WithSrcLoc<TypeReferenceNode*>(act_param_1, alloc(TypeReferenceInstance)(act_param_1, act_param_4)));
			}break;
			case 118:{ //action ((QualID*, parsx_token_type, parsx_token_type))=>{alloc(QualID)(jf::SrcSpan($1->where.from(), $3.where.to()), $1, sym($3))}
				parsx_token_type act_param_3 = parsx_pop_value(parsx_token_type);
				parsx_token_type act_param_2 = parsx_pop_value(parsx_token_type);
				QualID* act_param_1 = parsx_pop_value(QualID*);
				parsx_push_value(QualID*, alloc(QualID)(jf::SrcSpan(act_param_1->where.from(), act_param_3.where.to()), act_param_1, sym(act_param_3)));
			}break;
			case 119:{ //action ((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Double)}
				parsx_token_type act_param_1 = parsx_pop_value(parsx_token_type);
				parsx_push_value(Type*, alloc(TypePrim)(act_param_1.where, TypePrim::Double));
			}break;
			case 120:{ //action ((parsx_token_type, Expr*))=>{alloc(ExprUnOp)(SrcSpan($1.where.from(), $2->where.to()), ExprUnOp::Not, $2)}
				Expr* act_param_2 = parsx_pop_value(Expr*);
				parsx_token_type act_param_1 = parsx_pop_value(parsx_token_type);
				parsx_push_value(Expr*, alloc(ExprUnOp)(SrcSpan(act_param_1.where.from(), act_param_2->where.to()), ExprUnOp::Not, act_param_2));
			}break;
			case 121:{ //action ((Expr*, parsx_token_type, Expr*))=>{alloc(ExprBinOp)(SrcSpan($1->where.from(), $3->where.to()), ExprBinOp::Plus, $1, $3)}
				Expr* act_param_3 = parsx_pop_value(Expr*);
				parsx_token_type act_param_2 = parsx_pop_value(parsx_token_type);
				Expr* act_param_1 = parsx_pop_value(Expr*);
				parsx_push_value(Expr*, alloc(ExprBinOp)(SrcSpan(act_param_1->where.from(), act_param_3->where.to()), ExprBinOp::Plus, act_param_1, act_param_3));
			}break;
			case 122:{ //action ((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Float)}
				parsx_token_type act_param_1 = parsx_pop_value(parsx_token_type);
				parsx_push_value(Type*, alloc(TypePrim)(act_param_1.where, TypePrim::Float));
			}break;
			case 123:{ //action ((Expr*, parsx_token_type, Expr*))=>{alloc(ExprBinOp)(SrcSpan($1->where.from(), $3->where.to()), ExprBinOp::GT, $1, $3)}
				Expr* act_param_3 = parsx_pop_value(Expr*);
				parsx_token_type act_param_2 = parsx_pop_value(parsx_token_type);
				Expr* act_param_1 = parsx_pop_value(Expr*);
				parsx_push_value(Expr*, alloc(ExprBinOp)(SrcSpan(act_param_1->where.from(), act_param_3->where.to()), ExprBinOp::GT, act_param_1, act_param_3));
			}break;
			case 124:{ //action ((parsx_token_type, List<TypeList>, parsx_token_type))=>{alloc(TypeTuple)(SrcSpan($1.where.from(), $3.where.to()), $2)}
				parsx_token_type act_param_3 = parsx_pop_value(parsx_token_type);
				List<TypeList> act_param_2 = parsx_pop_value(List<TypeList>);
				parsx_token_type act_param_1 = parsx_pop_value(parsx_token_type);
				parsx_push_value(Type*, alloc(TypeTuple)(SrcSpan(act_param_1.where.from(), act_param_3.where.to()), act_param_2));
			}break;
			case 125:{ //action ((List<Name>, parsx_token_type))=>{$1.append(alloc(Name)($2.where, sym($2)))}
				parsx_token_type act_param_2 = parsx_pop_value(parsx_token_type);
				List<Name> act_param_1 = parsx_pop_value(List<Name>);
				parsx_push_value(List<Name>, act_param_1.append(alloc(Name)(act_param_2.where, sym(act_param_2))));
			}break;
			case 126:{ //action ((WithSrcLoc<TypeReferenceNode*>,))=>{alloc(TypeReference)(to_here($1), $1)}
				WithSrcLoc<TypeReferenceNode*> act_param_1 = parsx_pop_value(WithSrcLoc<TypeReferenceNode*>);
				parsx_push_value(Type*, alloc(TypeReference)(to_here(act_param_1), act_param_1));
			}break;
			case 127:{ //action ((parsx_token_type,))=>{alloc(ExprTrue)($1.where)}
				parsx_token_type act_param_1 = parsx_pop_value(parsx_token_type);
				parsx_push_value(Expr*, alloc(ExprTrue)(act_param_1.where));
			}break;
			case 128:{ //action ((parsx_token_type, List<Name>, Type*, Expr*))=>{alloc(GlobalVariable)($2, $3, $4)}
				Expr* act_param_4 = parsx_pop_value(Expr*);
				Type* act_param_3 = parsx_pop_value(Type*);
				List<Name> act_param_2 = parsx_pop_value(List<Name>);
				parsx_token_type act_param_1 = parsx_pop_value(parsx_token_type);
				parsx_push_value(TopLevel*, alloc(GlobalVariable)(act_param_2, act_param_3, act_param_4));
			}break;
			case 129:{ //action ((parsx_token_type,))=>{WithSrcLoc<TypeReferenceNode*>($1.where.from(), alloc(TypeReferenceLeaf)(sym($1)))}
				parsx_token_type act_param_1 = parsx_pop_value(parsx_token_type);
				parsx_push_value(WithSrcLoc<TypeReferenceNode*>, WithSrcLoc<TypeReferenceNode*>(act_param_1.where.from(), alloc(TypeReferenceLeaf)(sym(act_param_1))));
			}break;
			case 130:{ //action ((Expr*, parsx_token_type, Expr*))=>{alloc(ExprBinOp)(SrcSpan($1->where.from(), $3->where.to()), ExprBinOp::NE, $1, $3)}
				Expr* act_param_3 = parsx_pop_value(Expr*);
				parsx_token_type act_param_2 = parsx_pop_value(parsx_token_type);
				Expr* act_param_1 = parsx_pop_value(Expr*);
				parsx_push_value(Expr*, alloc(ExprBinOp)(SrcSpan(act_param_1->where.from(), act_param_3->where.to()), ExprBinOp::NE, act_param_1, act_param_3));
			}break;
			case 131:{ //action ((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Bool)}
				parsx_token_type act_param_1 = parsx_pop_value(parsx_token_type);
				parsx_push_value(Type*, alloc(TypePrim)(act_param_1.where, TypePrim::Bool));
			}break;
			case 132:{ //action ((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::Int)}
				parsx_token_type act_param_1 = parsx_pop_value(parsx_token_type);
				parsx_push_value(Type*, alloc(TypePrim)(act_param_1.where, TypePrim::Int));
			}break;
			case 133:{ //action ((parsx_token_type, Expr*, parsx_token_type, Expr*, Expr*))=>{alloc(ExprIf)($1.where, $2, $4, $5)}
				Expr* act_param_5 = parsx_pop_value(Expr*);
				Expr* act_param_4 = parsx_pop_value(Expr*);
				parsx_token_type act_param_3 = parsx_pop_value(parsx_token_type);
				Expr* act_param_2 = parsx_pop_value(Expr*);
				parsx_token_type act_param_1 = parsx_pop_value(parsx_token_type);
				parsx_push_value(Expr*, alloc(ExprIf)(act_param_1.where, act_param_2, act_param_4, act_param_5));
			}break;
			case 134:{ //action ((parsx_token_type, Type*))=>{$2}
				Type* act_param_2 = parsx_pop_value(Type*);
				parsx_token_type act_param_1 = parsx_pop_value(parsx_token_type);
				parsx_push_value(Type*, act_param_2);
			}break;
			case 135:{ //action ((Type*, parsx_token_type, Type*))=>{List<TypeList>(alloc(TypeList)($1)).append(alloc(TypeList)($3))}
				Type* act_param_3 = parsx_pop_value(Type*);
				parsx_token_type act_param_2 = parsx_pop_value(parsx_token_type);
				Type* act_param_1 = parsx_pop_value(Type*);
				parsx_push_value(List<TypeList>, List<TypeList>(alloc(TypeList)(act_param_1)).append(alloc(TypeList)(act_param_3)));
			}break;
			case 136:{ //action (())=>{List<Stmt>()}
				parsx_push_value(List<Stmt>, List<Stmt>());
			}break;
			case 137:{ //action ((SrcLoc, List<Stmt>, parsx_token_type))=>{alloc(FunctionBodyDefined)(to_here($1), $2)}
				parsx_token_type act_param_3 = parsx_pop_value(parsx_token_type);
				List<Stmt> act_param_2 = parsx_pop_value(List<Stmt>);
				SrcLoc act_param_1 = parsx_pop_value(SrcLoc);
				parsx_push_value(FunctionBody*, alloc(FunctionBodyDefined)(to_here(act_param_1), act_param_2));
			}break;
			case 138:{ //action ((parsx_token_type, parsx_token_type))=>{sym($2)}
				parsx_token_type act_param_2 = parsx_pop_value(parsx_token_type);
				parsx_token_type act_param_1 = parsx_pop_value(parsx_token_type);
				parsx_push_value(StringRef, sym(act_param_2));
			}break;
			case 139:{ //action ((parsx_token_type, Type*, parsx_token_type))=>{$2}
				parsx_token_type act_param_3 = parsx_pop_value(parsx_token_type);
				Type* act_param_2 = parsx_pop_value(Type*);
				parsx_token_type act_param_1 = parsx_pop_value(parsx_token_type);
				parsx_push_value(Type*, act_param_2);
			}break;
			case 140:{ //action ((List<TypeList>, parsx_token_type, Type*))=>{$1.append(alloc(TypeList)($3))}
				Type* act_param_3 = parsx_pop_value(Type*);
				parsx_token_type act_param_2 = parsx_pop_value(parsx_token_type);
				List<TypeList> act_param_1 = parsx_pop_value(List<TypeList>);
				parsx_push_value(List<TypeList>, act_param_1.append(alloc(TypeList)(act_param_3)));
			}break;
			case 141:{ //action ((Expr*, parsx_token_type, Expr*))=>{alloc(ExprBinOp)(SrcSpan($1->where.from(), $3->where.to()), ExprBinOp::And, $1, $3)}
				Expr* act_param_3 = parsx_pop_value(Expr*);
				parsx_token_type act_param_2 = parsx_pop_value(parsx_token_type);
				Expr* act_param_1 = parsx_pop_value(Expr*);
				parsx_push_value(Expr*, alloc(ExprBinOp)(SrcSpan(act_param_1->where.from(), act_param_3->where.to()), ExprBinOp::And, act_param_1, act_param_3));
			}break;
			case 142:{ //action ((Expr*, parsx_token_type, Expr*))=>{alloc(ExprBinOp)(SrcSpan($1->where.from(), $3->where.to()), ExprBinOp::Mult, $1, $3)}
				Expr* act_param_3 = parsx_pop_value(Expr*);
				parsx_token_type act_param_2 = parsx_pop_value(parsx_token_type);
				Expr* act_param_1 = parsx_pop_value(Expr*);
				parsx_push_value(Expr*, alloc(ExprBinOp)(SrcSpan(act_param_1->where.from(), act_param_3->where.to()), ExprBinOp::Mult, act_param_1, act_param_3));
			}break;
			case 143:{ //action ((<null>, Expr*, <null>))=>{$2}
				Expr* act_param_2 = parsx_pop_value(Expr*);
				parsx_push_value(Expr*, act_param_2);
			}break;
			case 144:{ //action ((parsx_token_type, parsx_token_type))=>{alloc(FunctionBodyImport)($2.where, lit($2))}
				parsx_token_type act_param_2 = parsx_pop_value(parsx_token_type);
				parsx_token_type act_param_1 = parsx_pop_value(parsx_token_type);
				parsx_push_value(FunctionBody*, alloc(FunctionBodyImport)(act_param_2.where, lit(act_param_2)));
			}break;
			case 145:{ //action ((parsx_token_type,))=>{alloc(TypePrim)($1.where, TypePrim::String)}
				parsx_token_type act_param_1 = parsx_pop_value(parsx_token_type);
				parsx_push_value(Type*, alloc(TypePrim)(act_param_1.where, TypePrim::String));
			}break;
			case 146:{ //action ((parsx_token_type, List<ParamGroup>, parsx_token_type, Type*))=>{alloc(FunctionSignature)(to_here($1.where.from()), $2, $4)}
				Type* act_param_4 = parsx_pop_value(Type*);
				parsx_token_type act_param_3 = parsx_pop_value(parsx_token_type);
				List<ParamGroup> act_param_2 = parsx_pop_value(List<ParamGroup>);
				parsx_token_type act_param_1 = parsx_pop_value(parsx_token_type);
				parsx_push_value(FunctionSignature*, alloc(FunctionSignature)(to_here(act_param_1.where.from()), act_param_2, act_param_4));
			}break;
			case 147:{ //action ((parsx_token_type, Expr*, parsx_token_type))=>{$2}
				parsx_token_type act_param_3 = parsx_pop_value(parsx_token_type);
				Expr* act_param_2 = parsx_pop_value(Expr*);
				parsx_token_type act_param_1 = parsx_pop_value(parsx_token_type);
				parsx_push_value(Expr*, act_param_2);
			}break;
			case 148:{ //action (())=>{List<TypeList>()}
				parsx_push_value(List<TypeList>, List<TypeList>());
			}break;
			case 149:{ //action ((ParamGroup*,))=>{List<ParamGroup>($1)}
				ParamGroup* act_param_1 = parsx_pop_value(ParamGroup*);
				parsx_push_value(List<ParamGroup>, List<ParamGroup>(act_param_1));
			}break;
			case 150:{ //action (())=>{nullptr}
				parsx_push_value(List<ParamGroup>, nullptr);
			}break;
			case 151:{ //action ((Type*, parsx_token_type, Type*))=>{List<TypeList>(alloc(TypeList)($1)).append(alloc(TypeList)($3))}
				Type* act_param_3 = parsx_pop_value(Type*);
				parsx_token_type act_param_2 = parsx_pop_value(parsx_token_type);
				Type* act_param_1 = parsx_pop_value(Type*);
				parsx_push_value(List<TypeList>, List<TypeList>(alloc(TypeList)(act_param_1)).append(alloc(TypeList)(act_param_3)));
			}break;
			case 152:{ //action ((List<ParamGroup>, parsx_token_type, ParamGroup*))=>{$1.append($3)}
				ParamGroup* act_param_3 = parsx_pop_value(ParamGroup*);
				parsx_token_type act_param_2 = parsx_pop_value(parsx_token_type);
				List<ParamGroup> act_param_1 = parsx_pop_value(List<ParamGroup>);
				parsx_push_value(List<ParamGroup>, act_param_1.append(act_param_3));
			}break;
		}
	}
}
return false;
parsx_commit_func_end()


parsx_undo_func_begin()
	while ( parsx_has_queued_action ){
		Action parsx_action = parsx_pop_last_queued_action;
		if ( parsx_action < 55 ){
			parsx_unshift_token();
			parsx_push_state(parsx_action);
		} else if ( parsx_action < 153 ){
			parsx_push_state(parsx_action);
		} else {
			const size_t* parsx_indicies = &parsx_state_translation[parsx_action * 2];
			size_t parsx_pop_count = parsx_indicies[1];
			while ( parsx_pop_count-- ) parsx_pop_state();
			parsx_push_state(parsx_state_table[parsx_indicies[0] - 1]);
		}
	}
parsx_undo_func_end()


parsx_sync_mask_table_begin()
	parsx_sync_mask(0)
	parsx_sync_mask(1, parsx_token(KAnd))
	parsx_sync_mask(1, parsx_token(KFalse))
	parsx_sync_mask(1, parsx_token(OGE))
	parsx_sync_mask(1, parsx_token(KInt))
	parsx_sync_mask(1, parsx_token(KFloat))
	parsx_sync_mask(1, parsx_token(NumberLiteral))
	parsx_sync_mask(1, parsx_token(KNot))
	parsx_sync_mask(1, parsx_token(KAs))
	parsx_sync_mask(1, parsx_token(OColon))
	parsx_sync_mask(1, parsx_token(OVBar))
	parsx_sync_mask(1, parsx_token(KNull))
	parsx_sync_mask(1, parsx_token(StringLiteral))
	parsx_sync_mask(1, parsx_token(KUnit))
	parsx_sync_mask(1, parsx_token(KIf))
	parsx_sync_mask(1, parsx_token(KUndef))
	parsx_sync_mask(1, parsx_token(KEnd))
	parsx_sync_mask(1, parsx_token(KStruct))
	parsx_sync_mask(1, parsx_token(ORParen))
	parsx_sync_mask(1, parsx_token(OLParen))
	parsx_sync_mask(1, parsx_token(OPlus))
	parsx_sync_mask(1, parsx_token(OMult))
	parsx_sync_mask(1, parsx_token(OMinus))
	parsx_sync_mask(1, parsx_token(OComma))
	parsx_sync_mask(1, parsx_token(ODiv))
	parsx_sync_mask(1, parsx_token(OPeriod))
	parsx_sync_mask(1, parsx_token(ONE))
	parsx_sync_mask(1, parsx_token(KBool))
	parsx_sync_mask(1, parsx_token(KElseIf))
	parsx_sync_mask(1, parsx_token(KImport))
	parsx_sync_mask(1, parsx_token(OSemicolon))
	parsx_sync_mask(1, parsx_token(OAssign))
	parsx_sync_mask(1, parsx_token(OLT))
	parsx_sync_mask(1, parsx_token(OQuestion))
	parsx_sync_mask(1, parsx_token(OGT))
	parsx_sync_mask(1, parsx_token(KFunction))
	parsx_sync_mask(1, parsx_token(KThen))
	parsx_sync_mask(1, parsx_token(KGlobal))
	parsx_sync_mask(1, parsx_token(KString))
	parsx_sync_mask(1, parsx_token(OEQ))
	parsx_sync_mask(1, parsx_token(KEnum))
	parsx_sync_mask(1, parsx_token(KElse))
	parsx_sync_mask(1, parsx_token(OLE))
	parsx_sync_mask(1, parsx_token(EndOfFile))
	parsx_sync_mask(1, parsx_token(KInterface))
	parsx_sync_mask(1, parsx_token(ORem))
	parsx_sync_mask(1, parsx_token(KTrue))
	parsx_sync_mask(1, parsx_token(KClass))
	parsx_sync_mask(1, parsx_token(KDouble))
	parsx_sync_mask(1, parsx_token(KBytes))
	parsx_sync_mask(1, parsx_token(OArrow))
	parsx_sync_mask(1, parsx_token(OLBrace))
	parsx_sync_mask(1, parsx_token(Identifier))
	parsx_sync_mask(1, parsx_token(ORBrace))
	parsx_sync_mask(1, parsx_token(KOr))
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(0)
	parsx_sync_mask(3, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar))
	parsx_sync_mask(2, parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(2, parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(1, parsx_token(OPeriod))
	parsx_sync_mask(1, parsx_token(OVBar))
	parsx_sync_mask(5, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(1, parsx_token(OVBar))
	parsx_sync_mask(3, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar))
	parsx_sync_mask(3, parsx_token(KGlobal), parsx_token(KFunction), parsx_token(Identifier))
	parsx_sync_mask(2, parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(3, parsx_token(KOr), parsx_token(OColon), parsx_token(KAnd))
	parsx_sync_mask(1, parsx_token(Identifier))
	parsx_sync_mask(5, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(6, parsx_token(OArrow), parsx_token(Identifier), parsx_token(OVBar), parsx_token(OPeriod), parsx_token(OQuestion), parsx_token(OColon))
	parsx_sync_mask(1, parsx_token(OVBar))
	parsx_sync_mask(3, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar))
	parsx_sync_mask(1, parsx_token(OVBar))
	parsx_sync_mask(11, parsx_token(KFloat), parsx_token(KString), parsx_token(KUnit), parsx_token(KBytes), parsx_token(Identifier), parsx_token(KUndef), parsx_token(KBool), parsx_token(OLParen), parsx_token(OLBrace), parsx_token(KDouble), parsx_token(KInt))
	parsx_sync_mask(3, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar))
	parsx_sync_mask(3, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar))
	parsx_sync_mask(3, parsx_token(OComma), parsx_token(OVBar), parsx_token(ORParen))
	parsx_sync_mask(5, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(5, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(5, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(2, parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(5, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(3, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar))
	parsx_sync_mask(1, parsx_token(OVBar))
	parsx_sync_mask(5, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(5, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(5, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(13, parsx_token(KFloat), parsx_token(KString), parsx_token(KUnit), parsx_token(ORBrace), parsx_token(KBytes), parsx_token(Identifier), parsx_token(ORParen), parsx_token(KUndef), parsx_token(KBool), parsx_token(OLBrace), parsx_token(OLParen), parsx_token(KInt), parsx_token(KDouble))
	parsx_sync_mask(3, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar))
	parsx_sync_mask(1, parsx_token(OVBar))
	parsx_sync_mask(5, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(3, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar))
	parsx_sync_mask(2, parsx_token(Identifier), parsx_token(KImport))
	parsx_sync_mask(2, parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(1, parsx_token(OComma))
	parsx_sync_mask(3, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar))
	parsx_sync_mask(14, parsx_token(OGT), parsx_token(ONE), parsx_token(KAnd), parsx_token(ORem), parsx_token(OLT), parsx_token(OMult), parsx_token(OMinus), parsx_token(OPlus), parsx_token(ODiv), parsx_token(OPeriod), parsx_token(OLE), parsx_token(OLParen), parsx_token(OEQ), parsx_token(OGE))
	parsx_sync_mask(1, parsx_token(OComma))
	parsx_sync_mask(3, parsx_token(OComma), parsx_token(OVBar), parsx_token(ORParen))
	parsx_sync_mask(3, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar))
	parsx_sync_mask(2, parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(12, parsx_token(KFloat), parsx_token(KString), parsx_token(Identifier), parsx_token(KBytes), parsx_token(ORParen), parsx_token(OLParen), parsx_token(KBool), parsx_token(OLBrace), parsx_token(KUndef), parsx_token(KInt), parsx_token(KDouble), parsx_token(KUnit))
	parsx_sync_mask(5, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(3, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar))
	parsx_sync_mask(5, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(12, parsx_token(KFloat), parsx_token(KString), parsx_token(Identifier), parsx_token(KBytes), parsx_token(ORParen), parsx_token(OLParen), parsx_token(KBool), parsx_token(OLBrace), parsx_token(KUndef), parsx_token(KInt), parsx_token(KDouble), parsx_token(KUnit))
	parsx_sync_mask(5, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(5, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(2, parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(1, parsx_token(OVBar))
	parsx_sync_mask(1, parsx_token(KImport))
	parsx_sync_mask(2, parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(2, parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(7, parsx_token(ODiv), parsx_token(OMinus), parsx_token(OPlus), parsx_token(ORem), parsx_token(OLParen), parsx_token(OPeriod), parsx_token(OMult))
	parsx_sync_mask(3, parsx_token(KElse), parsx_token(KEnd), parsx_token(KElseIf))
	parsx_sync_mask(3, parsx_token(OComma), parsx_token(OVBar), parsx_token(ORParen))
	parsx_sync_mask(12, parsx_token(OGT), parsx_token(ONE), parsx_token(KAnd), parsx_token(ORem), parsx_token(OLT), parsx_token(OMult), parsx_token(OMinus), parsx_token(OPlus), parsx_token(ODiv), parsx_token(OLE), parsx_token(OEQ), parsx_token(OGE))
	parsx_sync_mask(2, parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(5, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(1, parsx_token(OVBar))
	parsx_sync_mask(11, parsx_token(KNot), parsx_token(Identifier), parsx_token(KTrue), parsx_token(OMinus), parsx_token(KNull), parsx_token(NumberLiteral), parsx_token(KUnit), parsx_token(KIf), parsx_token(OLParen), parsx_token(KFalse), parsx_token(StringLiteral))
	parsx_sync_mask(15, parsx_token(OGT), parsx_token(ONE), parsx_token(KAnd), parsx_token(ORem), parsx_token(KOr), parsx_token(OGE), parsx_token(OMinus), parsx_token(OMult), parsx_token(OLT), parsx_token(OPlus), parsx_token(ODiv), parsx_token(OLE), parsx_token(OLParen), parsx_token(OEQ), parsx_token(OColon))
	parsx_sync_mask(5, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(1, parsx_token(OColon))
	parsx_sync_mask(5, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(5, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(5, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(3, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar))
	parsx_sync_mask(1, parsx_token(OVBar))
	parsx_sync_mask(12, parsx_token(KFloat), parsx_token(KString), parsx_token(Identifier), parsx_token(KBytes), parsx_token(OComma), parsx_token(KUndef), parsx_token(KBool), parsx_token(OLParen), parsx_token(OLBrace), parsx_token(KDouble), parsx_token(KInt), parsx_token(KUnit))
	parsx_sync_mask(4, parsx_token(OLParen), parsx_token(ODiv), parsx_token(ORem), parsx_token(OMult))
	parsx_sync_mask(14, parsx_token(OGT), parsx_token(ONE), parsx_token(KAnd), parsx_token(ORem), parsx_token(KOr), parsx_token(OGE), parsx_token(OMinus), parsx_token(OMult), parsx_token(OPlus), parsx_token(OLT), parsx_token(ODiv), parsx_token(OLE), parsx_token(OEQ), parsx_token(OColon))
	parsx_sync_mask(5, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(3, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar))
	parsx_sync_mask(3, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar))
	parsx_sync_mask(13, parsx_token(KNot), parsx_token(Identifier), parsx_token(KTrue), parsx_token(KImport), parsx_token(KNull), parsx_token(OMinus), parsx_token(NumberLiteral), parsx_token(KIf), parsx_token(KEnd), parsx_token(OLParen), parsx_token(KFalse), parsx_token(StringLiteral), parsx_token(KUnit))
	parsx_sync_mask(3, parsx_token(OComma), parsx_token(OVBar), parsx_token(ORParen))
	parsx_sync_mask(3, parsx_token(KOr), parsx_token(OColon), parsx_token(KAnd))
	parsx_sync_mask(2, parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(1, parsx_token(OPeriod))
	parsx_sync_mask(5, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(2, parsx_token(OLT), parsx_token(Identifier))
	parsx_sync_mask(1, parsx_token(OVBar))
	parsx_sync_mask(2, parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(5, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(2, parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(1, parsx_token(OVBar))
	parsx_sync_mask(3, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar))
	parsx_sync_mask(14, parsx_token(OGT), parsx_token(ONE), parsx_token(KAnd), parsx_token(ORem), parsx_token(KOr), parsx_token(OGE), parsx_token(OMinus), parsx_token(OMult), parsx_token(OPlus), parsx_token(OLT), parsx_token(ODiv), parsx_token(OLE), parsx_token(OEQ), parsx_token(OColon))
	parsx_sync_mask(1, parsx_token(OVBar))
	parsx_sync_mask(2, parsx_token(KOr), parsx_token(OColon))
	parsx_sync_mask(1, parsx_token(OColon))
	parsx_sync_mask(3, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar))
	parsx_sync_mask(3, parsx_token(OComma), parsx_token(OVBar), parsx_token(ORParen))
	parsx_sync_mask(3, parsx_token(OComma), parsx_token(OVBar), parsx_token(ORParen))
	parsx_sync_mask(3, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar))
	parsx_sync_mask(11, parsx_token(KFloat), parsx_token(KString), parsx_token(KUnit), parsx_token(KBytes), parsx_token(Identifier), parsx_token(KUndef), parsx_token(KBool), parsx_token(OLBrace), parsx_token(OLParen), parsx_token(KInt), parsx_token(KDouble))
	parsx_sync_mask(1, parsx_token(OVBar))
	parsx_sync_mask(3, parsx_token(OVBar), parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(0)
	parsx_sync_mask(3, parsx_token(OVBar), parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(1, parsx_token(OLParen))
	parsx_sync_mask(2, parsx_token(OComma), parsx_token(ORBrace))
	parsx_sync_mask(9, parsx_token(OGT), parsx_token(ONE), parsx_token(KAnd), parsx_token(OLT), parsx_token(OMinus), parsx_token(OPlus), parsx_token(OLE), parsx_token(OEQ), parsx_token(OGE))
	parsx_sync_mask(5, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(5, parsx_token(OLParen), parsx_token(ODiv), parsx_token(OPeriod), parsx_token(ORem), parsx_token(OMult))
	parsx_sync_mask(5, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(3, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar))
	parsx_sync_mask(2, parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(11, parsx_token(KString), parsx_token(KFloat), parsx_token(KDouble), parsx_token(KBytes), parsx_token(KUndef), parsx_token(KBool), parsx_token(OLBrace), parsx_token(OLParen), parsx_token(Identifier), parsx_token(KInt), parsx_token(KUnit))
	parsx_sync_mask(2, parsx_token(KGlobal), parsx_token(KFunction))
	parsx_sync_mask(2, parsx_token(KOr), parsx_token(OColon))
	parsx_sync_mask(11, parsx_token(KNot), parsx_token(Identifier), parsx_token(KTrue), parsx_token(OMinus), parsx_token(KNull), parsx_token(NumberLiteral), parsx_token(KIf), parsx_token(OLParen), parsx_token(KFalse), parsx_token(StringLiteral), parsx_token(KUnit))
	parsx_sync_mask(1, parsx_token(OPeriod))
	parsx_sync_mask(3, parsx_token(OVBar), parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(2, parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(4, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OPeriod))
	parsx_sync_mask(3, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar))
	parsx_sync_mask(11, parsx_token(OGT), parsx_token(ONE), parsx_token(KAnd), parsx_token(OLT), parsx_token(OGE), parsx_token(OMinus), parsx_token(OPlus), parsx_token(KOr), parsx_token(OLE), parsx_token(OEQ), parsx_token(OColon))
	parsx_sync_mask(2, parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(11, parsx_token(OGT), parsx_token(ONE), parsx_token(KAnd), parsx_token(KOr), parsx_token(OGE), parsx_token(OMinus), parsx_token(OPlus), parsx_token(OLT), parsx_token(OLE), parsx_token(OEQ), parsx_token(OColon))
	parsx_sync_mask(3, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar))
	parsx_sync_mask(1, parsx_token(OVBar))
	parsx_sync_mask(3, parsx_token(OComma), parsx_token(OVBar), parsx_token(ORParen))
	parsx_sync_mask(3, parsx_token(OVBar), parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(3, parsx_token(OComma), parsx_token(OVBar), parsx_token(ORParen))
	parsx_sync_mask(2, parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(1, parsx_token(OAssign))
	parsx_sync_mask(2, parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(3, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar))
	parsx_sync_mask(5, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(1, parsx_token(OVBar))
	parsx_sync_mask(3, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar))
	parsx_sync_mask(1, parsx_token(Identifier))
	parsx_sync_mask(3, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar))
	parsx_sync_mask(3, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar))
	parsx_sync_mask(5, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(3, parsx_token(OVBar), parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(4, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OPeriod))
	parsx_sync_mask(3, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar))
	parsx_sync_mask(3, parsx_token(OVBar), parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(2, parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(4, parsx_token(KGlobal), parsx_token(EndOfFile), parsx_token(KImport), parsx_token(KFunction))
	parsx_sync_mask(2, parsx_token(OArrow), parsx_token(OQuestion))
	parsx_sync_mask(11, parsx_token(OGT), parsx_token(ONE), parsx_token(KAnd), parsx_token(OLT), parsx_token(OGE), parsx_token(OMinus), parsx_token(OPlus), parsx_token(KOr), parsx_token(OLE), parsx_token(OEQ), parsx_token(OColon))
	parsx_sync_mask(13, parsx_token(ONE), parsx_token(OGT), parsx_token(OEQ), parsx_token(ORem), parsx_token(OLT), parsx_token(OMult), parsx_token(OMinus), parsx_token(OPlus), parsx_token(ODiv), parsx_token(OPeriod), parsx_token(OLParen), parsx_token(OLE), parsx_token(OGE))
	parsx_sync_mask(2, parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(3, parsx_token(ODiv), parsx_token(OMult), parsx_token(ORem))
	parsx_sync_mask(4, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OPeriod))
	parsx_sync_mask(3, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar))
	parsx_sync_mask(2, parsx_token(Identifier), parsx_token(OColon))
	parsx_sync_mask(1, parsx_token(OVBar))
	parsx_sync_mask(5, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(1, parsx_token(OVBar))
	parsx_sync_mask(3, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar))
	parsx_sync_mask(14, parsx_token(OGT), parsx_token(ONE), parsx_token(KAnd), parsx_token(ORem), parsx_token(KOr), parsx_token(OGE), parsx_token(OMinus), parsx_token(OMult), parsx_token(OPlus), parsx_token(OLT), parsx_token(ODiv), parsx_token(OLE), parsx_token(OEQ), parsx_token(OColon))
	parsx_sync_mask(1, parsx_token(OVBar))
	parsx_sync_mask(3, parsx_token(KOr), parsx_token(OColon), parsx_token(KAnd))
	parsx_sync_mask(5, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(1, parsx_token(Identifier))
	parsx_sync_mask(3, parsx_token(OVBar), parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(3, parsx_token(OComma), parsx_token(OVBar), parsx_token(ORParen))
	parsx_sync_mask(12, parsx_token(KNot), parsx_token(Identifier), parsx_token(KTrue), parsx_token(OMinus), parsx_token(KNull), parsx_token(OComma), parsx_token(NumberLiteral), parsx_token(KUnit), parsx_token(KIf), parsx_token(OLParen), parsx_token(KFalse), parsx_token(StringLiteral))
	parsx_sync_mask(2, parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(10, parsx_token(KFloat), parsx_token(KString), parsx_token(KDouble), parsx_token(KBytes), parsx_token(KBool), parsx_token(OLBrace), parsx_token(KUndef), parsx_token(Identifier), parsx_token(KInt), parsx_token(KUnit))
	parsx_sync_mask(11, parsx_token(KFloat), parsx_token(KString), parsx_token(KUnit), parsx_token(KBytes), parsx_token(Identifier), parsx_token(KUndef), parsx_token(KBool), parsx_token(OLBrace), parsx_token(OLParen), parsx_token(KInt), parsx_token(KDouble))
	parsx_sync_mask(13, parsx_token(KFloat), parsx_token(KString), parsx_token(KUnit), parsx_token(ORBrace), parsx_token(KBytes), parsx_token(Identifier), parsx_token(ORParen), parsx_token(KUndef), parsx_token(KBool), parsx_token(OLBrace), parsx_token(OLParen), parsx_token(KInt), parsx_token(KDouble))
	parsx_sync_mask(3, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar))
	parsx_sync_mask(11, parsx_token(KNot), parsx_token(Identifier), parsx_token(KTrue), parsx_token(OMinus), parsx_token(KNull), parsx_token(NumberLiteral), parsx_token(KIf), parsx_token(OLParen), parsx_token(KFalse), parsx_token(StringLiteral), parsx_token(KUnit))
	parsx_sync_mask(3, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar))
	parsx_sync_mask(9, parsx_token(KNot), parsx_token(KFalse), parsx_token(KTrue), parsx_token(KNull), parsx_token(NumberLiteral), parsx_token(OSemicolon), parsx_token(Identifier), parsx_token(StringLiteral), parsx_token(KUnit))
	parsx_sync_mask(3, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar))
	parsx_sync_mask(1, parsx_token(KAs))
	parsx_sync_mask(3, parsx_token(OComma), parsx_token(OVBar), parsx_token(ORParen))
	parsx_sync_mask(2, parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(16, parsx_token(ONE), parsx_token(OGT), parsx_token(KAnd), parsx_token(ORem), parsx_token(KOr), parsx_token(OGE), parsx_token(OMinus), parsx_token(OMult), parsx_token(OLT), parsx_token(OPlus), parsx_token(ODiv), parsx_token(OPeriod), parsx_token(OEQ), parsx_token(OLParen), parsx_token(OLE), parsx_token(OColon))
	parsx_sync_mask(12, parsx_token(KFloat), parsx_token(KString), parsx_token(Identifier), parsx_token(ORBrace), parsx_token(KBytes), parsx_token(KUndef), parsx_token(KBool), parsx_token(OLBrace), parsx_token(OLParen), parsx_token(KDouble), parsx_token(KInt), parsx_token(KUnit))
	parsx_sync_mask(1, parsx_token(OVBar))
	parsx_sync_mask(16, parsx_token(ONE), parsx_token(OGT), parsx_token(OEQ), parsx_token(ORem), parsx_token(OLT), parsx_token(OGE), parsx_token(OMinus), parsx_token(OMult), parsx_token(OPlus), parsx_token(KOr), parsx_token(ODiv), parsx_token(OPeriod), parsx_token(OLParen), parsx_token(OLE), parsx_token(KAnd), parsx_token(OColon))
	parsx_sync_mask(11, parsx_token(OGT), parsx_token(ONE), parsx_token(OEQ), parsx_token(ODiv), parsx_token(OMult), parsx_token(OMinus), parsx_token(OPlus), parsx_token(OLT), parsx_token(OLE), parsx_token(ORem), parsx_token(OGE))
	parsx_sync_mask(1, parsx_token(Identifier))
	parsx_sync_mask(12, parsx_token(KFloat), parsx_token(KString), parsx_token(KDouble), parsx_token(KBytes), parsx_token(ORParen), parsx_token(KUndef), parsx_token(KBool), parsx_token(OLBrace), parsx_token(OLParen), parsx_token(Identifier), parsx_token(KInt), parsx_token(KUnit))
	parsx_sync_mask(3, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar))
	parsx_sync_mask(12, parsx_token(KFloat), parsx_token(KString), parsx_token(KDouble), parsx_token(KBytes), parsx_token(ORParen), parsx_token(KUndef), parsx_token(KBool), parsx_token(OLBrace), parsx_token(OLParen), parsx_token(Identifier), parsx_token(KInt), parsx_token(KUnit))
	parsx_sync_mask(2, parsx_token(KGlobal), parsx_token(KFunction))
	parsx_sync_mask(11, parsx_token(KNot), parsx_token(Identifier), parsx_token(KTrue), parsx_token(OMinus), parsx_token(KNull), parsx_token(NumberLiteral), parsx_token(KIf), parsx_token(OLParen), parsx_token(KFalse), parsx_token(StringLiteral), parsx_token(KUnit))
	parsx_sync_mask(16, parsx_token(OGT), parsx_token(ONE), parsx_token(OEQ), parsx_token(OLT), parsx_token(OGE), parsx_token(OMinus), parsx_token(OMult), parsx_token(OPlus), parsx_token(KOr), parsx_token(ODiv), parsx_token(OPeriod), parsx_token(OLE), parsx_token(OLParen), parsx_token(ORem), parsx_token(KAnd), parsx_token(OColon))
	parsx_sync_mask(5, parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OComma), parsx_token(OArrow), parsx_token(ORParen))
	parsx_sync_mask(3, parsx_token(OComma), parsx_token(OVBar), parsx_token(ORParen))
	parsx_sync_mask(3, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar))
	parsx_sync_mask(8, parsx_token(OGT), parsx_token(ONE), parsx_token(OEQ), parsx_token(OLT), parsx_token(OMinus), parsx_token(OPlus), parsx_token(OLE), parsx_token(OGE))
	parsx_sync_mask(3, parsx_token(KGlobal), parsx_token(KFunction), parsx_token(KImport))
	parsx_sync_mask(3, parsx_token(OComma), parsx_token(OVBar), parsx_token(ORParen))
	parsx_sync_mask(3, parsx_token(OComma), parsx_token(OVBar), parsx_token(ORParen))
	parsx_sync_mask(2, parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(4, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OPeriod))
	parsx_sync_mask(11, parsx_token(KFloat), parsx_token(KString), parsx_token(KUnit), parsx_token(KBytes), parsx_token(Identifier), parsx_token(KUndef), parsx_token(KBool), parsx_token(OLBrace), parsx_token(OLParen), parsx_token(KInt), parsx_token(KDouble))
	parsx_sync_mask(1, parsx_token(OVBar))
	parsx_sync_mask(3, parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OArrow))
	parsx_sync_mask(16, parsx_token(OGT), parsx_token(ONE), parsx_token(OEQ), parsx_token(OLT), parsx_token(OGE), parsx_token(OMinus), parsx_token(OMult), parsx_token(OPlus), parsx_token(KOr), parsx_token(ODiv), parsx_token(OPeriod), parsx_token(OLE), parsx_token(OLParen), parsx_token(ORem), parsx_token(KAnd), parsx_token(OColon))
	parsx_sync_mask(11, parsx_token(KNot), parsx_token(KFalse), parsx_token(KTrue), parsx_token(OMinus), parsx_token(KNull), parsx_token(Identifier), parsx_token(NumberLiteral), parsx_token(KIf), parsx_token(OLParen), parsx_token(KUnit), parsx_token(StringLiteral))
	parsx_sync_mask(3, parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OArrow))
	parsx_sync_mask(5, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(1, parsx_token(OVBar))
	parsx_sync_mask(5, parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OComma), parsx_token(OArrow), parsx_token(ORParen))
	parsx_sync_mask(2, parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(2, parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(15, parsx_token(ONE), parsx_token(OGT), parsx_token(OEQ), parsx_token(ORem), parsx_token(KOr), parsx_token(OGE), parsx_token(OMinus), parsx_token(OMult), parsx_token(OLT), parsx_token(OPlus), parsx_token(ODiv), parsx_token(OLE), parsx_token(OLParen), parsx_token(KAnd), parsx_token(OColon))
	parsx_sync_mask(11, parsx_token(KNot), parsx_token(Identifier), parsx_token(KTrue), parsx_token(OMinus), parsx_token(KNull), parsx_token(NumberLiteral), parsx_token(KUnit), parsx_token(KIf), parsx_token(OLParen), parsx_token(KFalse), parsx_token(StringLiteral))
	parsx_sync_mask(2, parsx_token(KOr), parsx_token(OColon))
	parsx_sync_mask(7, parsx_token(KUnit), parsx_token(KTrue), parsx_token(KNull), parsx_token(Identifier), parsx_token(NumberLiteral), parsx_token(KFalse), parsx_token(StringLiteral))
	parsx_sync_mask(5, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(2, parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(3, parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OArrow))
	parsx_sync_mask(2, parsx_token(OPlus), parsx_token(OMinus))
	parsx_sync_mask(1, parsx_token(OVBar))
	parsx_sync_mask(3, parsx_token(OComma), parsx_token(OVBar), parsx_token(ORParen))
	parsx_sync_mask(2, parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(3, parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OArrow))
	parsx_sync_mask(11, parsx_token(KNot), parsx_token(Identifier), parsx_token(KTrue), parsx_token(OMinus), parsx_token(KNull), parsx_token(NumberLiteral), parsx_token(KIf), parsx_token(OLParen), parsx_token(KFalse), parsx_token(StringLiteral), parsx_token(KUnit))
	parsx_sync_mask(5, parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OComma), parsx_token(OArrow), parsx_token(ORParen))
	parsx_sync_mask(1, parsx_token(OVBar))
	parsx_sync_mask(2, parsx_token(ORParen), parsx_token(OLParen))
	parsx_sync_mask(5, parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OComma), parsx_token(OArrow), parsx_token(ORParen))
	parsx_sync_mask(3, parsx_token(OLT), parsx_token(ONE), parsx_token(Identifier))
	parsx_sync_mask(3, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar))
	parsx_sync_mask(3, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar))
	parsx_sync_mask(12, parsx_token(ONE), parsx_token(OGT), parsx_token(OEQ), parsx_token(ODiv), parsx_token(OMult), parsx_token(OMinus), parsx_token(OPlus), parsx_token(OLT), parsx_token(OLE), parsx_token(OLParen), parsx_token(ORem), parsx_token(OGE))
	parsx_sync_mask(3, parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OArrow))
	parsx_sync_mask(2, parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(5, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(5, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(3, parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OArrow))
	parsx_sync_mask(2, parsx_token(OLT), parsx_token(Identifier))
	parsx_sync_mask(15, parsx_token(ONE), parsx_token(OGT), parsx_token(OEQ), parsx_token(ORem), parsx_token(KOr), parsx_token(OGE), parsx_token(OMinus), parsx_token(OMult), parsx_token(OLT), parsx_token(OPlus), parsx_token(ODiv), parsx_token(OLE), parsx_token(OLParen), parsx_token(KAnd), parsx_token(OColon))
	parsx_sync_mask(1, parsx_token(OVBar))
	parsx_sync_mask(15, parsx_token(ONE), parsx_token(OGT), parsx_token(OEQ), parsx_token(ORem), parsx_token(KOr), parsx_token(OGE), parsx_token(OMinus), parsx_token(OMult), parsx_token(OLT), parsx_token(OPlus), parsx_token(ODiv), parsx_token(OLE), parsx_token(OLParen), parsx_token(KAnd), parsx_token(OColon))
	parsx_sync_mask(3, parsx_token(OComma), parsx_token(OVBar), parsx_token(ORParen))
	parsx_sync_mask(11, parsx_token(KNot), parsx_token(Identifier), parsx_token(KTrue), parsx_token(OMinus), parsx_token(KNull), parsx_token(NumberLiteral), parsx_token(KIf), parsx_token(OLParen), parsx_token(KFalse), parsx_token(StringLiteral), parsx_token(KUnit))
	parsx_sync_mask(5, parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OComma), parsx_token(OArrow), parsx_token(ORParen))
	parsx_sync_mask(1, parsx_token(OComma))
	parsx_sync_mask(13, parsx_token(ONE), parsx_token(OGT), parsx_token(KAnd), parsx_token(ORem), parsx_token(ODiv), parsx_token(OMult), parsx_token(OMinus), parsx_token(OPlus), parsx_token(OLT), parsx_token(OLE), parsx_token(OLParen), parsx_token(OEQ), parsx_token(OGE))
	parsx_sync_mask(2, parsx_token(OLParen), parsx_token(OPeriod))
	parsx_sync_mask(2, parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(11, parsx_token(OGT), parsx_token(ONE), parsx_token(KAnd), parsx_token(KOr), parsx_token(OGE), parsx_token(OMinus), parsx_token(OPlus), parsx_token(OLT), parsx_token(OLE), parsx_token(OEQ), parsx_token(OColon))
	parsx_sync_mask(1, parsx_token(KImport))
	parsx_sync_mask(11, parsx_token(KString), parsx_token(KFloat), parsx_token(KDouble), parsx_token(KBytes), parsx_token(Identifier), parsx_token(KUndef), parsx_token(KBool), parsx_token(OLParen), parsx_token(OLBrace), parsx_token(KInt), parsx_token(KUnit))
	parsx_sync_mask(5, parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OComma), parsx_token(OArrow), parsx_token(ORParen))
	parsx_sync_mask(12, parsx_token(KFloat), parsx_token(KString), parsx_token(KInt), parsx_token(KBytes), parsx_token(Identifier), parsx_token(ORParen), parsx_token(KUndef), parsx_token(KBool), parsx_token(OLParen), parsx_token(OLBrace), parsx_token(KDouble), parsx_token(KUnit))
	parsx_sync_mask(3, parsx_token(OComma), parsx_token(OVBar), parsx_token(ORParen))
	parsx_sync_mask(3, parsx_token(KOr), parsx_token(OColon), parsx_token(KAnd))
	parsx_sync_mask(2, parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(3, parsx_token(OComma), parsx_token(OVBar), parsx_token(ORParen))
	parsx_sync_mask(2, parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(6, parsx_token(ODiv), parsx_token(OMinus), parsx_token(OPlus), parsx_token(ORem), parsx_token(OLParen), parsx_token(OMult))
	parsx_sync_mask(5, parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OComma), parsx_token(OArrow), parsx_token(ORParen))
	parsx_sync_mask(12, parsx_token(KFloat), parsx_token(KString), parsx_token(KDouble), parsx_token(KBytes), parsx_token(Identifier), parsx_token(OVBar), parsx_token(KUndef), parsx_token(KBool), parsx_token(OLBrace), parsx_token(OLParen), parsx_token(KUnit), parsx_token(KInt))
	parsx_sync_mask(1, parsx_token(KAnd))
	parsx_sync_mask(2, parsx_token(OComma), parsx_token(ORBrace))
	parsx_sync_mask(5, parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OComma), parsx_token(OArrow), parsx_token(ORParen))
	parsx_sync_mask(5, parsx_token(OPlus), parsx_token(ODiv), parsx_token(OMinus), parsx_token(ORem), parsx_token(OMult))
	parsx_sync_mask(3, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar))
	parsx_sync_mask(3, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar))
	parsx_sync_mask(12, parsx_token(KFloat), parsx_token(KString), parsx_token(Identifier), parsx_token(ORBrace), parsx_token(KBytes), parsx_token(KUndef), parsx_token(KBool), parsx_token(OLBrace), parsx_token(OLParen), parsx_token(KDouble), parsx_token(KInt), parsx_token(KUnit))
	parsx_sync_mask(1, parsx_token(OVBar))
	parsx_sync_mask(3, parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OArrow))
	parsx_sync_mask(14, parsx_token(ONE), parsx_token(OGT), parsx_token(KAnd), parsx_token(ORem), parsx_token(KOr), parsx_token(OGE), parsx_token(OMinus), parsx_token(OMult), parsx_token(OLT), parsx_token(OPlus), parsx_token(ODiv), parsx_token(OLE), parsx_token(OEQ), parsx_token(OColon))
	parsx_sync_mask(2, parsx_token(KOr), parsx_token(OColon))
	parsx_sync_mask(3, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar))
	parsx_sync_mask(13, parsx_token(KFloat), parsx_token(KString), parsx_token(Identifier), parsx_token(ORBrace), parsx_token(KBytes), parsx_token(ORParen), parsx_token(KUndef), parsx_token(KBool), parsx_token(OLBrace), parsx_token(OLParen), parsx_token(KDouble), parsx_token(KInt), parsx_token(KUnit))
	parsx_sync_mask(5, parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OComma), parsx_token(OArrow), parsx_token(ORParen))
	parsx_sync_mask(5, parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OComma), parsx_token(OArrow), parsx_token(ORParen))
	parsx_sync_mask(2, parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(3, parsx_token(OComma), parsx_token(OVBar), parsx_token(ORParen))
	parsx_sync_mask(5, parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OComma), parsx_token(OArrow), parsx_token(ORParen))
	parsx_sync_mask(1, parsx_token(OVBar))
	parsx_sync_mask(5, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(1, parsx_token(OComma))
	parsx_sync_mask(3, parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OArrow))
	parsx_sync_mask(5, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(2, parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(2, parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(3, parsx_token(OComma), parsx_token(OVBar), parsx_token(ORParen))
	parsx_sync_mask(5, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OComma), parsx_token(ORParen))
	parsx_sync_mask(12, parsx_token(KFloat), parsx_token(KString), parsx_token(KDouble), parsx_token(KBytes), parsx_token(ORParen), parsx_token(KUndef), parsx_token(KBool), parsx_token(OLBrace), parsx_token(OLParen), parsx_token(Identifier), parsx_token(KInt), parsx_token(KUnit))
	parsx_sync_mask(3, parsx_token(OComma), parsx_token(OVBar), parsx_token(ORParen))
	parsx_sync_mask(5, parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OComma), parsx_token(OArrow), parsx_token(ORParen))
	parsx_sync_mask(5, parsx_token(OArrow), parsx_token(OQuestion), parsx_token(OVBar), parsx_token(OComma), parsx_token(ORParen))
parsx_sync_mask_table_end()


parsx_sync_cost_func_begin()
	switch ( parsx_sync_state ){
		case 1:{
			switch ( parsx_sync_token ){
				case parsx_token(KAnd):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 2:{
			switch ( parsx_sync_token ){
				case parsx_token(KFalse):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 3:{
			switch ( parsx_sync_token ){
				case parsx_token(OGE):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 4:{
			switch ( parsx_sync_token ){
				case parsx_token(KInt):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 5:{
			switch ( parsx_sync_token ){
				case parsx_token(KFloat):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 6:{
			switch ( parsx_sync_token ){
				case parsx_token(NumberLiteral):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 7:{
			switch ( parsx_sync_token ){
				case parsx_token(KNot):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 8:{
			switch ( parsx_sync_token ){
				case parsx_token(KAs):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 9:{
			switch ( parsx_sync_token ){
				case parsx_token(OColon):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 10:{
			switch ( parsx_sync_token ){
				case parsx_token(OVBar):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 11:{
			switch ( parsx_sync_token ){
				case parsx_token(KNull):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 12:{
			switch ( parsx_sync_token ){
				case parsx_token(StringLiteral):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 13:{
			switch ( parsx_sync_token ){
				case parsx_token(KUnit):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 14:{
			switch ( parsx_sync_token ){
				case parsx_token(KIf):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 15:{
			switch ( parsx_sync_token ){
				case parsx_token(KUndef):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 16:{
			switch ( parsx_sync_token ){
				case parsx_token(KEnd):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 17:{
			switch ( parsx_sync_token ){
				case parsx_token(KStruct):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 18:{
			switch ( parsx_sync_token ){
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 19:{
			switch ( parsx_sync_token ){
				case parsx_token(OLParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 20:{
			switch ( parsx_sync_token ){
				case parsx_token(OPlus):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 21:{
			switch ( parsx_sync_token ){
				case parsx_token(OMult):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 22:{
			switch ( parsx_sync_token ){
				case parsx_token(OMinus):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 23:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 24:{
			switch ( parsx_sync_token ){
				case parsx_token(ODiv):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 25:{
			switch ( parsx_sync_token ){
				case parsx_token(OPeriod):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 26:{
			switch ( parsx_sync_token ){
				case parsx_token(ONE):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 27:{
			switch ( parsx_sync_token ){
				case parsx_token(KBool):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 28:{
			switch ( parsx_sync_token ){
				case parsx_token(KElseIf):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 29:{
			switch ( parsx_sync_token ){
				case parsx_token(KImport):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 30:{
			switch ( parsx_sync_token ){
				case parsx_token(OSemicolon):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 31:{
			switch ( parsx_sync_token ){
				case parsx_token(OAssign):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 32:{
			switch ( parsx_sync_token ){
				case parsx_token(OLT):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 33:{
			switch ( parsx_sync_token ){
				case parsx_token(OQuestion):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 34:{
			switch ( parsx_sync_token ){
				case parsx_token(OGT):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 35:{
			switch ( parsx_sync_token ){
				case parsx_token(KFunction):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 36:{
			switch ( parsx_sync_token ){
				case parsx_token(KThen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 37:{
			switch ( parsx_sync_token ){
				case parsx_token(KGlobal):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 38:{
			switch ( parsx_sync_token ){
				case parsx_token(KString):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 39:{
			switch ( parsx_sync_token ){
				case parsx_token(OEQ):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 40:{
			switch ( parsx_sync_token ){
				case parsx_token(KEnum):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 41:{
			switch ( parsx_sync_token ){
				case parsx_token(KElse):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 42:{
			switch ( parsx_sync_token ){
				case parsx_token(OLE):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 43:{
			switch ( parsx_sync_token ){
				case parsx_token(EndOfFile):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 44:{
			switch ( parsx_sync_token ){
				case parsx_token(KInterface):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 45:{
			switch ( parsx_sync_token ){
				case parsx_token(ORem):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 46:{
			switch ( parsx_sync_token ){
				case parsx_token(KTrue):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 47:{
			switch ( parsx_sync_token ){
				case parsx_token(KClass):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 48:{
			switch ( parsx_sync_token ){
				case parsx_token(KDouble):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 49:{
			switch ( parsx_sync_token ){
				case parsx_token(KBytes):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 50:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 51:{
			switch ( parsx_sync_token ){
				case parsx_token(OLBrace):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 52:{
			switch ( parsx_sync_token ){
				case parsx_token(Identifier):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 53:{
			switch ( parsx_sync_token ){
				case parsx_token(ORBrace):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 54:{
			switch ( parsx_sync_token ){
				case parsx_token(KOr):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 55:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 56:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 57:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 58:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 59:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 60:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 61:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 62:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 63:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 64:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 65:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 66:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 67:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 68:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 69:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 70:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 71:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 72:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 73:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 74:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 75:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 76:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 77:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 78:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 79:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 80:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 81:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 82:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 83:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 84:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 85:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 86:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 87:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 88:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 89:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 90:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 91:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 92:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 93:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 94:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 95:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 96:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 97:{
			switch ( parsx_sync_token ){
				default:{return 1;}break;
			}
		}break;
		case 98:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 99:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 100:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 101:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 102:{
			switch ( parsx_sync_token ){
				default:{return 1;}break;
			}
		}break;
		case 103:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 104:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 105:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 106:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 107:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 108:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 109:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 110:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 111:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 112:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 113:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 114:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 115:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 116:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 117:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 118:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 119:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 120:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 121:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 122:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 123:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 124:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 125:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 126:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 127:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 128:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 129:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 130:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 131:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 132:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 133:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 134:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 135:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 136:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 137:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 138:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 139:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 140:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 141:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 142:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 143:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 144:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 145:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 146:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 147:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 148:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 149:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 150:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 151:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 152:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 153:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 154:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 155:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 156:{
			switch ( parsx_sync_token ){
				case parsx_token(OPeriod):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 157:{
			switch ( parsx_sync_token ){
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 158:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 159:{
			switch ( parsx_sync_token ){
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 160:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 161:{
			switch ( parsx_sync_token ){
				case parsx_token(KGlobal):{return 0;}break;
				case parsx_token(KFunction):{return 0;}break;
				case parsx_token(Identifier):{return 1;}break;
				default:{return 5;}break;
			}
		}break;
		case 162:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 163:{
			switch ( parsx_sync_token ){
				case parsx_token(KOr):{return 0;}break;
				case parsx_token(OColon):{return 0;}break;
				case parsx_token(KAnd):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 164:{
			switch ( parsx_sync_token ){
				case parsx_token(Identifier):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 165:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 166:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(Identifier):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OPeriod):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OColon):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 167:{
			switch ( parsx_sync_token ){
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 168:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 169:{
			switch ( parsx_sync_token ){
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 170:{
			switch ( parsx_sync_token ){
				case parsx_token(KFloat):{return 0;}break;
				case parsx_token(KString):{return 0;}break;
				case parsx_token(KUnit):{return 0;}break;
				case parsx_token(KBytes):{return 0;}break;
				case parsx_token(Identifier):{return 0;}break;
				case parsx_token(KUndef):{return 0;}break;
				case parsx_token(KBool):{return 0;}break;
				case parsx_token(OLParen):{return 0;}break;
				case parsx_token(OLBrace):{return 0;}break;
				case parsx_token(KDouble):{return 0;}break;
				case parsx_token(KInt):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 171:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 172:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 173:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 174:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 175:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 176:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 177:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 178:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 179:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 180:{
			switch ( parsx_sync_token ){
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 181:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 182:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 183:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 184:{
			switch ( parsx_sync_token ){
				case parsx_token(KFloat):{return 0;}break;
				case parsx_token(KString):{return 0;}break;
				case parsx_token(KUnit):{return 0;}break;
				case parsx_token(ORBrace):{return 0;}break;
				case parsx_token(KBytes):{return 0;}break;
				case parsx_token(Identifier):{return 0;}break;
				case parsx_token(ORParen):{return 1;}break;
				case parsx_token(KUndef):{return 0;}break;
				case parsx_token(KBool):{return 0;}break;
				case parsx_token(OLBrace):{return 0;}break;
				case parsx_token(OLParen):{return 0;}break;
				case parsx_token(KInt):{return 0;}break;
				case parsx_token(KDouble):{return 0;}break;
				default:{return 2;}break;
			}
		}break;
		case 185:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 186:{
			switch ( parsx_sync_token ){
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 187:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 188:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 189:{
			switch ( parsx_sync_token ){
				case parsx_token(Identifier):{return 1;}break;
				case parsx_token(KImport):{return 0;}break;
				default:{return 2;}break;
			}
		}break;
		case 190:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 191:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 192:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 193:{
			switch ( parsx_sync_token ){
				case parsx_token(OGT):{return 0;}break;
				case parsx_token(ONE):{return 0;}break;
				case parsx_token(KAnd):{return 0;}break;
				case parsx_token(ORem):{return 0;}break;
				case parsx_token(OLT):{return 0;}break;
				case parsx_token(OMult):{return 0;}break;
				case parsx_token(OMinus):{return 0;}break;
				case parsx_token(OPlus):{return 0;}break;
				case parsx_token(ODiv):{return 0;}break;
				case parsx_token(OPeriod):{return 0;}break;
				case parsx_token(OLE):{return 0;}break;
				case parsx_token(OLParen):{return 0;}break;
				case parsx_token(OEQ):{return 0;}break;
				case parsx_token(OGE):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 194:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 195:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 196:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 197:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 198:{
			switch ( parsx_sync_token ){
				case parsx_token(KFloat):{return 0;}break;
				case parsx_token(KString):{return 0;}break;
				case parsx_token(Identifier):{return 0;}break;
				case parsx_token(KBytes):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				case parsx_token(OLParen):{return 0;}break;
				case parsx_token(KBool):{return 0;}break;
				case parsx_token(OLBrace):{return 0;}break;
				case parsx_token(KUndef):{return 0;}break;
				case parsx_token(KInt):{return 0;}break;
				case parsx_token(KDouble):{return 0;}break;
				case parsx_token(KUnit):{return 0;}break;
				default:{return 2;}break;
			}
		}break;
		case 199:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 200:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 201:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 202:{
			switch ( parsx_sync_token ){
				case parsx_token(KFloat):{return 0;}break;
				case parsx_token(KString):{return 0;}break;
				case parsx_token(Identifier):{return 0;}break;
				case parsx_token(KBytes):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				case parsx_token(OLParen):{return 0;}break;
				case parsx_token(KBool):{return 0;}break;
				case parsx_token(OLBrace):{return 0;}break;
				case parsx_token(KUndef):{return 0;}break;
				case parsx_token(KInt):{return 0;}break;
				case parsx_token(KDouble):{return 0;}break;
				case parsx_token(KUnit):{return 0;}break;
				default:{return 3;}break;
			}
		}break;
		case 203:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 204:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 205:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 206:{
			switch ( parsx_sync_token ){
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 207:{
			switch ( parsx_sync_token ){
				case parsx_token(KImport):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 208:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 209:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 210:{
			switch ( parsx_sync_token ){
				case parsx_token(ODiv):{return 0;}break;
				case parsx_token(OMinus):{return 0;}break;
				case parsx_token(OPlus):{return 0;}break;
				case parsx_token(ORem):{return 0;}break;
				case parsx_token(OLParen):{return 0;}break;
				case parsx_token(OPeriod):{return 0;}break;
				case parsx_token(OMult):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 211:{
			switch ( parsx_sync_token ){
				case parsx_token(KElse):{return 0;}break;
				case parsx_token(KEnd):{return 2;}break;
				case parsx_token(KElseIf):{return 0;}break;
				default:{return 3;}break;
			}
		}break;
		case 212:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 213:{
			switch ( parsx_sync_token ){
				case parsx_token(OGT):{return 0;}break;
				case parsx_token(ONE):{return 0;}break;
				case parsx_token(KAnd):{return 0;}break;
				case parsx_token(ORem):{return 0;}break;
				case parsx_token(OLT):{return 0;}break;
				case parsx_token(OMult):{return 0;}break;
				case parsx_token(OMinus):{return 0;}break;
				case parsx_token(OPlus):{return 0;}break;
				case parsx_token(ODiv):{return 0;}break;
				case parsx_token(OLE):{return 0;}break;
				case parsx_token(OEQ):{return 0;}break;
				case parsx_token(OGE):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 214:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 215:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 216:{
			switch ( parsx_sync_token ){
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 217:{
			switch ( parsx_sync_token ){
				case parsx_token(KNot):{return 0;}break;
				case parsx_token(Identifier):{return 0;}break;
				case parsx_token(KTrue):{return 0;}break;
				case parsx_token(OMinus):{return 0;}break;
				case parsx_token(KNull):{return 0;}break;
				case parsx_token(NumberLiteral):{return 0;}break;
				case parsx_token(KUnit):{return 0;}break;
				case parsx_token(KIf):{return 0;}break;
				case parsx_token(OLParen):{return 0;}break;
				case parsx_token(KFalse):{return 0;}break;
				case parsx_token(StringLiteral):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 218:{
			switch ( parsx_sync_token ){
				case parsx_token(OGT):{return 0;}break;
				case parsx_token(ONE):{return 0;}break;
				case parsx_token(KAnd):{return 0;}break;
				case parsx_token(ORem):{return 0;}break;
				case parsx_token(KOr):{return 0;}break;
				case parsx_token(OGE):{return 0;}break;
				case parsx_token(OMinus):{return 0;}break;
				case parsx_token(OMult):{return 0;}break;
				case parsx_token(OLT):{return 0;}break;
				case parsx_token(OPlus):{return 0;}break;
				case parsx_token(ODiv):{return 0;}break;
				case parsx_token(OLE):{return 0;}break;
				case parsx_token(OLParen):{return 0;}break;
				case parsx_token(OEQ):{return 0;}break;
				case parsx_token(OColon):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 219:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 220:{
			switch ( parsx_sync_token ){
				case parsx_token(OColon):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 221:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 222:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 223:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 224:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 225:{
			switch ( parsx_sync_token ){
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 226:{
			switch ( parsx_sync_token ){
				case parsx_token(KFloat):{return 0;}break;
				case parsx_token(KString):{return 0;}break;
				case parsx_token(Identifier):{return 0;}break;
				case parsx_token(KBytes):{return 0;}break;
				case parsx_token(OComma):{return 1;}break;
				case parsx_token(KUndef):{return 0;}break;
				case parsx_token(KBool):{return 0;}break;
				case parsx_token(OLParen):{return 0;}break;
				case parsx_token(OLBrace):{return 0;}break;
				case parsx_token(KDouble):{return 0;}break;
				case parsx_token(KInt):{return 0;}break;
				case parsx_token(KUnit):{return 0;}break;
				default:{return 3;}break;
			}
		}break;
		case 227:{
			switch ( parsx_sync_token ){
				case parsx_token(OLParen):{return 0;}break;
				case parsx_token(ODiv):{return 0;}break;
				case parsx_token(ORem):{return 0;}break;
				case parsx_token(OMult):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 228:{
			switch ( parsx_sync_token ){
				case parsx_token(OGT):{return 0;}break;
				case parsx_token(ONE):{return 0;}break;
				case parsx_token(KAnd):{return 0;}break;
				case parsx_token(ORem):{return 0;}break;
				case parsx_token(KOr):{return 0;}break;
				case parsx_token(OGE):{return 0;}break;
				case parsx_token(OMinus):{return 0;}break;
				case parsx_token(OMult):{return 0;}break;
				case parsx_token(OPlus):{return 0;}break;
				case parsx_token(OLT):{return 0;}break;
				case parsx_token(ODiv):{return 0;}break;
				case parsx_token(OLE):{return 0;}break;
				case parsx_token(OEQ):{return 0;}break;
				case parsx_token(OColon):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 229:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 230:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 231:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 232:{
			switch ( parsx_sync_token ){
				case parsx_token(KNot):{return 0;}break;
				case parsx_token(Identifier):{return 0;}break;
				case parsx_token(KTrue):{return 0;}break;
				case parsx_token(KImport):{return 0;}break;
				case parsx_token(KNull):{return 0;}break;
				case parsx_token(OMinus):{return 0;}break;
				case parsx_token(NumberLiteral):{return 0;}break;
				case parsx_token(KIf):{return 0;}break;
				case parsx_token(KEnd):{return 0;}break;
				case parsx_token(OLParen):{return 0;}break;
				case parsx_token(KFalse):{return 0;}break;
				case parsx_token(StringLiteral):{return 0;}break;
				case parsx_token(KUnit):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 233:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 234:{
			switch ( parsx_sync_token ){
				case parsx_token(KOr):{return 0;}break;
				case parsx_token(OColon):{return 0;}break;
				case parsx_token(KAnd):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 235:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 236:{
			switch ( parsx_sync_token ){
				case parsx_token(OPeriod):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 237:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 238:{
			switch ( parsx_sync_token ){
				case parsx_token(OLT):{return 0;}break;
				case parsx_token(Identifier):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 239:{
			switch ( parsx_sync_token ){
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 240:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 241:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 242:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 243:{
			switch ( parsx_sync_token ){
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 244:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 245:{
			switch ( parsx_sync_token ){
				case parsx_token(OGT):{return 0;}break;
				case parsx_token(ONE):{return 0;}break;
				case parsx_token(KAnd):{return 0;}break;
				case parsx_token(ORem):{return 0;}break;
				case parsx_token(KOr):{return 0;}break;
				case parsx_token(OGE):{return 0;}break;
				case parsx_token(OMinus):{return 0;}break;
				case parsx_token(OMult):{return 0;}break;
				case parsx_token(OPlus):{return 0;}break;
				case parsx_token(OLT):{return 0;}break;
				case parsx_token(ODiv):{return 0;}break;
				case parsx_token(OLE):{return 0;}break;
				case parsx_token(OEQ):{return 0;}break;
				case parsx_token(OColon):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 246:{
			switch ( parsx_sync_token ){
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 247:{
			switch ( parsx_sync_token ){
				case parsx_token(KOr):{return 0;}break;
				case parsx_token(OColon):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 248:{
			switch ( parsx_sync_token ){
				case parsx_token(OColon):{return 0;}break;
				default:{return 2;}break;
			}
		}break;
		case 249:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 250:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 251:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 252:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 253:{
			switch ( parsx_sync_token ){
				case parsx_token(KFloat):{return 0;}break;
				case parsx_token(KString):{return 0;}break;
				case parsx_token(KUnit):{return 0;}break;
				case parsx_token(KBytes):{return 0;}break;
				case parsx_token(Identifier):{return 0;}break;
				case parsx_token(KUndef):{return 0;}break;
				case parsx_token(KBool):{return 0;}break;
				case parsx_token(OLBrace):{return 0;}break;
				case parsx_token(OLParen):{return 0;}break;
				case parsx_token(KInt):{return 0;}break;
				case parsx_token(KDouble):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 254:{
			switch ( parsx_sync_token ){
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 255:{
			switch ( parsx_sync_token ){
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 256:{
			switch ( parsx_sync_token ){
				default:{return 0;}break;
			}
		}break;
		case 257:{
			switch ( parsx_sync_token ){
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 258:{
			switch ( parsx_sync_token ){
				case parsx_token(OLParen):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 259:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORBrace):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 260:{
			switch ( parsx_sync_token ){
				case parsx_token(OGT):{return 0;}break;
				case parsx_token(ONE):{return 0;}break;
				case parsx_token(KAnd):{return 0;}break;
				case parsx_token(OLT):{return 0;}break;
				case parsx_token(OMinus):{return 0;}break;
				case parsx_token(OPlus):{return 0;}break;
				case parsx_token(OLE):{return 0;}break;
				case parsx_token(OEQ):{return 0;}break;
				case parsx_token(OGE):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 261:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 262:{
			switch ( parsx_sync_token ){
				case parsx_token(OLParen):{return 0;}break;
				case parsx_token(ODiv):{return 0;}break;
				case parsx_token(OPeriod):{return 0;}break;
				case parsx_token(ORem):{return 0;}break;
				case parsx_token(OMult):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 263:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 264:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 265:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 266:{
			switch ( parsx_sync_token ){
				case parsx_token(KString):{return 0;}break;
				case parsx_token(KFloat):{return 0;}break;
				case parsx_token(KDouble):{return 0;}break;
				case parsx_token(KBytes):{return 0;}break;
				case parsx_token(KUndef):{return 0;}break;
				case parsx_token(KBool):{return 0;}break;
				case parsx_token(OLBrace):{return 0;}break;
				case parsx_token(OLParen):{return 0;}break;
				case parsx_token(Identifier):{return 0;}break;
				case parsx_token(KInt):{return 0;}break;
				case parsx_token(KUnit):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 267:{
			switch ( parsx_sync_token ){
				case parsx_token(KGlobal):{return 0;}break;
				case parsx_token(KFunction):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 268:{
			switch ( parsx_sync_token ){
				case parsx_token(KOr):{return 0;}break;
				case parsx_token(OColon):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 269:{
			switch ( parsx_sync_token ){
				case parsx_token(KNot):{return 0;}break;
				case parsx_token(Identifier):{return 0;}break;
				case parsx_token(KTrue):{return 0;}break;
				case parsx_token(OMinus):{return 0;}break;
				case parsx_token(KNull):{return 0;}break;
				case parsx_token(NumberLiteral):{return 0;}break;
				case parsx_token(KIf):{return 0;}break;
				case parsx_token(OLParen):{return 0;}break;
				case parsx_token(KFalse):{return 0;}break;
				case parsx_token(StringLiteral):{return 0;}break;
				case parsx_token(KUnit):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 270:{
			switch ( parsx_sync_token ){
				case parsx_token(OPeriod):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 271:{
			switch ( parsx_sync_token ){
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 272:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 273:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OPeriod):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 274:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 275:{
			switch ( parsx_sync_token ){
				case parsx_token(OGT):{return 0;}break;
				case parsx_token(ONE):{return 0;}break;
				case parsx_token(KAnd):{return 0;}break;
				case parsx_token(OLT):{return 0;}break;
				case parsx_token(OGE):{return 0;}break;
				case parsx_token(OMinus):{return 0;}break;
				case parsx_token(OPlus):{return 0;}break;
				case parsx_token(KOr):{return 0;}break;
				case parsx_token(OLE):{return 0;}break;
				case parsx_token(OEQ):{return 0;}break;
				case parsx_token(OColon):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 276:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 277:{
			switch ( parsx_sync_token ){
				case parsx_token(OGT):{return 0;}break;
				case parsx_token(ONE):{return 0;}break;
				case parsx_token(KAnd):{return 0;}break;
				case parsx_token(KOr):{return 0;}break;
				case parsx_token(OGE):{return 0;}break;
				case parsx_token(OMinus):{return 0;}break;
				case parsx_token(OPlus):{return 0;}break;
				case parsx_token(OLT):{return 0;}break;
				case parsx_token(OLE):{return 0;}break;
				case parsx_token(OEQ):{return 0;}break;
				case parsx_token(OColon):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 278:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 279:{
			switch ( parsx_sync_token ){
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 280:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 281:{
			switch ( parsx_sync_token ){
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 282:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 283:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 284:{
			switch ( parsx_sync_token ){
				case parsx_token(OAssign):{return 0;}break;
				default:{return 2;}break;
			}
		}break;
		case 285:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 286:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 287:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 288:{
			switch ( parsx_sync_token ){
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 289:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 290:{
			switch ( parsx_sync_token ){
				case parsx_token(Identifier):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 291:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 292:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 293:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 294:{
			switch ( parsx_sync_token ){
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 295:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OPeriod):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 296:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 297:{
			switch ( parsx_sync_token ){
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 298:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 299:{
			switch ( parsx_sync_token ){
				case parsx_token(KGlobal):{return 0;}break;
				case parsx_token(EndOfFile):{return 0;}break;
				case parsx_token(KImport):{return 0;}break;
				case parsx_token(KFunction):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 300:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 301:{
			switch ( parsx_sync_token ){
				case parsx_token(OGT):{return 0;}break;
				case parsx_token(ONE):{return 0;}break;
				case parsx_token(KAnd):{return 0;}break;
				case parsx_token(OLT):{return 0;}break;
				case parsx_token(OGE):{return 0;}break;
				case parsx_token(OMinus):{return 0;}break;
				case parsx_token(OPlus):{return 0;}break;
				case parsx_token(KOr):{return 0;}break;
				case parsx_token(OLE):{return 0;}break;
				case parsx_token(OEQ):{return 0;}break;
				case parsx_token(OColon):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 302:{
			switch ( parsx_sync_token ){
				case parsx_token(ONE):{return 0;}break;
				case parsx_token(OGT):{return 0;}break;
				case parsx_token(OEQ):{return 0;}break;
				case parsx_token(ORem):{return 0;}break;
				case parsx_token(OLT):{return 0;}break;
				case parsx_token(OMult):{return 0;}break;
				case parsx_token(OMinus):{return 0;}break;
				case parsx_token(OPlus):{return 0;}break;
				case parsx_token(ODiv):{return 0;}break;
				case parsx_token(OPeriod):{return 0;}break;
				case parsx_token(OLParen):{return 0;}break;
				case parsx_token(OLE):{return 0;}break;
				case parsx_token(OGE):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 303:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 304:{
			switch ( parsx_sync_token ){
				case parsx_token(ODiv):{return 0;}break;
				case parsx_token(OMult):{return 0;}break;
				case parsx_token(ORem):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 305:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OPeriod):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 306:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 307:{
			switch ( parsx_sync_token ){
				case parsx_token(Identifier):{return 0;}break;
				case parsx_token(OColon):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 308:{
			switch ( parsx_sync_token ){
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 309:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 310:{
			switch ( parsx_sync_token ){
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 311:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 312:{
			switch ( parsx_sync_token ){
				case parsx_token(OGT):{return 0;}break;
				case parsx_token(ONE):{return 0;}break;
				case parsx_token(KAnd):{return 0;}break;
				case parsx_token(ORem):{return 0;}break;
				case parsx_token(KOr):{return 0;}break;
				case parsx_token(OGE):{return 0;}break;
				case parsx_token(OMinus):{return 0;}break;
				case parsx_token(OMult):{return 0;}break;
				case parsx_token(OPlus):{return 0;}break;
				case parsx_token(OLT):{return 0;}break;
				case parsx_token(ODiv):{return 0;}break;
				case parsx_token(OLE):{return 0;}break;
				case parsx_token(OEQ):{return 0;}break;
				case parsx_token(OColon):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 313:{
			switch ( parsx_sync_token ){
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 314:{
			switch ( parsx_sync_token ){
				case parsx_token(KOr):{return 0;}break;
				case parsx_token(OColon):{return 0;}break;
				case parsx_token(KAnd):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 315:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 316:{
			switch ( parsx_sync_token ){
				case parsx_token(Identifier):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 317:{
			switch ( parsx_sync_token ){
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 318:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 319:{
			switch ( parsx_sync_token ){
				case parsx_token(KNot):{return 0;}break;
				case parsx_token(Identifier):{return 0;}break;
				case parsx_token(KTrue):{return 0;}break;
				case parsx_token(OMinus):{return 0;}break;
				case parsx_token(KNull):{return 0;}break;
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(NumberLiteral):{return 0;}break;
				case parsx_token(KUnit):{return 0;}break;
				case parsx_token(KIf):{return 0;}break;
				case parsx_token(OLParen):{return 0;}break;
				case parsx_token(KFalse):{return 0;}break;
				case parsx_token(StringLiteral):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 320:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 321:{
			switch ( parsx_sync_token ){
				case parsx_token(KFloat):{return 0;}break;
				case parsx_token(KString):{return 0;}break;
				case parsx_token(KDouble):{return 0;}break;
				case parsx_token(KBytes):{return 0;}break;
				case parsx_token(KBool):{return 0;}break;
				case parsx_token(OLBrace):{return 0;}break;
				case parsx_token(KUndef):{return 0;}break;
				case parsx_token(Identifier):{return 0;}break;
				case parsx_token(KInt):{return 0;}break;
				case parsx_token(KUnit):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 322:{
			switch ( parsx_sync_token ){
				case parsx_token(KFloat):{return 0;}break;
				case parsx_token(KString):{return 0;}break;
				case parsx_token(KUnit):{return 0;}break;
				case parsx_token(KBytes):{return 0;}break;
				case parsx_token(Identifier):{return 0;}break;
				case parsx_token(KUndef):{return 0;}break;
				case parsx_token(KBool):{return 0;}break;
				case parsx_token(OLBrace):{return 0;}break;
				case parsx_token(OLParen):{return 0;}break;
				case parsx_token(KInt):{return 0;}break;
				case parsx_token(KDouble):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 323:{
			switch ( parsx_sync_token ){
				case parsx_token(KFloat):{return 0;}break;
				case parsx_token(KString):{return 0;}break;
				case parsx_token(KUnit):{return 0;}break;
				case parsx_token(ORBrace):{return 0;}break;
				case parsx_token(KBytes):{return 0;}break;
				case parsx_token(Identifier):{return 0;}break;
				case parsx_token(ORParen):{return 1;}break;
				case parsx_token(KUndef):{return 0;}break;
				case parsx_token(KBool):{return 0;}break;
				case parsx_token(OLBrace):{return 0;}break;
				case parsx_token(OLParen):{return 0;}break;
				case parsx_token(KInt):{return 0;}break;
				case parsx_token(KDouble):{return 0;}break;
				default:{return 2;}break;
			}
		}break;
		case 324:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 325:{
			switch ( parsx_sync_token ){
				case parsx_token(KNot):{return 0;}break;
				case parsx_token(Identifier):{return 0;}break;
				case parsx_token(KTrue):{return 0;}break;
				case parsx_token(OMinus):{return 0;}break;
				case parsx_token(KNull):{return 0;}break;
				case parsx_token(NumberLiteral):{return 0;}break;
				case parsx_token(KIf):{return 0;}break;
				case parsx_token(OLParen):{return 0;}break;
				case parsx_token(KFalse):{return 0;}break;
				case parsx_token(StringLiteral):{return 0;}break;
				case parsx_token(KUnit):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 326:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 327:{
			switch ( parsx_sync_token ){
				case parsx_token(KNot):{return 0;}break;
				case parsx_token(KFalse):{return 0;}break;
				case parsx_token(KTrue):{return 0;}break;
				case parsx_token(KNull):{return 0;}break;
				case parsx_token(NumberLiteral):{return 0;}break;
				case parsx_token(OSemicolon):{return 0;}break;
				case parsx_token(Identifier):{return 0;}break;
				case parsx_token(StringLiteral):{return 0;}break;
				case parsx_token(KUnit):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 328:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 329:{
			switch ( parsx_sync_token ){
				case parsx_token(KAs):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 330:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 331:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 332:{
			switch ( parsx_sync_token ){
				case parsx_token(ONE):{return 0;}break;
				case parsx_token(OGT):{return 0;}break;
				case parsx_token(KAnd):{return 0;}break;
				case parsx_token(ORem):{return 0;}break;
				case parsx_token(KOr):{return 0;}break;
				case parsx_token(OGE):{return 0;}break;
				case parsx_token(OMinus):{return 0;}break;
				case parsx_token(OMult):{return 0;}break;
				case parsx_token(OLT):{return 0;}break;
				case parsx_token(OPlus):{return 0;}break;
				case parsx_token(ODiv):{return 0;}break;
				case parsx_token(OPeriod):{return 0;}break;
				case parsx_token(OEQ):{return 0;}break;
				case parsx_token(OLParen):{return 0;}break;
				case parsx_token(OLE):{return 0;}break;
				case parsx_token(OColon):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 333:{
			switch ( parsx_sync_token ){
				case parsx_token(KFloat):{return 0;}break;
				case parsx_token(KString):{return 0;}break;
				case parsx_token(Identifier):{return 0;}break;
				case parsx_token(ORBrace):{return 0;}break;
				case parsx_token(KBytes):{return 0;}break;
				case parsx_token(KUndef):{return 0;}break;
				case parsx_token(KBool):{return 0;}break;
				case parsx_token(OLBrace):{return 0;}break;
				case parsx_token(OLParen):{return 0;}break;
				case parsx_token(KDouble):{return 0;}break;
				case parsx_token(KInt):{return 0;}break;
				case parsx_token(KUnit):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 334:{
			switch ( parsx_sync_token ){
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 335:{
			switch ( parsx_sync_token ){
				case parsx_token(ONE):{return 0;}break;
				case parsx_token(OGT):{return 0;}break;
				case parsx_token(OEQ):{return 0;}break;
				case parsx_token(ORem):{return 0;}break;
				case parsx_token(OLT):{return 0;}break;
				case parsx_token(OGE):{return 0;}break;
				case parsx_token(OMinus):{return 0;}break;
				case parsx_token(OMult):{return 0;}break;
				case parsx_token(OPlus):{return 0;}break;
				case parsx_token(KOr):{return 0;}break;
				case parsx_token(ODiv):{return 0;}break;
				case parsx_token(OPeriod):{return 0;}break;
				case parsx_token(OLParen):{return 0;}break;
				case parsx_token(OLE):{return 0;}break;
				case parsx_token(KAnd):{return 0;}break;
				case parsx_token(OColon):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 336:{
			switch ( parsx_sync_token ){
				case parsx_token(OGT):{return 0;}break;
				case parsx_token(ONE):{return 0;}break;
				case parsx_token(OEQ):{return 0;}break;
				case parsx_token(ODiv):{return 0;}break;
				case parsx_token(OMult):{return 0;}break;
				case parsx_token(OMinus):{return 0;}break;
				case parsx_token(OPlus):{return 0;}break;
				case parsx_token(OLT):{return 0;}break;
				case parsx_token(OLE):{return 0;}break;
				case parsx_token(ORem):{return 0;}break;
				case parsx_token(OGE):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 337:{
			switch ( parsx_sync_token ){
				case parsx_token(Identifier):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 338:{
			switch ( parsx_sync_token ){
				case parsx_token(KFloat):{return 0;}break;
				case parsx_token(KString):{return 0;}break;
				case parsx_token(KDouble):{return 0;}break;
				case parsx_token(KBytes):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				case parsx_token(KUndef):{return 0;}break;
				case parsx_token(KBool):{return 0;}break;
				case parsx_token(OLBrace):{return 0;}break;
				case parsx_token(OLParen):{return 0;}break;
				case parsx_token(Identifier):{return 0;}break;
				case parsx_token(KInt):{return 0;}break;
				case parsx_token(KUnit):{return 0;}break;
				default:{return 3;}break;
			}
		}break;
		case 339:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 340:{
			switch ( parsx_sync_token ){
				case parsx_token(KFloat):{return 0;}break;
				case parsx_token(KString):{return 0;}break;
				case parsx_token(KDouble):{return 0;}break;
				case parsx_token(KBytes):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				case parsx_token(KUndef):{return 0;}break;
				case parsx_token(KBool):{return 0;}break;
				case parsx_token(OLBrace):{return 0;}break;
				case parsx_token(OLParen):{return 0;}break;
				case parsx_token(Identifier):{return 0;}break;
				case parsx_token(KInt):{return 0;}break;
				case parsx_token(KUnit):{return 0;}break;
				default:{return 2;}break;
			}
		}break;
		case 341:{
			switch ( parsx_sync_token ){
				case parsx_token(KGlobal):{return 0;}break;
				case parsx_token(KFunction):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 342:{
			switch ( parsx_sync_token ){
				case parsx_token(KNot):{return 0;}break;
				case parsx_token(Identifier):{return 0;}break;
				case parsx_token(KTrue):{return 0;}break;
				case parsx_token(OMinus):{return 0;}break;
				case parsx_token(KNull):{return 0;}break;
				case parsx_token(NumberLiteral):{return 0;}break;
				case parsx_token(KIf):{return 0;}break;
				case parsx_token(OLParen):{return 0;}break;
				case parsx_token(KFalse):{return 0;}break;
				case parsx_token(StringLiteral):{return 0;}break;
				case parsx_token(KUnit):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 343:{
			switch ( parsx_sync_token ){
				case parsx_token(OGT):{return 0;}break;
				case parsx_token(ONE):{return 0;}break;
				case parsx_token(OEQ):{return 0;}break;
				case parsx_token(OLT):{return 0;}break;
				case parsx_token(OGE):{return 0;}break;
				case parsx_token(OMinus):{return 0;}break;
				case parsx_token(OMult):{return 0;}break;
				case parsx_token(OPlus):{return 0;}break;
				case parsx_token(KOr):{return 0;}break;
				case parsx_token(ODiv):{return 0;}break;
				case parsx_token(OPeriod):{return 0;}break;
				case parsx_token(OLE):{return 0;}break;
				case parsx_token(OLParen):{return 0;}break;
				case parsx_token(ORem):{return 0;}break;
				case parsx_token(KAnd):{return 0;}break;
				case parsx_token(OColon):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 344:{
			switch ( parsx_sync_token ){
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 345:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 346:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 347:{
			switch ( parsx_sync_token ){
				case parsx_token(OGT):{return 0;}break;
				case parsx_token(ONE):{return 0;}break;
				case parsx_token(OEQ):{return 0;}break;
				case parsx_token(OLT):{return 0;}break;
				case parsx_token(OMinus):{return 0;}break;
				case parsx_token(OPlus):{return 0;}break;
				case parsx_token(OLE):{return 0;}break;
				case parsx_token(OGE):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 348:{
			switch ( parsx_sync_token ){
				case parsx_token(KGlobal):{return 0;}break;
				case parsx_token(KFunction):{return 0;}break;
				case parsx_token(KImport):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 349:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 350:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 351:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 352:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OPeriod):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 353:{
			switch ( parsx_sync_token ){
				case parsx_token(KFloat):{return 0;}break;
				case parsx_token(KString):{return 0;}break;
				case parsx_token(KUnit):{return 0;}break;
				case parsx_token(KBytes):{return 0;}break;
				case parsx_token(Identifier):{return 0;}break;
				case parsx_token(KUndef):{return 0;}break;
				case parsx_token(KBool):{return 0;}break;
				case parsx_token(OLBrace):{return 0;}break;
				case parsx_token(OLParen):{return 0;}break;
				case parsx_token(KInt):{return 0;}break;
				case parsx_token(KDouble):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 354:{
			switch ( parsx_sync_token ){
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 355:{
			switch ( parsx_sync_token ){
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OArrow):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 356:{
			switch ( parsx_sync_token ){
				case parsx_token(OGT):{return 0;}break;
				case parsx_token(ONE):{return 0;}break;
				case parsx_token(OEQ):{return 0;}break;
				case parsx_token(OLT):{return 0;}break;
				case parsx_token(OGE):{return 0;}break;
				case parsx_token(OMinus):{return 0;}break;
				case parsx_token(OMult):{return 0;}break;
				case parsx_token(OPlus):{return 0;}break;
				case parsx_token(KOr):{return 0;}break;
				case parsx_token(ODiv):{return 0;}break;
				case parsx_token(OPeriod):{return 0;}break;
				case parsx_token(OLE):{return 0;}break;
				case parsx_token(OLParen):{return 0;}break;
				case parsx_token(ORem):{return 0;}break;
				case parsx_token(KAnd):{return 0;}break;
				case parsx_token(OColon):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 357:{
			switch ( parsx_sync_token ){
				case parsx_token(KNot):{return 0;}break;
				case parsx_token(KFalse):{return 0;}break;
				case parsx_token(KTrue):{return 0;}break;
				case parsx_token(OMinus):{return 0;}break;
				case parsx_token(KNull):{return 0;}break;
				case parsx_token(Identifier):{return 0;}break;
				case parsx_token(NumberLiteral):{return 0;}break;
				case parsx_token(KIf):{return 0;}break;
				case parsx_token(OLParen):{return 0;}break;
				case parsx_token(KUnit):{return 0;}break;
				case parsx_token(StringLiteral):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 358:{
			switch ( parsx_sync_token ){
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OArrow):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 359:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 360:{
			switch ( parsx_sync_token ){
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 361:{
			switch ( parsx_sync_token ){
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 362:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 363:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 364:{
			switch ( parsx_sync_token ){
				case parsx_token(ONE):{return 0;}break;
				case parsx_token(OGT):{return 0;}break;
				case parsx_token(OEQ):{return 0;}break;
				case parsx_token(ORem):{return 0;}break;
				case parsx_token(KOr):{return 0;}break;
				case parsx_token(OGE):{return 0;}break;
				case parsx_token(OMinus):{return 0;}break;
				case parsx_token(OMult):{return 0;}break;
				case parsx_token(OLT):{return 0;}break;
				case parsx_token(OPlus):{return 0;}break;
				case parsx_token(ODiv):{return 0;}break;
				case parsx_token(OLE):{return 0;}break;
				case parsx_token(OLParen):{return 0;}break;
				case parsx_token(KAnd):{return 0;}break;
				case parsx_token(OColon):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 365:{
			switch ( parsx_sync_token ){
				case parsx_token(KNot):{return 0;}break;
				case parsx_token(Identifier):{return 0;}break;
				case parsx_token(KTrue):{return 0;}break;
				case parsx_token(OMinus):{return 0;}break;
				case parsx_token(KNull):{return 0;}break;
				case parsx_token(NumberLiteral):{return 0;}break;
				case parsx_token(KUnit):{return 0;}break;
				case parsx_token(KIf):{return 0;}break;
				case parsx_token(OLParen):{return 0;}break;
				case parsx_token(KFalse):{return 0;}break;
				case parsx_token(StringLiteral):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 366:{
			switch ( parsx_sync_token ){
				case parsx_token(KOr):{return 0;}break;
				case parsx_token(OColon):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 367:{
			switch ( parsx_sync_token ){
				case parsx_token(KUnit):{return 0;}break;
				case parsx_token(KTrue):{return 0;}break;
				case parsx_token(KNull):{return 0;}break;
				case parsx_token(Identifier):{return 0;}break;
				case parsx_token(NumberLiteral):{return 0;}break;
				case parsx_token(KFalse):{return 0;}break;
				case parsx_token(StringLiteral):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 368:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 369:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 370:{
			switch ( parsx_sync_token ){
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OArrow):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 371:{
			switch ( parsx_sync_token ){
				case parsx_token(OPlus):{return 0;}break;
				case parsx_token(OMinus):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 372:{
			switch ( parsx_sync_token ){
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 373:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 374:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 375:{
			switch ( parsx_sync_token ){
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OArrow):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 376:{
			switch ( parsx_sync_token ){
				case parsx_token(KNot):{return 0;}break;
				case parsx_token(Identifier):{return 0;}break;
				case parsx_token(KTrue):{return 0;}break;
				case parsx_token(OMinus):{return 0;}break;
				case parsx_token(KNull):{return 0;}break;
				case parsx_token(NumberLiteral):{return 0;}break;
				case parsx_token(KIf):{return 0;}break;
				case parsx_token(OLParen):{return 0;}break;
				case parsx_token(KFalse):{return 0;}break;
				case parsx_token(StringLiteral):{return 0;}break;
				case parsx_token(KUnit):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 377:{
			switch ( parsx_sync_token ){
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 378:{
			switch ( parsx_sync_token ){
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 379:{
			switch ( parsx_sync_token ){
				case parsx_token(ORParen):{return 1;}break;
				case parsx_token(OLParen):{return 0;}break;
				default:{return 2;}break;
			}
		}break;
		case 380:{
			switch ( parsx_sync_token ){
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 381:{
			switch ( parsx_sync_token ){
				case parsx_token(OLT):{return 0;}break;
				case parsx_token(ONE):{return 0;}break;
				case parsx_token(Identifier):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 382:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 383:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 384:{
			switch ( parsx_sync_token ){
				case parsx_token(ONE):{return 0;}break;
				case parsx_token(OGT):{return 0;}break;
				case parsx_token(OEQ):{return 0;}break;
				case parsx_token(ODiv):{return 0;}break;
				case parsx_token(OMult):{return 0;}break;
				case parsx_token(OMinus):{return 0;}break;
				case parsx_token(OPlus):{return 0;}break;
				case parsx_token(OLT):{return 0;}break;
				case parsx_token(OLE):{return 0;}break;
				case parsx_token(OLParen):{return 0;}break;
				case parsx_token(ORem):{return 0;}break;
				case parsx_token(OGE):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 385:{
			switch ( parsx_sync_token ){
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OArrow):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 386:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 387:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 388:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 389:{
			switch ( parsx_sync_token ){
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OArrow):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 390:{
			switch ( parsx_sync_token ){
				case parsx_token(OLT):{return 0;}break;
				case parsx_token(Identifier):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 391:{
			switch ( parsx_sync_token ){
				case parsx_token(ONE):{return 0;}break;
				case parsx_token(OGT):{return 0;}break;
				case parsx_token(OEQ):{return 0;}break;
				case parsx_token(ORem):{return 0;}break;
				case parsx_token(KOr):{return 0;}break;
				case parsx_token(OGE):{return 0;}break;
				case parsx_token(OMinus):{return 0;}break;
				case parsx_token(OMult):{return 0;}break;
				case parsx_token(OLT):{return 0;}break;
				case parsx_token(OPlus):{return 0;}break;
				case parsx_token(ODiv):{return 0;}break;
				case parsx_token(OLE):{return 0;}break;
				case parsx_token(OLParen):{return 0;}break;
				case parsx_token(KAnd):{return 0;}break;
				case parsx_token(OColon):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 392:{
			switch ( parsx_sync_token ){
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 393:{
			switch ( parsx_sync_token ){
				case parsx_token(ONE):{return 0;}break;
				case parsx_token(OGT):{return 0;}break;
				case parsx_token(OEQ):{return 0;}break;
				case parsx_token(ORem):{return 0;}break;
				case parsx_token(KOr):{return 0;}break;
				case parsx_token(OGE):{return 0;}break;
				case parsx_token(OMinus):{return 0;}break;
				case parsx_token(OMult):{return 0;}break;
				case parsx_token(OLT):{return 0;}break;
				case parsx_token(OPlus):{return 0;}break;
				case parsx_token(ODiv):{return 0;}break;
				case parsx_token(OLE):{return 0;}break;
				case parsx_token(OLParen):{return 0;}break;
				case parsx_token(KAnd):{return 0;}break;
				case parsx_token(OColon):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 394:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 395:{
			switch ( parsx_sync_token ){
				case parsx_token(KNot):{return 0;}break;
				case parsx_token(Identifier):{return 0;}break;
				case parsx_token(KTrue):{return 0;}break;
				case parsx_token(OMinus):{return 0;}break;
				case parsx_token(KNull):{return 0;}break;
				case parsx_token(NumberLiteral):{return 0;}break;
				case parsx_token(KIf):{return 0;}break;
				case parsx_token(OLParen):{return 0;}break;
				case parsx_token(KFalse):{return 0;}break;
				case parsx_token(StringLiteral):{return 0;}break;
				case parsx_token(KUnit):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 396:{
			switch ( parsx_sync_token ){
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 397:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 398:{
			switch ( parsx_sync_token ){
				case parsx_token(ONE):{return 0;}break;
				case parsx_token(OGT):{return 0;}break;
				case parsx_token(KAnd):{return 0;}break;
				case parsx_token(ORem):{return 0;}break;
				case parsx_token(ODiv):{return 0;}break;
				case parsx_token(OMult):{return 0;}break;
				case parsx_token(OMinus):{return 0;}break;
				case parsx_token(OPlus):{return 0;}break;
				case parsx_token(OLT):{return 0;}break;
				case parsx_token(OLE):{return 0;}break;
				case parsx_token(OLParen):{return 0;}break;
				case parsx_token(OEQ):{return 0;}break;
				case parsx_token(OGE):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 399:{
			switch ( parsx_sync_token ){
				case parsx_token(OLParen):{return 0;}break;
				case parsx_token(OPeriod):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 400:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 401:{
			switch ( parsx_sync_token ){
				case parsx_token(OGT):{return 0;}break;
				case parsx_token(ONE):{return 0;}break;
				case parsx_token(KAnd):{return 0;}break;
				case parsx_token(KOr):{return 0;}break;
				case parsx_token(OGE):{return 0;}break;
				case parsx_token(OMinus):{return 0;}break;
				case parsx_token(OPlus):{return 0;}break;
				case parsx_token(OLT):{return 0;}break;
				case parsx_token(OLE):{return 0;}break;
				case parsx_token(OEQ):{return 0;}break;
				case parsx_token(OColon):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 402:{
			switch ( parsx_sync_token ){
				case parsx_token(KImport):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 403:{
			switch ( parsx_sync_token ){
				case parsx_token(KString):{return 0;}break;
				case parsx_token(KFloat):{return 0;}break;
				case parsx_token(KDouble):{return 0;}break;
				case parsx_token(KBytes):{return 0;}break;
				case parsx_token(Identifier):{return 0;}break;
				case parsx_token(KUndef):{return 0;}break;
				case parsx_token(KBool):{return 0;}break;
				case parsx_token(OLParen):{return 0;}break;
				case parsx_token(OLBrace):{return 0;}break;
				case parsx_token(KInt):{return 0;}break;
				case parsx_token(KUnit):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 404:{
			switch ( parsx_sync_token ){
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 405:{
			switch ( parsx_sync_token ){
				case parsx_token(KFloat):{return 0;}break;
				case parsx_token(KString):{return 0;}break;
				case parsx_token(KInt):{return 0;}break;
				case parsx_token(KBytes):{return 0;}break;
				case parsx_token(Identifier):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				case parsx_token(KUndef):{return 0;}break;
				case parsx_token(KBool):{return 0;}break;
				case parsx_token(OLParen):{return 0;}break;
				case parsx_token(OLBrace):{return 0;}break;
				case parsx_token(KDouble):{return 0;}break;
				case parsx_token(KUnit):{return 0;}break;
				default:{return 2;}break;
			}
		}break;
		case 406:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 407:{
			switch ( parsx_sync_token ){
				case parsx_token(KOr):{return 0;}break;
				case parsx_token(OColon):{return 0;}break;
				case parsx_token(KAnd):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 408:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 409:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 410:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 411:{
			switch ( parsx_sync_token ){
				case parsx_token(ODiv):{return 0;}break;
				case parsx_token(OMinus):{return 0;}break;
				case parsx_token(OPlus):{return 0;}break;
				case parsx_token(ORem):{return 0;}break;
				case parsx_token(OLParen):{return 0;}break;
				case parsx_token(OMult):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 412:{
			switch ( parsx_sync_token ){
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 413:{
			switch ( parsx_sync_token ){
				case parsx_token(KFloat):{return 0;}break;
				case parsx_token(KString):{return 0;}break;
				case parsx_token(KDouble):{return 0;}break;
				case parsx_token(KBytes):{return 0;}break;
				case parsx_token(Identifier):{return 0;}break;
				case parsx_token(OVBar):{return 1;}break;
				case parsx_token(KUndef):{return 0;}break;
				case parsx_token(KBool):{return 0;}break;
				case parsx_token(OLBrace):{return 0;}break;
				case parsx_token(OLParen):{return 0;}break;
				case parsx_token(KUnit):{return 0;}break;
				case parsx_token(KInt):{return 0;}break;
				default:{return 3;}break;
			}
		}break;
		case 414:{
			switch ( parsx_sync_token ){
				case parsx_token(KAnd):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 415:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORBrace):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 416:{
			switch ( parsx_sync_token ){
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 417:{
			switch ( parsx_sync_token ){
				case parsx_token(OPlus):{return 0;}break;
				case parsx_token(ODiv):{return 0;}break;
				case parsx_token(OMinus):{return 0;}break;
				case parsx_token(ORem):{return 0;}break;
				case parsx_token(OMult):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 418:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 419:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 420:{
			switch ( parsx_sync_token ){
				case parsx_token(KFloat):{return 0;}break;
				case parsx_token(KString):{return 0;}break;
				case parsx_token(Identifier):{return 0;}break;
				case parsx_token(ORBrace):{return 0;}break;
				case parsx_token(KBytes):{return 0;}break;
				case parsx_token(KUndef):{return 0;}break;
				case parsx_token(KBool):{return 0;}break;
				case parsx_token(OLBrace):{return 0;}break;
				case parsx_token(OLParen):{return 0;}break;
				case parsx_token(KDouble):{return 0;}break;
				case parsx_token(KInt):{return 0;}break;
				case parsx_token(KUnit):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 421:{
			switch ( parsx_sync_token ){
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 422:{
			switch ( parsx_sync_token ){
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OArrow):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 423:{
			switch ( parsx_sync_token ){
				case parsx_token(ONE):{return 0;}break;
				case parsx_token(OGT):{return 0;}break;
				case parsx_token(KAnd):{return 0;}break;
				case parsx_token(ORem):{return 0;}break;
				case parsx_token(KOr):{return 0;}break;
				case parsx_token(OGE):{return 0;}break;
				case parsx_token(OMinus):{return 0;}break;
				case parsx_token(OMult):{return 0;}break;
				case parsx_token(OLT):{return 0;}break;
				case parsx_token(OPlus):{return 0;}break;
				case parsx_token(ODiv):{return 0;}break;
				case parsx_token(OLE):{return 0;}break;
				case parsx_token(OEQ):{return 0;}break;
				case parsx_token(OColon):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 424:{
			switch ( parsx_sync_token ){
				case parsx_token(KOr):{return 0;}break;
				case parsx_token(OColon):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 425:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 426:{
			switch ( parsx_sync_token ){
				case parsx_token(KFloat):{return 0;}break;
				case parsx_token(KString):{return 0;}break;
				case parsx_token(Identifier):{return 0;}break;
				case parsx_token(ORBrace):{return 0;}break;
				case parsx_token(KBytes):{return 0;}break;
				case parsx_token(ORParen):{return 1;}break;
				case parsx_token(KUndef):{return 0;}break;
				case parsx_token(KBool):{return 0;}break;
				case parsx_token(OLBrace):{return 0;}break;
				case parsx_token(OLParen):{return 0;}break;
				case parsx_token(KDouble):{return 0;}break;
				case parsx_token(KInt):{return 0;}break;
				case parsx_token(KUnit):{return 0;}break;
				default:{return 2;}break;
			}
		}break;
		case 427:{
			switch ( parsx_sync_token ){
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 428:{
			switch ( parsx_sync_token ){
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 429:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 430:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 431:{
			switch ( parsx_sync_token ){
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 432:{
			switch ( parsx_sync_token ){
				case parsx_token(OVBar):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 433:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 434:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 435:{
			switch ( parsx_sync_token ){
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OArrow):{return 0;}break;
				default:{return 0;}break;
			}
		}break;
		case 436:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 437:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 438:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 439:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 440:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 441:{
			switch ( parsx_sync_token ){
				case parsx_token(KFloat):{return 0;}break;
				case parsx_token(KString):{return 0;}break;
				case parsx_token(KDouble):{return 0;}break;
				case parsx_token(KBytes):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				case parsx_token(KUndef):{return 0;}break;
				case parsx_token(KBool):{return 0;}break;
				case parsx_token(OLBrace):{return 0;}break;
				case parsx_token(OLParen):{return 0;}break;
				case parsx_token(Identifier):{return 0;}break;
				case parsx_token(KInt):{return 0;}break;
				case parsx_token(KUnit):{return 0;}break;
				default:{return 3;}break;
			}
		}break;
		case 442:{
			switch ( parsx_sync_token ){
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 443:{
			switch ( parsx_sync_token ){
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
		case 444:{
			switch ( parsx_sync_token ){
				case parsx_token(OArrow):{return 0;}break;
				case parsx_token(OQuestion):{return 0;}break;
				case parsx_token(OVBar):{return 0;}break;
				case parsx_token(OComma):{return 0;}break;
				case parsx_token(ORParen):{return 0;}break;
				default:{return 1;}break;
			}
		}break;
	}
parsx_sync_cost_func_end()


parsx_sync_func_begin()
	switch ( parsx_current_state ){
		case 1:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KAnd):{
					parsx_pop_state();
					parsx_push_state(1);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(KAnd);
					parsx_queue_action(1);
				}break;
			}
		}break;
		case 2:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KFalse):{
					parsx_pop_state();
					parsx_push_state(2);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(KFalse);
					parsx_queue_action(2);
				}break;
			}
		}break;
		case 3:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OGE):{
					parsx_pop_state();
					parsx_push_state(3);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(OGE);
					parsx_queue_action(3);
				}break;
			}
		}break;
		case 4:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KInt):{
					parsx_pop_state();
					parsx_push_state(4);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(KInt);
					parsx_queue_action(4);
				}break;
			}
		}break;
		case 5:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KFloat):{
					parsx_pop_state();
					parsx_push_state(5);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(KFloat);
					parsx_queue_action(5);
				}break;
			}
		}break;
		case 6:{
			switch ( parsx_lookahead_token ){
				case parsx_token(NumberLiteral):{
					parsx_pop_state();
					parsx_push_state(6);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(NumberLiteral);
					parsx_queue_action(6);
				}break;
			}
		}break;
		case 7:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KNot):{
					parsx_pop_state();
					parsx_push_state(7);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(KNot);
					parsx_queue_action(7);
				}break;
			}
		}break;
		case 8:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KAs):{
					parsx_pop_state();
					parsx_push_state(8);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(KAs);
					parsx_queue_action(8);
				}break;
			}
		}break;
		case 9:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OColon):{
					parsx_pop_state();
					parsx_push_state(9);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(OColon);
					parsx_queue_action(9);
				}break;
			}
		}break;
		case 10:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(OVBar);
					parsx_queue_action(10);
				}break;
			}
		}break;
		case 11:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KNull):{
					parsx_pop_state();
					parsx_push_state(11);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(KNull);
					parsx_queue_action(11);
				}break;
			}
		}break;
		case 12:{
			switch ( parsx_lookahead_token ){
				case parsx_token(StringLiteral):{
					parsx_pop_state();
					parsx_push_state(12);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(StringLiteral);
					parsx_queue_action(12);
				}break;
			}
		}break;
		case 13:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KUnit):{
					parsx_pop_state();
					parsx_push_state(13);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(KUnit);
					parsx_queue_action(13);
				}break;
			}
		}break;
		case 14:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KIf):{
					parsx_pop_state();
					parsx_push_state(14);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(KIf);
					parsx_queue_action(14);
				}break;
			}
		}break;
		case 15:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KUndef):{
					parsx_pop_state();
					parsx_push_state(15);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(KUndef);
					parsx_queue_action(15);
				}break;
			}
		}break;
		case 16:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KEnd):{
					parsx_pop_state();
					parsx_push_state(16);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(KEnd);
					parsx_queue_action(16);
				}break;
			}
		}break;
		case 17:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KStruct):{
					parsx_pop_state();
					parsx_push_state(17);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(KStruct);
					parsx_queue_action(17);
				}break;
			}
		}break;
		case 18:{
			switch ( parsx_lookahead_token ){
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
				}break;
			}
		}break;
		case 19:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OLParen):{
					parsx_pop_state();
					parsx_push_state(19);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(OLParen);
					parsx_queue_action(19);
				}break;
			}
		}break;
		case 20:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OPlus):{
					parsx_pop_state();
					parsx_push_state(20);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(OPlus);
					parsx_queue_action(20);
				}break;
			}
		}break;
		case 21:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OMult):{
					parsx_pop_state();
					parsx_push_state(21);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(OMult);
					parsx_queue_action(21);
				}break;
			}
		}break;
		case 22:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OMinus):{
					parsx_pop_state();
					parsx_push_state(22);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(OMinus);
					parsx_queue_action(22);
				}break;
			}
		}break;
		case 23:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(23);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(OComma);
					parsx_queue_action(23);
				}break;
			}
		}break;
		case 24:{
			switch ( parsx_lookahead_token ){
				case parsx_token(ODiv):{
					parsx_pop_state();
					parsx_push_state(24);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ODiv);
					parsx_queue_action(24);
				}break;
			}
		}break;
		case 25:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OPeriod):{
					parsx_pop_state();
					parsx_push_state(25);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(OPeriod);
					parsx_queue_action(25);
				}break;
			}
		}break;
		case 26:{
			switch ( parsx_lookahead_token ){
				case parsx_token(ONE):{
					parsx_pop_state();
					parsx_push_state(26);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ONE);
					parsx_queue_action(26);
				}break;
			}
		}break;
		case 27:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KBool):{
					parsx_pop_state();
					parsx_push_state(27);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(KBool);
					parsx_queue_action(27);
				}break;
			}
		}break;
		case 28:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KElseIf):{
					parsx_pop_state();
					parsx_push_state(28);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(KElseIf);
					parsx_queue_action(28);
				}break;
			}
		}break;
		case 29:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KImport):{
					parsx_pop_state();
					parsx_push_state(29);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(KImport);
					parsx_queue_action(29);
				}break;
			}
		}break;
		case 30:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OSemicolon):{
					parsx_pop_state();
					parsx_push_state(30);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(OSemicolon);
					parsx_queue_action(30);
				}break;
			}
		}break;
		case 31:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OAssign):{
					parsx_pop_state();
					parsx_push_state(31);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(OAssign);
					parsx_queue_action(31);
				}break;
			}
		}break;
		case 32:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OLT):{
					parsx_pop_state();
					parsx_push_state(32);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(OLT);
					parsx_queue_action(32);
				}break;
			}
		}break;
		case 33:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(33);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(OQuestion);
					parsx_queue_action(33);
				}break;
			}
		}break;
		case 34:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OGT):{
					parsx_pop_state();
					parsx_push_state(34);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(OGT);
					parsx_queue_action(34);
				}break;
			}
		}break;
		case 35:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KFunction):{
					parsx_pop_state();
					parsx_push_state(35);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(KFunction);
					parsx_queue_action(35);
				}break;
			}
		}break;
		case 36:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KThen):{
					parsx_pop_state();
					parsx_push_state(36);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(KThen);
					parsx_queue_action(36);
				}break;
			}
		}break;
		case 37:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KGlobal):{
					parsx_pop_state();
					parsx_push_state(37);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(KGlobal);
					parsx_queue_action(37);
				}break;
			}
		}break;
		case 38:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KString):{
					parsx_pop_state();
					parsx_push_state(38);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(KString);
					parsx_queue_action(38);
				}break;
			}
		}break;
		case 39:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OEQ):{
					parsx_pop_state();
					parsx_push_state(39);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(OEQ);
					parsx_queue_action(39);
				}break;
			}
		}break;
		case 40:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KEnum):{
					parsx_pop_state();
					parsx_push_state(40);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(KEnum);
					parsx_queue_action(40);
				}break;
			}
		}break;
		case 41:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KElse):{
					parsx_pop_state();
					parsx_push_state(41);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(KElse);
					parsx_queue_action(41);
				}break;
			}
		}break;
		case 42:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OLE):{
					parsx_pop_state();
					parsx_push_state(42);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(OLE);
					parsx_queue_action(42);
				}break;
			}
		}break;
		case 43:{
			switch ( parsx_lookahead_token ){
				case parsx_token(EndOfFile):{
					parsx_pop_state();
					parsx_push_state(43);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(EndOfFile);
					parsx_queue_action(43);
				}break;
			}
		}break;
		case 44:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KInterface):{
					parsx_pop_state();
					parsx_push_state(44);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(KInterface);
					parsx_queue_action(44);
				}break;
			}
		}break;
		case 45:{
			switch ( parsx_lookahead_token ){
				case parsx_token(ORem):{
					parsx_pop_state();
					parsx_push_state(45);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORem);
					parsx_queue_action(45);
				}break;
			}
		}break;
		case 46:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KTrue):{
					parsx_pop_state();
					parsx_push_state(46);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(KTrue);
					parsx_queue_action(46);
				}break;
			}
		}break;
		case 47:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KClass):{
					parsx_pop_state();
					parsx_push_state(47);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(KClass);
					parsx_queue_action(47);
				}break;
			}
		}break;
		case 48:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KDouble):{
					parsx_pop_state();
					parsx_push_state(48);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(KDouble);
					parsx_queue_action(48);
				}break;
			}
		}break;
		case 49:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KBytes):{
					parsx_pop_state();
					parsx_push_state(49);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(KBytes);
					parsx_queue_action(49);
				}break;
			}
		}break;
		case 50:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(50);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(OArrow);
					parsx_queue_action(50);
				}break;
			}
		}break;
		case 51:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OLBrace):{
					parsx_pop_state();
					parsx_push_state(51);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(OLBrace);
					parsx_queue_action(51);
				}break;
			}
		}break;
		case 52:{
			switch ( parsx_lookahead_token ){
				case parsx_token(Identifier):{
					parsx_pop_state();
					parsx_push_state(52);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(Identifier);
					parsx_queue_action(52);
				}break;
			}
		}break;
		case 53:{
			switch ( parsx_lookahead_token ){
				case parsx_token(ORBrace):{
					parsx_pop_state();
					parsx_push_state(53);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORBrace);
					parsx_queue_action(53);
				}break;
			}
		}break;
		case 54:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KOr):{
					parsx_pop_state();
					parsx_push_state(54);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(KOr);
					parsx_queue_action(54);
				}break;
			}
		}break;
		case 55:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(55);
				}break;
			}
		}break;
		case 56:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(56);
				}break;
			}
		}break;
		case 57:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(57);
				}break;
			}
		}break;
		case 58:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(58);
				}break;
			}
		}break;
		case 59:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(59);
				}break;
			}
		}break;
		case 60:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(60);
				}break;
			}
		}break;
		case 61:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(61);
				}break;
			}
		}break;
		case 62:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(62);
				}break;
			}
		}break;
		case 63:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(63);
				}break;
			}
		}break;
		case 64:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(64);
				}break;
			}
		}break;
		case 65:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(65);
				}break;
			}
		}break;
		case 66:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(66);
				}break;
			}
		}break;
		case 67:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(67);
				}break;
			}
		}break;
		case 68:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(68);
				}break;
			}
		}break;
		case 69:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(69);
				}break;
			}
		}break;
		case 70:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(70);
				}break;
			}
		}break;
		case 71:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(71);
				}break;
			}
		}break;
		case 72:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(72);
				}break;
			}
		}break;
		case 73:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(73);
				}break;
			}
		}break;
		case 74:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(74);
				}break;
			}
		}break;
		case 75:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(75);
				}break;
			}
		}break;
		case 76:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(76);
				}break;
			}
		}break;
		case 77:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(77);
				}break;
			}
		}break;
		case 78:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(78);
				}break;
			}
		}break;
		case 79:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(79);
				}break;
			}
		}break;
		case 80:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(80);
				}break;
			}
		}break;
		case 81:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 82:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(82);
				}break;
			}
		}break;
		case 83:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(83);
				}break;
			}
		}break;
		case 84:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(84);
				}break;
			}
		}break;
		case 85:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(85);
				}break;
			}
		}break;
		case 86:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(86);
				}break;
			}
		}break;
		case 87:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(87);
				}break;
			}
		}break;
		case 88:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(88);
				}break;
			}
		}break;
		case 89:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(89);
				}break;
			}
		}break;
		case 90:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(90);
				}break;
			}
		}break;
		case 91:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(91);
				}break;
			}
		}break;
		case 92:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(92);
				}break;
			}
		}break;
		case 93:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(93);
				}break;
			}
		}break;
		case 94:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(94);
				}break;
			}
		}break;
		case 95:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(95);
				}break;
			}
		}break;
		case 96:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(96);
				}break;
			}
		}break;
		case 97:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(97);
				}break;
			}
		}break;
		case 98:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(98);
				}break;
			}
		}break;
		case 99:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(99);
				}break;
			}
		}break;
		case 100:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(100);
				}break;
			}
		}break;
		case 101:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(101);
				}break;
			}
		}break;
		case 102:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(102);
				}break;
			}
		}break;
		case 103:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(103);
				}break;
			}
		}break;
		case 104:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(104);
				}break;
			}
		}break;
		case 105:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(105);
				}break;
			}
		}break;
		case 106:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(106);
				}break;
			}
		}break;
		case 107:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(107);
				}break;
			}
		}break;
		case 108:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(108);
				}break;
			}
		}break;
		case 109:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(109);
				}break;
			}
		}break;
		case 110:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(110);
				}break;
			}
		}break;
		case 111:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(111);
				}break;
			}
		}break;
		case 112:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(112);
				}break;
			}
		}break;
		case 113:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(113);
				}break;
			}
		}break;
		case 114:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(114);
				}break;
			}
		}break;
		case 115:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(115);
				}break;
			}
		}break;
		case 116:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(116);
				}break;
			}
		}break;
		case 117:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(117);
				}break;
			}
		}break;
		case 118:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(118);
				}break;
			}
		}break;
		case 119:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(119);
				}break;
			}
		}break;
		case 120:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(120);
				}break;
			}
		}break;
		case 121:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(121);
				}break;
			}
		}break;
		case 122:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(122);
				}break;
			}
		}break;
		case 123:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(123);
				}break;
			}
		}break;
		case 124:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(124);
				}break;
			}
		}break;
		case 125:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(125);
				}break;
			}
		}break;
		case 126:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(126);
				}break;
			}
		}break;
		case 127:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(127);
				}break;
			}
		}break;
		case 128:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(128);
				}break;
			}
		}break;
		case 129:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(129);
				}break;
			}
		}break;
		case 130:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(130);
				}break;
			}
		}break;
		case 131:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(131);
				}break;
			}
		}break;
		case 132:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(132);
				}break;
			}
		}break;
		case 133:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(133);
				}break;
			}
		}break;
		case 134:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(134);
				}break;
			}
		}break;
		case 135:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(135);
				}break;
			}
		}break;
		case 136:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(136);
				}break;
			}
		}break;
		case 137:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(137);
				}break;
			}
		}break;
		case 138:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(138);
				}break;
			}
		}break;
		case 139:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 140:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(140);
				}break;
			}
		}break;
		case 141:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(141);
				}break;
			}
		}break;
		case 142:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(142);
				}break;
			}
		}break;
		case 143:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(143);
				}break;
			}
		}break;
		case 144:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(144);
				}break;
			}
		}break;
		case 145:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(145);
				}break;
			}
		}break;
		case 146:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(146);
				}break;
			}
		}break;
		case 147:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(147);
				}break;
			}
		}break;
		case 148:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(148);
				}break;
			}
		}break;
		case 149:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(149);
				}break;
			}
		}break;
		case 150:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(150);
				}break;
			}
		}break;
		case 151:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(151);
				}break;
			}
		}break;
		case 152:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(152);
				}break;
			}
		}break;
		case 153:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(169);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(346);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(81);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 154:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(300);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 155:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(206);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(192);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 156:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OPeriod):{
					parsx_pop_state();
					parsx_push_state(156);
					parsx_push_state(381);
					parsx_push_state(25);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(126);
				}break;
			}
		}break;
		case 157:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(157);
					parsx_push_state(140);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(108);
				}break;
			}
		}break;
		case 158:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(345);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(158);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(331);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(206);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(192);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 159:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(81);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 160:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(239);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(160);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(81);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 161:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KGlobal):{
					parsx_pop_state();
					parsx_push_state(128);
					parsx_push_state(143);
					parsx_push_state(115);
					parsx_push_state(77);
					parsx_push_state(365);
					parsx_push_state(31);
					parsx_push_state(111);
					parsx_push_state(61);
					parsx_push_state(253);
					parsx_push_state(9);
					parsx_push_state(337);
					parsx_push_state(60);
					parsx_push_state(52);
					parsx_push_state(37);
				}break;
				case parsx_token(KFunction):{
					parsx_pop_state();
					parsx_push_state(105);
					parsx_push_state(110);
					parsx_push_state(115);
					parsx_push_state(232);
					parsx_push_state(111);
					parsx_push_state(146);
					parsx_push_state(220);
					parsx_push_state(18);
					parsx_push_state(403);
					parsx_push_state(19);
					parsx_push_state(52);
					parsx_push_state(35);
				}break;
				case parsx_token(Identifier):{
					parsx_pop_state();
					parsx_insert_token(KFunction);
					parsx_queue_action(35);
					parsx_push_state(105);
					parsx_push_state(110);
					parsx_push_state(115);
					parsx_push_state(232);
					parsx_push_state(111);
					parsx_push_state(146);
					parsx_push_state(220);
					parsx_push_state(18);
					parsx_push_state(403);
					parsx_push_state(19);
					parsx_push_state(52);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(KFunction);
					parsx_queue_action(35);
					parsx_insert_token(Identifier);
					parsx_queue_action(52);
					parsx_insert_token(OLParen);
					parsx_queue_action(19);
					parsx_queue_action(150);
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(113);
					parsx_queue_action(146);
					parsx_queue_action(111);
					parsx_queue_action(58);
					parsx_queue_action(136);
					parsx_insert_token(KEnd);
					parsx_queue_action(16);
					parsx_queue_action(137);
					parsx_queue_action(115);
					parsx_queue_action(110);
					parsx_queue_action(105);
				}break;
			}
		}break;
		case 162:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(300);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 163:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KOr):{
					parsx_pop_state();
					parsx_push_state(424);
					parsx_push_state(72);
					parsx_push_state(342);
					parsx_push_state(54);
				}break;
				case parsx_token(OColon):{
					parsx_pop_state();
					parsx_push_state(424);
					parsx_push_state(107);
					parsx_push_state(253);
					parsx_push_state(9);
				}break;
				case parsx_token(KAnd):{
					parsx_pop_state();
					parsx_push_state(163);
					parsx_push_state(141);
					parsx_push_state(269);
					parsx_push_state(1);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(84);
				}break;
			}
		}break;
		case 164:{
			switch ( parsx_lookahead_token ){
				case parsx_token(Identifier):{
					parsx_pop_state();
					parsx_push_state(270);
					parsx_push_state(100);
					parsx_push_state(52);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(Identifier);
					parsx_queue_action(52);
					parsx_queue_action(100);
				}break;
			}
		}break;
		case 165:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(409);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(165);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(265);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(206);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(192);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 166:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_queue_action(129);
					parsx_queue_action(126);
					parsx_push_state(421);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(Identifier):{
					parsx_pop_state();
					parsx_queue_action(60);
					parsx_push_state(95);
					parsx_push_state(253);
					parsx_push_state(307);
					parsx_push_state(125);
					parsx_push_state(52);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_queue_action(129);
					parsx_queue_action(126);
					parsx_push_state(81);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OPeriod):{
					parsx_pop_state();
					parsx_queue_action(129);
					parsx_push_state(273);
					parsx_push_state(381);
					parsx_push_state(25);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_queue_action(129);
					parsx_queue_action(126);
					parsx_push_state(422);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OColon):{
					parsx_pop_state();
					parsx_queue_action(60);
					parsx_push_state(95);
					parsx_push_state(253);
					parsx_push_state(9);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(129);
					parsx_queue_action(126);
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 167:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 168:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(360);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(168);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(81);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 169:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(81);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 170:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KFloat):{
					parsx_pop_state();
					parsx_push_state(434);
					parsx_push_state(70);
					parsx_push_state(326);
					parsx_push_state(122);
					parsx_push_state(5);
				}break;
				case parsx_token(KString):{
					parsx_pop_state();
					parsx_push_state(434);
					parsx_push_state(70);
					parsx_push_state(252);
					parsx_push_state(145);
					parsx_push_state(38);
				}break;
				case parsx_token(KUnit):{
					parsx_pop_state();
					parsx_push_state(434);
					parsx_push_state(70);
					parsx_push_state(171);
					parsx_push_state(88);
					parsx_push_state(13);
				}break;
				case parsx_token(KBytes):{
					parsx_pop_state();
					parsx_push_state(434);
					parsx_push_state(70);
					parsx_push_state(179);
					parsx_push_state(87);
					parsx_push_state(49);
				}break;
				case parsx_token(Identifier):{
					parsx_pop_state();
					parsx_push_state(434);
					parsx_push_state(70);
					parsx_push_state(305);
					parsx_push_state(129);
					parsx_push_state(52);
				}break;
				case parsx_token(KUndef):{
					parsx_pop_state();
					parsx_push_state(434);
					parsx_push_state(70);
					parsx_push_state(418);
					parsx_push_state(62);
					parsx_push_state(15);
				}break;
				case parsx_token(KBool):{
					parsx_pop_state();
					parsx_push_state(434);
					parsx_push_state(70);
					parsx_push_state(289);
					parsx_push_state(131);
					parsx_push_state(27);
				}break;
				case parsx_token(OLParen):{
					parsx_pop_state();
					parsx_push_state(434);
					parsx_push_state(70);
					parsx_push_state(340);
					parsx_push_state(19);
				}break;
				case parsx_token(OLBrace):{
					parsx_pop_state();
					parsx_push_state(434);
					parsx_push_state(70);
					parsx_push_state(333);
					parsx_push_state(51);
				}break;
				case parsx_token(KDouble):{
					parsx_pop_state();
					parsx_push_state(434);
					parsx_push_state(70);
					parsx_push_state(244);
					parsx_push_state(119);
					parsx_push_state(48);
				}break;
				case parsx_token(KInt):{
					parsx_pop_state();
					parsx_push_state(434);
					parsx_push_state(70);
					parsx_push_state(324);
					parsx_push_state(132);
					parsx_push_state(4);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(148);
				}break;
			}
		}break;
		case 171:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(167);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(196);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 172:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(225);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(375);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(81);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 173:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(206);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(303);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(192);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 174:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(439);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(315);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(162);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(300);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 175:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(257);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(431);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(408);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(206);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(192);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 176:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(195);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(176);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(177);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(300);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 177:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(300);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 178:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(281);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(178);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(438);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(180);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(425);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 179:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(246);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(231);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 180:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(81);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 181:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(442);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(181);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(400);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(206);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(192);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 182:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(294);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(182);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(429);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(300);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 183:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(250);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(183);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(369);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(180);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(425);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 184:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KFloat):{
					parsx_pop_state();
					parsx_push_state(205);
					parsx_push_state(415);
					parsx_push_state(70);
					parsx_push_state(326);
					parsx_push_state(122);
					parsx_push_state(5);
				}break;
				case parsx_token(KString):{
					parsx_pop_state();
					parsx_push_state(205);
					parsx_push_state(415);
					parsx_push_state(70);
					parsx_push_state(252);
					parsx_push_state(145);
					parsx_push_state(38);
				}break;
				case parsx_token(KUnit):{
					parsx_pop_state();
					parsx_push_state(205);
					parsx_push_state(415);
					parsx_push_state(70);
					parsx_push_state(171);
					parsx_push_state(88);
					parsx_push_state(13);
				}break;
				case parsx_token(ORBrace):{
					parsx_pop_state();
					parsx_queue_action(148);
					parsx_push_state(205);
					parsx_push_state(286);
					parsx_push_state(124);
					parsx_push_state(53);
				}break;
				case parsx_token(KBytes):{
					parsx_pop_state();
					parsx_push_state(205);
					parsx_push_state(415);
					parsx_push_state(70);
					parsx_push_state(179);
					parsx_push_state(87);
					parsx_push_state(49);
				}break;
				case parsx_token(Identifier):{
					parsx_pop_state();
					parsx_push_state(205);
					parsx_push_state(415);
					parsx_push_state(70);
					parsx_push_state(305);
					parsx_push_state(129);
					parsx_push_state(52);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_insert_token(OLParen);
					parsx_queue_action(19);
					parsx_push_state(205);
					parsx_push_state(415);
					parsx_push_state(70);
					parsx_push_state(206);
					parsx_push_state(56);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(18);
				}break;
				case parsx_token(KUndef):{
					parsx_pop_state();
					parsx_push_state(205);
					parsx_push_state(415);
					parsx_push_state(70);
					parsx_push_state(418);
					parsx_push_state(62);
					parsx_push_state(15);
				}break;
				case parsx_token(KBool):{
					parsx_pop_state();
					parsx_push_state(205);
					parsx_push_state(415);
					parsx_push_state(70);
					parsx_push_state(289);
					parsx_push_state(131);
					parsx_push_state(27);
				}break;
				case parsx_token(OLBrace):{
					parsx_pop_state();
					parsx_push_state(205);
					parsx_push_state(415);
					parsx_push_state(70);
					parsx_push_state(333);
					parsx_push_state(51);
				}break;
				case parsx_token(OLParen):{
					parsx_pop_state();
					parsx_push_state(205);
					parsx_push_state(415);
					parsx_push_state(70);
					parsx_push_state(340);
					parsx_push_state(19);
				}break;
				case parsx_token(KInt):{
					parsx_pop_state();
					parsx_push_state(205);
					parsx_push_state(415);
					parsx_push_state(70);
					parsx_push_state(324);
					parsx_push_state(132);
					parsx_push_state(4);
				}break;
				case parsx_token(KDouble):{
					parsx_pop_state();
					parsx_push_state(205);
					parsx_push_state(415);
					parsx_push_state(70);
					parsx_push_state(244);
					parsx_push_state(119);
					parsx_push_state(48);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(148);
					parsx_insert_token(ORBrace);
					parsx_queue_action(53);
					parsx_queue_action(124);
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 185:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(334);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(185);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(81);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 186:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(81);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 187:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(255);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(428);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(276);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(206);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(192);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 188:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(432);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(200);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(81);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 189:{
			switch ( parsx_lookahead_token ){
				case parsx_token(Identifier):{
					parsx_pop_state();
					parsx_queue_action(58);
					parsx_insert_token(KImport);
					parsx_queue_action(29);
					parsx_push_state(76);
					parsx_push_state(329);
					parsx_push_state(270);
					parsx_push_state(100);
					parsx_push_state(52);
				}break;
				case parsx_token(KImport):{
					parsx_pop_state();
					parsx_queue_action(58);
					parsx_push_state(76);
					parsx_push_state(329);
					parsx_push_state(270);
					parsx_push_state(100);
					parsx_push_state(52);
					parsx_push_state(29);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(58);
					parsx_insert_token(KImport);
					parsx_queue_action(29);
					parsx_insert_token(Identifier);
					parsx_queue_action(52);
					parsx_queue_action(100);
					parsx_queue_action(90);
					parsx_queue_action(76);
				}break;
			}
		}break;
		case 190:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(180);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(425);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 191:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(191);
					parsx_push_state(152);
					parsx_push_state(266);
					parsx_push_state(23);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 192:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(243);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(385);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 193:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OGT):{
					parsx_pop_state();
					parsx_push_state(414);
					parsx_push_state(123);
					parsx_push_state(395);
					parsx_push_state(34);
				}break;
				case parsx_token(ONE):{
					parsx_pop_state();
					parsx_push_state(414);
					parsx_push_state(130);
					parsx_push_state(395);
					parsx_push_state(26);
				}break;
				case parsx_token(KAnd):{
					parsx_pop_state();
					parsx_push_state(414);
					parsx_push_state(141);
					parsx_push_state(269);
					parsx_push_state(1);
				}break;
				case parsx_token(ORem):{
					parsx_pop_state();
					parsx_push_state(213);
					parsx_push_state(103);
					parsx_push_state(376);
					parsx_push_state(45);
				}break;
				case parsx_token(OLT):{
					parsx_pop_state();
					parsx_push_state(414);
					parsx_push_state(80);
					parsx_push_state(395);
					parsx_push_state(32);
				}break;
				case parsx_token(OMult):{
					parsx_pop_state();
					parsx_push_state(213);
					parsx_push_state(142);
					parsx_push_state(376);
					parsx_push_state(21);
				}break;
				case parsx_token(OMinus):{
					parsx_pop_state();
					parsx_push_state(260);
					parsx_push_state(86);
					parsx_push_state(357);
					parsx_push_state(22);
				}break;
				case parsx_token(OPlus):{
					parsx_pop_state();
					parsx_push_state(260);
					parsx_push_state(121);
					parsx_push_state(357);
					parsx_push_state(20);
				}break;
				case parsx_token(ODiv):{
					parsx_pop_state();
					parsx_push_state(213);
					parsx_push_state(57);
					parsx_push_state(376);
					parsx_push_state(24);
				}break;
				case parsx_token(OPeriod):{
					parsx_pop_state();
					parsx_push_state(193);
					parsx_push_state(238);
					parsx_push_state(25);
				}break;
				case parsx_token(OLE):{
					parsx_pop_state();
					parsx_push_state(414);
					parsx_push_state(114);
					parsx_push_state(395);
					parsx_push_state(42);
				}break;
				case parsx_token(OLParen):{
					parsx_pop_state();
					parsx_push_state(398);
					parsx_push_state(66);
					parsx_push_state(18);
					parsx_push_state(319);
					parsx_push_state(19);
				}break;
				case parsx_token(OEQ):{
					parsx_pop_state();
					parsx_push_state(414);
					parsx_push_state(63);
					parsx_push_state(395);
					parsx_push_state(39);
				}break;
				case parsx_token(OGE):{
					parsx_pop_state();
					parsx_push_state(414);
					parsx_push_state(68);
					parsx_push_state(395);
					parsx_push_state(3);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 194:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(194);
					parsx_push_state(71);
					parsx_push_state(365);
					parsx_push_state(23);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 195:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(177);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(300);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 196:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(167);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(196);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 197:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(300);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 198:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KFloat):{
					parsx_pop_state();
					parsx_push_state(427);
					parsx_push_state(122);
					parsx_push_state(5);
				}break;
				case parsx_token(KString):{
					parsx_pop_state();
					parsx_push_state(344);
					parsx_push_state(145);
					parsx_push_state(38);
				}break;
				case parsx_token(Identifier):{
					parsx_pop_state();
					parsx_push_state(154);
					parsx_push_state(305);
					parsx_push_state(129);
					parsx_push_state(52);
				}break;
				case parsx_token(KBytes):{
					parsx_pop_state();
					parsx_push_state(380);
					parsx_push_state(87);
					parsx_push_state(49);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(56);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(18);
				}break;
				case parsx_token(OLParen):{
					parsx_pop_state();
					parsx_push_state(441);
					parsx_push_state(19);
				}break;
				case parsx_token(KBool):{
					parsx_pop_state();
					parsx_push_state(387);
					parsx_push_state(131);
					parsx_push_state(27);
				}break;
				case parsx_token(OLBrace):{
					parsx_pop_state();
					parsx_push_state(426);
					parsx_push_state(51);
				}break;
				case parsx_token(KUndef):{
					parsx_pop_state();
					parsx_push_state(433);
					parsx_push_state(62);
					parsx_push_state(15);
				}break;
				case parsx_token(KInt):{
					parsx_pop_state();
					parsx_push_state(204);
					parsx_push_state(132);
					parsx_push_state(4);
				}break;
				case parsx_token(KDouble):{
					parsx_pop_state();
					parsx_push_state(174);
					parsx_push_state(119);
					parsx_push_state(48);
				}break;
				case parsx_token(KUnit):{
					parsx_pop_state();
					parsx_push_state(440);
					parsx_push_state(88);
					parsx_push_state(13);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(KUndef);
					parsx_queue_action(15);
					parsx_queue_action(62);
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 199:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(406);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(199);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(209);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(180);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(425);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 200:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(432);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(200);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(81);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 201:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(282);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(201);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(242);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(180);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(425);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 202:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KFloat):{
					parsx_pop_state();
					parsx_push_state(410);
					parsx_push_state(261);
					parsx_push_state(122);
					parsx_push_state(5);
				}break;
				case parsx_token(KString):{
					parsx_pop_state();
					parsx_push_state(410);
					parsx_push_state(263);
					parsx_push_state(145);
					parsx_push_state(38);
				}break;
				case parsx_token(Identifier):{
					parsx_pop_state();
					parsx_push_state(410);
					parsx_push_state(155);
					parsx_push_state(305);
					parsx_push_state(129);
					parsx_push_state(52);
				}break;
				case parsx_token(KBytes):{
					parsx_pop_state();
					parsx_push_state(410);
					parsx_push_state(444);
					parsx_push_state(87);
					parsx_push_state(49);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(233);
					parsx_push_state(56);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(18);
				}break;
				case parsx_token(OLParen):{
					parsx_pop_state();
					parsx_push_state(410);
					parsx_push_state(338);
					parsx_push_state(19);
				}break;
				case parsx_token(KBool):{
					parsx_pop_state();
					parsx_push_state(410);
					parsx_push_state(175);
					parsx_push_state(131);
					parsx_push_state(27);
				}break;
				case parsx_token(OLBrace):{
					parsx_pop_state();
					parsx_push_state(410);
					parsx_push_state(323);
					parsx_push_state(51);
				}break;
				case parsx_token(KUndef):{
					parsx_pop_state();
					parsx_push_state(410);
					parsx_push_state(293);
					parsx_push_state(62);
					parsx_push_state(15);
				}break;
				case parsx_token(KInt):{
					parsx_pop_state();
					parsx_push_state(410);
					parsx_push_state(388);
					parsx_push_state(132);
					parsx_push_state(4);
				}break;
				case parsx_token(KDouble):{
					parsx_pop_state();
					parsx_push_state(410);
					parsx_push_state(187);
					parsx_push_state(119);
					parsx_push_state(48);
				}break;
				case parsx_token(KUnit):{
					parsx_pop_state();
					parsx_push_state(410);
					parsx_push_state(309);
					parsx_push_state(88);
					parsx_push_state(13);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(KBytes);
					parsx_queue_action(49);
					parsx_queue_action(87);
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 203:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(406);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(199);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(209);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(180);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(425);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 204:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(373);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(241);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(197);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(300);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 205:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(180);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(425);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 206:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 207:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KImport):{
					parsx_pop_state();
					parsx_queue_action(79);
					parsx_queue_action(58);
					parsx_push_state(402);
					parsx_push_state(78);
					parsx_push_state(76);
					parsx_push_state(329);
					parsx_push_state(270);
					parsx_push_state(100);
					parsx_push_state(52);
					parsx_push_state(29);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(79);
				}break;
			}
		}break;
		case 208:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(300);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 209:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(180);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(425);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 210:{
			switch ( parsx_lookahead_token ){
				case parsx_token(ODiv):{
					parsx_pop_state();
					parsx_push_state(417);
					parsx_push_state(57);
					parsx_push_state(376);
					parsx_push_state(24);
				}break;
				case parsx_token(OMinus):{
					parsx_pop_state();
					parsx_push_state(371);
					parsx_push_state(86);
					parsx_push_state(357);
					parsx_push_state(22);
				}break;
				case parsx_token(OPlus):{
					parsx_pop_state();
					parsx_push_state(371);
					parsx_push_state(121);
					parsx_push_state(357);
					parsx_push_state(20);
				}break;
				case parsx_token(ORem):{
					parsx_pop_state();
					parsx_push_state(417);
					parsx_push_state(103);
					parsx_push_state(376);
					parsx_push_state(45);
				}break;
				case parsx_token(OLParen):{
					parsx_pop_state();
					parsx_push_state(411);
					parsx_push_state(66);
					parsx_push_state(18);
					parsx_push_state(319);
					parsx_push_state(19);
				}break;
				case parsx_token(OPeriod):{
					parsx_pop_state();
					parsx_push_state(210);
					parsx_push_state(238);
					parsx_push_state(25);
				}break;
				case parsx_token(OMult):{
					parsx_pop_state();
					parsx_push_state(417);
					parsx_push_state(142);
					parsx_push_state(376);
					parsx_push_state(21);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 211:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KElse):{
					parsx_pop_state();
					parsx_push_state(69);
					parsx_push_state(16);
					parsx_push_state(365);
					parsx_push_state(41);
				}break;
				case parsx_token(KEnd):{
					parsx_pop_state();
					parsx_insert_token(KElse);
					parsx_queue_action(41);
					parsx_queue_action(102);
					parsx_push_state(69);
					parsx_push_state(16);
				}break;
				case parsx_token(KElseIf):{
					parsx_pop_state();
					parsx_push_state(133);
					parsx_push_state(211);
					parsx_push_state(365);
					parsx_push_state(36);
					parsx_push_state(365);
					parsx_push_state(28);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(KElse);
					parsx_queue_action(41);
					parsx_queue_action(102);
					parsx_insert_token(KEnd);
					parsx_queue_action(16);
					parsx_queue_action(69);
				}break;
			}
		}break;
		case 212:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(283);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(300);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 213:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OGT):{
					parsx_pop_state();
					parsx_push_state(414);
					parsx_push_state(123);
					parsx_push_state(395);
					parsx_push_state(34);
				}break;
				case parsx_token(ONE):{
					parsx_pop_state();
					parsx_push_state(414);
					parsx_push_state(130);
					parsx_push_state(395);
					parsx_push_state(26);
				}break;
				case parsx_token(KAnd):{
					parsx_pop_state();
					parsx_push_state(414);
					parsx_push_state(141);
					parsx_push_state(269);
					parsx_push_state(1);
				}break;
				case parsx_token(ORem):{
					parsx_pop_state();
					parsx_push_state(213);
					parsx_push_state(103);
					parsx_push_state(376);
					parsx_push_state(45);
				}break;
				case parsx_token(OLT):{
					parsx_pop_state();
					parsx_push_state(414);
					parsx_push_state(80);
					parsx_push_state(395);
					parsx_push_state(32);
				}break;
				case parsx_token(OMult):{
					parsx_pop_state();
					parsx_push_state(213);
					parsx_push_state(142);
					parsx_push_state(376);
					parsx_push_state(21);
				}break;
				case parsx_token(OMinus):{
					parsx_pop_state();
					parsx_push_state(260);
					parsx_push_state(86);
					parsx_push_state(357);
					parsx_push_state(22);
				}break;
				case parsx_token(OPlus):{
					parsx_pop_state();
					parsx_push_state(260);
					parsx_push_state(121);
					parsx_push_state(357);
					parsx_push_state(20);
				}break;
				case parsx_token(ODiv):{
					parsx_pop_state();
					parsx_push_state(213);
					parsx_push_state(57);
					parsx_push_state(376);
					parsx_push_state(24);
				}break;
				case parsx_token(OLE):{
					parsx_pop_state();
					parsx_push_state(414);
					parsx_push_state(114);
					parsx_push_state(395);
					parsx_push_state(42);
				}break;
				case parsx_token(OEQ):{
					parsx_pop_state();
					parsx_push_state(414);
					parsx_push_state(63);
					parsx_push_state(395);
					parsx_push_state(39);
				}break;
				case parsx_token(OGE):{
					parsx_pop_state();
					parsx_push_state(414);
					parsx_push_state(68);
					parsx_push_state(395);
					parsx_push_state(3);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 214:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(300);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 215:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(212);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(215);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(283);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(300);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 216:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 217:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KNot):{
					parsx_pop_state();
					parsx_push_state(399);
					parsx_push_state(120);
					parsx_push_state(269);
					parsx_push_state(7);
				}break;
				case parsx_token(Identifier):{
					parsx_pop_state();
					parsx_push_state(399);
					parsx_push_state(85);
					parsx_push_state(52);
				}break;
				case parsx_token(KTrue):{
					parsx_pop_state();
					parsx_push_state(399);
					parsx_push_state(127);
					parsx_push_state(46);
				}break;
				case parsx_token(OMinus):{
					parsx_pop_state();
					parsx_push_state(399);
					parsx_push_state(99);
					parsx_push_state(217);
					parsx_push_state(22);
				}break;
				case parsx_token(KNull):{
					parsx_pop_state();
					parsx_push_state(399);
					parsx_push_state(116);
					parsx_push_state(11);
				}break;
				case parsx_token(NumberLiteral):{
					parsx_pop_state();
					parsx_push_state(399);
					parsx_push_state(55);
					parsx_push_state(6);
				}break;
				case parsx_token(KUnit):{
					parsx_pop_state();
					parsx_push_state(399);
					parsx_push_state(112);
					parsx_push_state(13);
				}break;
				case parsx_token(KIf):{
					parsx_pop_state();
					parsx_push_state(399);
					parsx_push_state(104);
					parsx_push_state(211);
					parsx_push_state(365);
					parsx_push_state(36);
					parsx_push_state(365);
					parsx_push_state(14);
				}break;
				case parsx_token(OLParen):{
					parsx_pop_state();
					parsx_push_state(399);
					parsx_push_state(147);
					parsx_push_state(18);
					parsx_push_state(365);
					parsx_push_state(19);
				}break;
				case parsx_token(KFalse):{
					parsx_pop_state();
					parsx_push_state(399);
					parsx_push_state(96);
					parsx_push_state(2);
				}break;
				case parsx_token(StringLiteral):{
					parsx_pop_state();
					parsx_push_state(399);
					parsx_push_state(82);
					parsx_push_state(12);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(102);
				}break;
			}
		}break;
		case 218:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OGT):{
					parsx_pop_state();
					parsx_push_state(314);
					parsx_push_state(123);
					parsx_push_state(395);
					parsx_push_state(34);
				}break;
				case parsx_token(ONE):{
					parsx_pop_state();
					parsx_push_state(314);
					parsx_push_state(130);
					parsx_push_state(395);
					parsx_push_state(26);
				}break;
				case parsx_token(KAnd):{
					parsx_pop_state();
					parsx_push_state(314);
					parsx_push_state(141);
					parsx_push_state(269);
					parsx_push_state(1);
				}break;
				case parsx_token(ORem):{
					parsx_pop_state();
					parsx_push_state(245);
					parsx_push_state(103);
					parsx_push_state(376);
					parsx_push_state(45);
				}break;
				case parsx_token(KOr):{
					parsx_pop_state();
					parsx_push_state(247);
					parsx_push_state(72);
					parsx_push_state(342);
					parsx_push_state(54);
				}break;
				case parsx_token(OGE):{
					parsx_pop_state();
					parsx_push_state(314);
					parsx_push_state(68);
					parsx_push_state(395);
					parsx_push_state(3);
				}break;
				case parsx_token(OMinus):{
					parsx_pop_state();
					parsx_push_state(275);
					parsx_push_state(86);
					parsx_push_state(357);
					parsx_push_state(22);
				}break;
				case parsx_token(OMult):{
					parsx_pop_state();
					parsx_push_state(245);
					parsx_push_state(142);
					parsx_push_state(376);
					parsx_push_state(21);
				}break;
				case parsx_token(OLT):{
					parsx_pop_state();
					parsx_push_state(314);
					parsx_push_state(80);
					parsx_push_state(395);
					parsx_push_state(32);
				}break;
				case parsx_token(OPlus):{
					parsx_pop_state();
					parsx_push_state(275);
					parsx_push_state(121);
					parsx_push_state(357);
					parsx_push_state(20);
				}break;
				case parsx_token(ODiv):{
					parsx_pop_state();
					parsx_push_state(245);
					parsx_push_state(57);
					parsx_push_state(376);
					parsx_push_state(24);
				}break;
				case parsx_token(OLE):{
					parsx_pop_state();
					parsx_push_state(314);
					parsx_push_state(114);
					parsx_push_state(395);
					parsx_push_state(42);
				}break;
				case parsx_token(OLParen):{
					parsx_pop_state();
					parsx_push_state(218);
					parsx_push_state(66);
					parsx_push_state(18);
					parsx_push_state(319);
					parsx_push_state(19);
				}break;
				case parsx_token(OEQ):{
					parsx_pop_state();
					parsx_push_state(314);
					parsx_push_state(63);
					parsx_push_state(395);
					parsx_push_state(39);
				}break;
				case parsx_token(OColon):{
					parsx_pop_state();
					parsx_push_state(247);
					parsx_push_state(107);
					parsx_push_state(253);
					parsx_push_state(9);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(74);
				}break;
			}
		}break;
		case 219:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(297);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(219);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(298);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(180);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(425);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 220:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OColon):{
					parsx_pop_state();
					parsx_push_state(134);
					parsx_push_state(253);
					parsx_push_state(9);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(113);
				}break;
			}
		}break;
		case 221:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(317);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(287);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(320);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(180);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(425);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 222:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(297);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(219);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(298);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(180);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(425);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 223:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(350);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(404);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(190);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(180);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(425);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 224:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(239);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(160);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(81);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 225:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(81);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 226:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KFloat):{
					parsx_pop_state();
					parsx_push_state(397);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
					parsx_push_state(326);
					parsx_push_state(122);
					parsx_push_state(5);
				}break;
				case parsx_token(KString):{
					parsx_pop_state();
					parsx_push_state(397);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
					parsx_push_state(252);
					parsx_push_state(145);
					parsx_push_state(38);
				}break;
				case parsx_token(Identifier):{
					parsx_pop_state();
					parsx_push_state(397);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
					parsx_push_state(305);
					parsx_push_state(129);
					parsx_push_state(52);
				}break;
				case parsx_token(KBytes):{
					parsx_pop_state();
					parsx_push_state(397);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
					parsx_push_state(179);
					parsx_push_state(87);
					parsx_push_state(49);
				}break;
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_insert_token(KFloat);
					parsx_queue_action(5);
					parsx_queue_action(122);
					parsx_push_state(397);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(KUndef):{
					parsx_pop_state();
					parsx_push_state(397);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
					parsx_push_state(418);
					parsx_push_state(62);
					parsx_push_state(15);
				}break;
				case parsx_token(KBool):{
					parsx_pop_state();
					parsx_push_state(397);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
					parsx_push_state(289);
					parsx_push_state(131);
					parsx_push_state(27);
				}break;
				case parsx_token(OLParen):{
					parsx_pop_state();
					parsx_push_state(397);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
					parsx_push_state(340);
					parsx_push_state(19);
				}break;
				case parsx_token(OLBrace):{
					parsx_pop_state();
					parsx_push_state(397);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
					parsx_push_state(333);
					parsx_push_state(51);
				}break;
				case parsx_token(KDouble):{
					parsx_pop_state();
					parsx_push_state(397);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
					parsx_push_state(244);
					parsx_push_state(119);
					parsx_push_state(48);
				}break;
				case parsx_token(KInt):{
					parsx_pop_state();
					parsx_push_state(397);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
					parsx_push_state(324);
					parsx_push_state(132);
					parsx_push_state(4);
				}break;
				case parsx_token(KUnit):{
					parsx_pop_state();
					parsx_push_state(397);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
					parsx_push_state(171);
					parsx_push_state(88);
					parsx_push_state(13);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(97);
					parsx_insert_token(OComma);
					parsx_queue_action(23);
					parsx_queue_action(97);
					parsx_queue_action(135);
				}break;
			}
		}break;
		case 227:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OLParen):{
					parsx_pop_state();
					parsx_push_state(227);
					parsx_push_state(66);
					parsx_push_state(18);
					parsx_push_state(319);
					parsx_push_state(19);
				}break;
				case parsx_token(ODiv):{
					parsx_pop_state();
					parsx_push_state(304);
					parsx_push_state(57);
					parsx_push_state(376);
					parsx_push_state(24);
				}break;
				case parsx_token(ORem):{
					parsx_pop_state();
					parsx_push_state(304);
					parsx_push_state(103);
					parsx_push_state(376);
					parsx_push_state(45);
				}break;
				case parsx_token(OMult):{
					parsx_pop_state();
					parsx_push_state(304);
					parsx_push_state(142);
					parsx_push_state(376);
					parsx_push_state(21);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 228:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OGT):{
					parsx_pop_state();
					parsx_push_state(163);
					parsx_push_state(123);
					parsx_push_state(395);
					parsx_push_state(34);
				}break;
				case parsx_token(ONE):{
					parsx_pop_state();
					parsx_push_state(163);
					parsx_push_state(130);
					parsx_push_state(395);
					parsx_push_state(26);
				}break;
				case parsx_token(KAnd):{
					parsx_pop_state();
					parsx_push_state(163);
					parsx_push_state(141);
					parsx_push_state(269);
					parsx_push_state(1);
				}break;
				case parsx_token(ORem):{
					parsx_pop_state();
					parsx_push_state(228);
					parsx_push_state(103);
					parsx_push_state(376);
					parsx_push_state(45);
				}break;
				case parsx_token(KOr):{
					parsx_pop_state();
					parsx_push_state(424);
					parsx_push_state(72);
					parsx_push_state(342);
					parsx_push_state(54);
				}break;
				case parsx_token(OGE):{
					parsx_pop_state();
					parsx_push_state(163);
					parsx_push_state(68);
					parsx_push_state(395);
					parsx_push_state(3);
				}break;
				case parsx_token(OMinus):{
					parsx_pop_state();
					parsx_push_state(277);
					parsx_push_state(86);
					parsx_push_state(357);
					parsx_push_state(22);
				}break;
				case parsx_token(OMult):{
					parsx_pop_state();
					parsx_push_state(228);
					parsx_push_state(142);
					parsx_push_state(376);
					parsx_push_state(21);
				}break;
				case parsx_token(OPlus):{
					parsx_pop_state();
					parsx_push_state(277);
					parsx_push_state(121);
					parsx_push_state(357);
					parsx_push_state(20);
				}break;
				case parsx_token(OLT):{
					parsx_pop_state();
					parsx_push_state(163);
					parsx_push_state(80);
					parsx_push_state(395);
					parsx_push_state(32);
				}break;
				case parsx_token(ODiv):{
					parsx_pop_state();
					parsx_push_state(228);
					parsx_push_state(57);
					parsx_push_state(376);
					parsx_push_state(24);
				}break;
				case parsx_token(OLE):{
					parsx_pop_state();
					parsx_push_state(163);
					parsx_push_state(114);
					parsx_push_state(395);
					parsx_push_state(42);
				}break;
				case parsx_token(OEQ):{
					parsx_pop_state();
					parsx_push_state(163);
					parsx_push_state(63);
					parsx_push_state(395);
					parsx_push_state(39);
				}break;
				case parsx_token(OColon):{
					parsx_pop_state();
					parsx_push_state(424);
					parsx_push_state(107);
					parsx_push_state(253);
					parsx_push_state(9);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(84);
				}break;
			}
		}break;
		case 229:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(280);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(229);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(235);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(206);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(192);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 230:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(10);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(230);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(OVBar);
					parsx_queue_action(10);
				}break;
			}
		}break;
		case 231:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(246);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(231);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 232:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KNot):{
					parsx_pop_state();
					parsx_queue_action(58);
					parsx_push_state(137);
					parsx_push_state(16);
					parsx_push_state(327);
					parsx_push_state(75);
					parsx_push_state(343);
					parsx_push_state(120);
					parsx_push_state(269);
					parsx_push_state(7);
				}break;
				case parsx_token(Identifier):{
					parsx_pop_state();
					parsx_queue_action(58);
					parsx_push_state(137);
					parsx_push_state(16);
					parsx_push_state(327);
					parsx_push_state(75);
					parsx_push_state(343);
					parsx_push_state(85);
					parsx_push_state(52);
				}break;
				case parsx_token(KTrue):{
					parsx_pop_state();
					parsx_queue_action(58);
					parsx_push_state(137);
					parsx_push_state(16);
					parsx_push_state(327);
					parsx_push_state(75);
					parsx_push_state(343);
					parsx_push_state(127);
					parsx_push_state(46);
				}break;
				case parsx_token(KImport):{
					parsx_pop_state();
					parsx_push_state(144);
					parsx_push_state(12);
					parsx_push_state(29);
				}break;
				case parsx_token(KNull):{
					parsx_pop_state();
					parsx_queue_action(58);
					parsx_push_state(137);
					parsx_push_state(16);
					parsx_push_state(327);
					parsx_push_state(75);
					parsx_push_state(343);
					parsx_push_state(116);
					parsx_push_state(11);
				}break;
				case parsx_token(OMinus):{
					parsx_pop_state();
					parsx_queue_action(58);
					parsx_push_state(137);
					parsx_push_state(16);
					parsx_push_state(327);
					parsx_push_state(75);
					parsx_push_state(343);
					parsx_push_state(99);
					parsx_push_state(217);
					parsx_push_state(22);
				}break;
				case parsx_token(NumberLiteral):{
					parsx_pop_state();
					parsx_queue_action(58);
					parsx_push_state(137);
					parsx_push_state(16);
					parsx_push_state(327);
					parsx_push_state(75);
					parsx_push_state(343);
					parsx_push_state(55);
					parsx_push_state(6);
				}break;
				case parsx_token(KIf):{
					parsx_pop_state();
					parsx_queue_action(58);
					parsx_push_state(137);
					parsx_push_state(16);
					parsx_push_state(327);
					parsx_push_state(75);
					parsx_push_state(343);
					parsx_push_state(104);
					parsx_push_state(211);
					parsx_push_state(365);
					parsx_push_state(36);
					parsx_push_state(365);
					parsx_push_state(14);
				}break;
				case parsx_token(KEnd):{
					parsx_pop_state();
					parsx_queue_action(58);
					parsx_queue_action(136);
					parsx_push_state(137);
					parsx_push_state(16);
				}break;
				case parsx_token(OLParen):{
					parsx_pop_state();
					parsx_queue_action(58);
					parsx_push_state(137);
					parsx_push_state(16);
					parsx_push_state(327);
					parsx_push_state(75);
					parsx_push_state(343);
					parsx_push_state(147);
					parsx_push_state(18);
					parsx_push_state(365);
					parsx_push_state(19);
				}break;
				case parsx_token(KFalse):{
					parsx_pop_state();
					parsx_queue_action(58);
					parsx_push_state(137);
					parsx_push_state(16);
					parsx_push_state(327);
					parsx_push_state(75);
					parsx_push_state(343);
					parsx_push_state(96);
					parsx_push_state(2);
				}break;
				case parsx_token(StringLiteral):{
					parsx_pop_state();
					parsx_queue_action(58);
					parsx_push_state(137);
					parsx_push_state(16);
					parsx_push_state(327);
					parsx_push_state(75);
					parsx_push_state(343);
					parsx_push_state(82);
					parsx_push_state(12);
				}break;
				case parsx_token(KUnit):{
					parsx_pop_state();
					parsx_queue_action(58);
					parsx_push_state(137);
					parsx_push_state(16);
					parsx_push_state(327);
					parsx_push_state(75);
					parsx_push_state(343);
					parsx_push_state(112);
					parsx_push_state(13);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(58);
					parsx_queue_action(136);
					parsx_insert_token(KEnd);
					parsx_queue_action(16);
					parsx_queue_action(137);
				}break;
			}
		}break;
		case 233:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(180);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(410);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(425);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 234:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KOr):{
					parsx_pop_state();
					parsx_push_state(268);
					parsx_push_state(72);
					parsx_push_state(342);
					parsx_push_state(54);
				}break;
				case parsx_token(OColon):{
					parsx_pop_state();
					parsx_push_state(268);
					parsx_push_state(107);
					parsx_push_state(253);
					parsx_push_state(9);
				}break;
				case parsx_token(KAnd):{
					parsx_pop_state();
					parsx_push_state(234);
					parsx_push_state(141);
					parsx_push_state(269);
					parsx_push_state(1);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(84);
				}break;
			}
		}break;
		case 235:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(206);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(192);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 236:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OPeriod):{
					parsx_pop_state();
					parsx_push_state(236);
					parsx_push_state(381);
					parsx_push_state(25);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 237:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(282);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(201);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(242);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(180);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(425);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 238:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OLT):{
					parsx_pop_state();
					parsx_push_state(83);
					parsx_push_state(34);
					parsx_push_state(170);
					parsx_push_state(32);
				}break;
				case parsx_token(Identifier):{
					parsx_pop_state();
					parsx_push_state(93);
					parsx_push_state(52);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(Identifier);
					parsx_queue_action(52);
					parsx_queue_action(93);
				}break;
			}
		}break;
		case 239:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(81);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 240:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(300);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 241:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(373);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(241);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(197);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(300);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 242:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(180);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(425);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 243:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 244:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(279);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(355);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 245:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OGT):{
					parsx_pop_state();
					parsx_push_state(314);
					parsx_push_state(123);
					parsx_push_state(395);
					parsx_push_state(34);
				}break;
				case parsx_token(ONE):{
					parsx_pop_state();
					parsx_push_state(314);
					parsx_push_state(130);
					parsx_push_state(395);
					parsx_push_state(26);
				}break;
				case parsx_token(KAnd):{
					parsx_pop_state();
					parsx_push_state(314);
					parsx_push_state(141);
					parsx_push_state(269);
					parsx_push_state(1);
				}break;
				case parsx_token(ORem):{
					parsx_pop_state();
					parsx_push_state(245);
					parsx_push_state(103);
					parsx_push_state(376);
					parsx_push_state(45);
				}break;
				case parsx_token(KOr):{
					parsx_pop_state();
					parsx_push_state(247);
					parsx_push_state(72);
					parsx_push_state(342);
					parsx_push_state(54);
				}break;
				case parsx_token(OGE):{
					parsx_pop_state();
					parsx_push_state(314);
					parsx_push_state(68);
					parsx_push_state(395);
					parsx_push_state(3);
				}break;
				case parsx_token(OMinus):{
					parsx_pop_state();
					parsx_push_state(275);
					parsx_push_state(86);
					parsx_push_state(357);
					parsx_push_state(22);
				}break;
				case parsx_token(OMult):{
					parsx_pop_state();
					parsx_push_state(245);
					parsx_push_state(142);
					parsx_push_state(376);
					parsx_push_state(21);
				}break;
				case parsx_token(OPlus):{
					parsx_pop_state();
					parsx_push_state(275);
					parsx_push_state(121);
					parsx_push_state(357);
					parsx_push_state(20);
				}break;
				case parsx_token(OLT):{
					parsx_pop_state();
					parsx_push_state(314);
					parsx_push_state(80);
					parsx_push_state(395);
					parsx_push_state(32);
				}break;
				case parsx_token(ODiv):{
					parsx_pop_state();
					parsx_push_state(245);
					parsx_push_state(57);
					parsx_push_state(376);
					parsx_push_state(24);
				}break;
				case parsx_token(OLE):{
					parsx_pop_state();
					parsx_push_state(314);
					parsx_push_state(114);
					parsx_push_state(395);
					parsx_push_state(42);
				}break;
				case parsx_token(OEQ):{
					parsx_pop_state();
					parsx_push_state(314);
					parsx_push_state(63);
					parsx_push_state(395);
					parsx_push_state(39);
				}break;
				case parsx_token(OColon):{
					parsx_pop_state();
					parsx_push_state(247);
					parsx_push_state(107);
					parsx_push_state(253);
					parsx_push_state(9);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(74);
				}break;
			}
		}break;
		case 246:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 247:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KOr):{
					parsx_pop_state();
					parsx_push_state(247);
					parsx_push_state(72);
					parsx_push_state(342);
					parsx_push_state(54);
				}break;
				case parsx_token(OColon):{
					parsx_pop_state();
					parsx_push_state(247);
					parsx_push_state(107);
					parsx_push_state(253);
					parsx_push_state(9);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(74);
				}break;
			}
		}break;
		case 248:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OColon):{
					parsx_pop_state();
					parsx_push_state(61);
					parsx_push_state(253);
					parsx_push_state(9);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(OColon);
					parsx_queue_action(9);
					parsx_queue_action(97);
					parsx_queue_action(61);
				}break;
			}
		}break;
		case 249:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(378);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(311);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 250:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(180);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(369);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(425);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 251:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(206);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(363);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(192);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 252:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(216);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(264);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 253:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KFloat):{
					parsx_pop_state();
					parsx_push_state(326);
					parsx_push_state(122);
					parsx_push_state(5);
				}break;
				case parsx_token(KString):{
					parsx_pop_state();
					parsx_push_state(252);
					parsx_push_state(145);
					parsx_push_state(38);
				}break;
				case parsx_token(KUnit):{
					parsx_pop_state();
					parsx_push_state(171);
					parsx_push_state(88);
					parsx_push_state(13);
				}break;
				case parsx_token(KBytes):{
					parsx_pop_state();
					parsx_push_state(179);
					parsx_push_state(87);
					parsx_push_state(49);
				}break;
				case parsx_token(Identifier):{
					parsx_pop_state();
					parsx_push_state(305);
					parsx_push_state(129);
					parsx_push_state(52);
				}break;
				case parsx_token(KUndef):{
					parsx_pop_state();
					parsx_push_state(418);
					parsx_push_state(62);
					parsx_push_state(15);
				}break;
				case parsx_token(KBool):{
					parsx_pop_state();
					parsx_push_state(289);
					parsx_push_state(131);
					parsx_push_state(27);
				}break;
				case parsx_token(OLBrace):{
					parsx_pop_state();
					parsx_push_state(333);
					parsx_push_state(51);
				}break;
				case parsx_token(OLParen):{
					parsx_pop_state();
					parsx_push_state(340);
					parsx_push_state(19);
				}break;
				case parsx_token(KInt):{
					parsx_pop_state();
					parsx_push_state(324);
					parsx_push_state(132);
					parsx_push_state(4);
				}break;
				case parsx_token(KDouble):{
					parsx_pop_state();
					parsx_push_state(244);
					parsx_push_state(119);
					parsx_push_state(48);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(97);
				}break;
			}
		}break;
		case 254:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 255:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(276);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(206);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(192);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 256:{
			switch ( parsx_lookahead_token ){
				default:{
					parsx_pop_state();
					parsx_queue_action(58);
				}break;
			}
		}break;
		case 257:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(408);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(206);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(192);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 258:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OLParen):{
					parsx_pop_state();
					parsx_push_state(258);
					parsx_push_state(66);
					parsx_push_state(18);
					parsx_push_state(319);
					parsx_push_state(19);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 259:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(259);
					parsx_push_state(64);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORBrace):{
					parsx_pop_state();
					parsx_push_state(328);
					parsx_push_state(124);
					parsx_push_state(53);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORBrace);
					parsx_queue_action(53);
					parsx_queue_action(124);
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 260:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OGT):{
					parsx_pop_state();
					parsx_push_state(414);
					parsx_push_state(123);
					parsx_push_state(395);
					parsx_push_state(34);
				}break;
				case parsx_token(ONE):{
					parsx_pop_state();
					parsx_push_state(414);
					parsx_push_state(130);
					parsx_push_state(395);
					parsx_push_state(26);
				}break;
				case parsx_token(KAnd):{
					parsx_pop_state();
					parsx_push_state(414);
					parsx_push_state(141);
					parsx_push_state(269);
					parsx_push_state(1);
				}break;
				case parsx_token(OLT):{
					parsx_pop_state();
					parsx_push_state(414);
					parsx_push_state(80);
					parsx_push_state(395);
					parsx_push_state(32);
				}break;
				case parsx_token(OMinus):{
					parsx_pop_state();
					parsx_push_state(260);
					parsx_push_state(86);
					parsx_push_state(357);
					parsx_push_state(22);
				}break;
				case parsx_token(OPlus):{
					parsx_pop_state();
					parsx_push_state(260);
					parsx_push_state(121);
					parsx_push_state(357);
					parsx_push_state(20);
				}break;
				case parsx_token(OLE):{
					parsx_pop_state();
					parsx_push_state(414);
					parsx_push_state(114);
					parsx_push_state(395);
					parsx_push_state(42);
				}break;
				case parsx_token(OEQ):{
					parsx_pop_state();
					parsx_push_state(414);
					parsx_push_state(63);
					parsx_push_state(395);
					parsx_push_state(39);
				}break;
				case parsx_token(OGE):{
					parsx_pop_state();
					parsx_push_state(414);
					parsx_push_state(68);
					parsx_push_state(395);
					parsx_push_state(3);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 261:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(251);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(396);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(363);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(206);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(192);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 262:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OLParen):{
					parsx_pop_state();
					parsx_push_state(227);
					parsx_push_state(66);
					parsx_push_state(18);
					parsx_push_state(319);
					parsx_push_state(19);
				}break;
				case parsx_token(ODiv):{
					parsx_pop_state();
					parsx_push_state(304);
					parsx_push_state(57);
					parsx_push_state(376);
					parsx_push_state(24);
				}break;
				case parsx_token(OPeriod):{
					parsx_pop_state();
					parsx_push_state(262);
					parsx_push_state(238);
					parsx_push_state(25);
				}break;
				case parsx_token(ORem):{
					parsx_pop_state();
					parsx_push_state(304);
					parsx_push_state(103);
					parsx_push_state(376);
					parsx_push_state(45);
				}break;
				case parsx_token(OMult):{
					parsx_pop_state();
					parsx_push_state(304);
					parsx_push_state(142);
					parsx_push_state(376);
					parsx_push_state(21);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 263:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(173);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(377);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(303);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(206);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(192);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 264:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(216);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(264);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 265:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(206);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(192);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 266:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KString):{
					parsx_pop_state();
					parsx_push_state(383);
					parsx_push_state(145);
					parsx_push_state(38);
				}break;
				case parsx_token(KFloat):{
					parsx_pop_state();
					parsx_push_state(419);
					parsx_push_state(122);
					parsx_push_state(5);
				}break;
				case parsx_token(KDouble):{
					parsx_pop_state();
					parsx_push_state(224);
					parsx_push_state(119);
					parsx_push_state(48);
				}break;
				case parsx_token(KBytes):{
					parsx_pop_state();
					parsx_push_state(382);
					parsx_push_state(87);
					parsx_push_state(49);
				}break;
				case parsx_token(KUndef):{
					parsx_pop_state();
					parsx_push_state(172);
					parsx_push_state(62);
					parsx_push_state(15);
				}break;
				case parsx_token(KBool):{
					parsx_pop_state();
					parsx_push_state(188);
					parsx_push_state(131);
					parsx_push_state(27);
				}break;
				case parsx_token(OLBrace):{
					parsx_pop_state();
					parsx_push_state(420);
					parsx_push_state(51);
				}break;
				case parsx_token(OLParen):{
					parsx_pop_state();
					parsx_push_state(405);
					parsx_push_state(19);
				}break;
				case parsx_token(Identifier):{
					parsx_pop_state();
					parsx_push_state(166);
					parsx_push_state(52);
				}break;
				case parsx_token(KInt):{
					parsx_pop_state();
					parsx_push_state(296);
					parsx_push_state(132);
					parsx_push_state(4);
				}break;
				case parsx_token(KUnit):{
					parsx_pop_state();
					parsx_push_state(153);
					parsx_push_state(88);
					parsx_push_state(13);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(KFloat);
					parsx_queue_action(5);
					parsx_queue_action(122);
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 267:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KGlobal):{
					parsx_pop_state();
					parsx_push_state(267);
					parsx_push_state(73);
					parsx_push_state(128);
					parsx_push_state(143);
					parsx_push_state(115);
					parsx_push_state(77);
					parsx_push_state(365);
					parsx_push_state(31);
					parsx_push_state(111);
					parsx_push_state(61);
					parsx_push_state(253);
					parsx_push_state(9);
					parsx_push_state(337);
					parsx_push_state(60);
					parsx_push_state(52);
					parsx_push_state(37);
				}break;
				case parsx_token(KFunction):{
					parsx_pop_state();
					parsx_push_state(267);
					parsx_push_state(73);
					parsx_push_state(105);
					parsx_push_state(110);
					parsx_push_state(115);
					parsx_push_state(232);
					parsx_push_state(111);
					parsx_push_state(146);
					parsx_push_state(220);
					parsx_push_state(18);
					parsx_push_state(403);
					parsx_push_state(19);
					parsx_push_state(52);
					parsx_push_state(35);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 268:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KOr):{
					parsx_pop_state();
					parsx_push_state(268);
					parsx_push_state(72);
					parsx_push_state(342);
					parsx_push_state(54);
				}break;
				case parsx_token(OColon):{
					parsx_pop_state();
					parsx_push_state(268);
					parsx_push_state(107);
					parsx_push_state(253);
					parsx_push_state(9);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(84);
				}break;
			}
		}break;
		case 269:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KNot):{
					parsx_pop_state();
					parsx_push_state(302);
					parsx_push_state(120);
					parsx_push_state(269);
					parsx_push_state(7);
				}break;
				case parsx_token(Identifier):{
					parsx_pop_state();
					parsx_push_state(302);
					parsx_push_state(85);
					parsx_push_state(52);
				}break;
				case parsx_token(KTrue):{
					parsx_pop_state();
					parsx_push_state(302);
					parsx_push_state(127);
					parsx_push_state(46);
				}break;
				case parsx_token(OMinus):{
					parsx_pop_state();
					parsx_push_state(302);
					parsx_push_state(99);
					parsx_push_state(217);
					parsx_push_state(22);
				}break;
				case parsx_token(KNull):{
					parsx_pop_state();
					parsx_push_state(302);
					parsx_push_state(116);
					parsx_push_state(11);
				}break;
				case parsx_token(NumberLiteral):{
					parsx_pop_state();
					parsx_push_state(302);
					parsx_push_state(55);
					parsx_push_state(6);
				}break;
				case parsx_token(KIf):{
					parsx_pop_state();
					parsx_push_state(302);
					parsx_push_state(104);
					parsx_push_state(211);
					parsx_push_state(365);
					parsx_push_state(36);
					parsx_push_state(365);
					parsx_push_state(14);
				}break;
				case parsx_token(OLParen):{
					parsx_pop_state();
					parsx_push_state(302);
					parsx_push_state(147);
					parsx_push_state(18);
					parsx_push_state(365);
					parsx_push_state(19);
				}break;
				case parsx_token(KFalse):{
					parsx_pop_state();
					parsx_push_state(302);
					parsx_push_state(96);
					parsx_push_state(2);
				}break;
				case parsx_token(StringLiteral):{
					parsx_pop_state();
					parsx_push_state(302);
					parsx_push_state(82);
					parsx_push_state(12);
				}break;
				case parsx_token(KUnit):{
					parsx_pop_state();
					parsx_push_state(302);
					parsx_push_state(112);
					parsx_push_state(13);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(102);
				}break;
			}
		}break;
		case 270:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OPeriod):{
					parsx_pop_state();
					parsx_push_state(270);
					parsx_push_state(118);
					parsx_push_state(52);
					parsx_push_state(25);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 271:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(285);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(300);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 272:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(272);
					parsx_push_state(59);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
				}break;
			}
		}break;
		case 273:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_queue_action(126);
					parsx_push_state(421);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_queue_action(126);
					parsx_push_state(422);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_queue_action(126);
					parsx_push_state(81);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OPeriod):{
					parsx_pop_state();
					parsx_push_state(273);
					parsx_push_state(381);
					parsx_push_state(25);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(126);
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 274:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(392);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(274);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(81);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 275:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OGT):{
					parsx_pop_state();
					parsx_push_state(314);
					parsx_push_state(123);
					parsx_push_state(395);
					parsx_push_state(34);
				}break;
				case parsx_token(ONE):{
					parsx_pop_state();
					parsx_push_state(314);
					parsx_push_state(130);
					parsx_push_state(395);
					parsx_push_state(26);
				}break;
				case parsx_token(KAnd):{
					parsx_pop_state();
					parsx_push_state(314);
					parsx_push_state(141);
					parsx_push_state(269);
					parsx_push_state(1);
				}break;
				case parsx_token(OLT):{
					parsx_pop_state();
					parsx_push_state(314);
					parsx_push_state(80);
					parsx_push_state(395);
					parsx_push_state(32);
				}break;
				case parsx_token(OGE):{
					parsx_pop_state();
					parsx_push_state(314);
					parsx_push_state(68);
					parsx_push_state(395);
					parsx_push_state(3);
				}break;
				case parsx_token(OMinus):{
					parsx_pop_state();
					parsx_push_state(275);
					parsx_push_state(86);
					parsx_push_state(357);
					parsx_push_state(22);
				}break;
				case parsx_token(OPlus):{
					parsx_pop_state();
					parsx_push_state(275);
					parsx_push_state(121);
					parsx_push_state(357);
					parsx_push_state(20);
				}break;
				case parsx_token(KOr):{
					parsx_pop_state();
					parsx_push_state(247);
					parsx_push_state(72);
					parsx_push_state(342);
					parsx_push_state(54);
				}break;
				case parsx_token(OLE):{
					parsx_pop_state();
					parsx_push_state(314);
					parsx_push_state(114);
					parsx_push_state(395);
					parsx_push_state(42);
				}break;
				case parsx_token(OEQ):{
					parsx_pop_state();
					parsx_push_state(314);
					parsx_push_state(63);
					parsx_push_state(395);
					parsx_push_state(39);
				}break;
				case parsx_token(OColon):{
					parsx_pop_state();
					parsx_push_state(247);
					parsx_push_state(107);
					parsx_push_state(253);
					parsx_push_state(9);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(74);
				}break;
			}
		}break;
		case 276:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(206);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(192);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 277:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OGT):{
					parsx_pop_state();
					parsx_push_state(163);
					parsx_push_state(123);
					parsx_push_state(395);
					parsx_push_state(34);
				}break;
				case parsx_token(ONE):{
					parsx_pop_state();
					parsx_push_state(163);
					parsx_push_state(130);
					parsx_push_state(395);
					parsx_push_state(26);
				}break;
				case parsx_token(KAnd):{
					parsx_pop_state();
					parsx_push_state(163);
					parsx_push_state(141);
					parsx_push_state(269);
					parsx_push_state(1);
				}break;
				case parsx_token(KOr):{
					parsx_pop_state();
					parsx_push_state(424);
					parsx_push_state(72);
					parsx_push_state(342);
					parsx_push_state(54);
				}break;
				case parsx_token(OGE):{
					parsx_pop_state();
					parsx_push_state(163);
					parsx_push_state(68);
					parsx_push_state(395);
					parsx_push_state(3);
				}break;
				case parsx_token(OMinus):{
					parsx_pop_state();
					parsx_push_state(277);
					parsx_push_state(86);
					parsx_push_state(357);
					parsx_push_state(22);
				}break;
				case parsx_token(OPlus):{
					parsx_pop_state();
					parsx_push_state(277);
					parsx_push_state(121);
					parsx_push_state(357);
					parsx_push_state(20);
				}break;
				case parsx_token(OLT):{
					parsx_pop_state();
					parsx_push_state(163);
					parsx_push_state(80);
					parsx_push_state(395);
					parsx_push_state(32);
				}break;
				case parsx_token(OLE):{
					parsx_pop_state();
					parsx_push_state(163);
					parsx_push_state(114);
					parsx_push_state(395);
					parsx_push_state(42);
				}break;
				case parsx_token(OEQ):{
					parsx_pop_state();
					parsx_push_state(163);
					parsx_push_state(63);
					parsx_push_state(395);
					parsx_push_state(39);
				}break;
				case parsx_token(OColon):{
					parsx_pop_state();
					parsx_push_state(424);
					parsx_push_state(107);
					parsx_push_state(253);
					parsx_push_state(9);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(84);
				}break;
			}
		}break;
		case 278:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(421);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(422);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(81);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 279:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 280:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(206);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(235);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(192);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 281:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(438);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(180);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(425);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 282:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(180);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(242);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(425);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 283:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(300);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 284:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OAssign):{
					parsx_pop_state();
					parsx_push_state(77);
					parsx_push_state(365);
					parsx_push_state(31);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(OAssign);
					parsx_queue_action(31);
					parsx_queue_action(102);
					parsx_queue_action(77);
				}break;
			}
		}break;
		case 285:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(300);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 286:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(372);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(306);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 287:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(317);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(287);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(320);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(180);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(425);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 288:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 289:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(288);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(389);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 290:{
			switch ( parsx_lookahead_token ){
				case parsx_token(Identifier):{
					parsx_pop_state();
					parsx_push_state(337);
					parsx_push_state(60);
					parsx_push_state(52);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(Identifier);
					parsx_queue_action(52);
					parsx_queue_action(60);
				}break;
			}
		}break;
		case 291:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(313);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(291);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 292:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(308);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(292);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(81);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 293:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(345);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(158);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(331);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(206);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(192);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 294:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(429);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(300);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 295:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_queue_action(126);
					parsx_push_state(378);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_queue_action(126);
					parsx_push_state(311);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_queue_action(126);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OPeriod):{
					parsx_pop_state();
					parsx_push_state(295);
					parsx_push_state(381);
					parsx_push_state(25);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(126);
				}break;
			}
		}break;
		case 296:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(308);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(292);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(81);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 297:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(298);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(180);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(425);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 298:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(180);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(425);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 299:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KGlobal):{
					parsx_pop_state();
					parsx_queue_action(79);
					parsx_queue_action(65);
					parsx_push_state(67);
					parsx_push_state(43);
					parsx_push_state(267);
					parsx_push_state(73);
					parsx_push_state(128);
					parsx_push_state(143);
					parsx_push_state(115);
					parsx_push_state(77);
					parsx_push_state(365);
					parsx_push_state(31);
					parsx_push_state(111);
					parsx_push_state(61);
					parsx_push_state(253);
					parsx_push_state(9);
					parsx_push_state(337);
					parsx_push_state(60);
					parsx_push_state(52);
					parsx_push_state(37);
				}break;
				case parsx_token(EndOfFile):{
					parsx_pop_state();
					parsx_queue_action(79);
					parsx_queue_action(65);
					parsx_push_state(67);
					parsx_push_state(43);
				}break;
				case parsx_token(KImport):{
					parsx_pop_state();
					parsx_queue_action(79);
					parsx_queue_action(58);
					parsx_push_state(67);
					parsx_push_state(43);
					parsx_push_state(348);
					parsx_push_state(78);
					parsx_push_state(76);
					parsx_push_state(329);
					parsx_push_state(270);
					parsx_push_state(100);
					parsx_push_state(52);
					parsx_push_state(29);
				}break;
				case parsx_token(KFunction):{
					parsx_pop_state();
					parsx_queue_action(79);
					parsx_queue_action(65);
					parsx_push_state(67);
					parsx_push_state(43);
					parsx_push_state(267);
					parsx_push_state(73);
					parsx_push_state(105);
					parsx_push_state(110);
					parsx_push_state(115);
					parsx_push_state(232);
					parsx_push_state(111);
					parsx_push_state(146);
					parsx_push_state(220);
					parsx_push_state(18);
					parsx_push_state(403);
					parsx_push_state(19);
					parsx_push_state(52);
					parsx_push_state(35);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(79);
					parsx_queue_action(65);
					parsx_insert_token(EndOfFile);
					parsx_queue_action(43);
					parsx_queue_action(67);
				}break;
			}
		}break;
		case 300:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(300);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 301:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OGT):{
					parsx_pop_state();
					parsx_push_state(407);
					parsx_push_state(123);
					parsx_push_state(395);
					parsx_push_state(34);
				}break;
				case parsx_token(ONE):{
					parsx_pop_state();
					parsx_push_state(407);
					parsx_push_state(130);
					parsx_push_state(395);
					parsx_push_state(26);
				}break;
				case parsx_token(KAnd):{
					parsx_pop_state();
					parsx_push_state(407);
					parsx_push_state(141);
					parsx_push_state(269);
					parsx_push_state(1);
				}break;
				case parsx_token(OLT):{
					parsx_pop_state();
					parsx_push_state(407);
					parsx_push_state(80);
					parsx_push_state(395);
					parsx_push_state(32);
				}break;
				case parsx_token(OGE):{
					parsx_pop_state();
					parsx_push_state(407);
					parsx_push_state(68);
					parsx_push_state(395);
					parsx_push_state(3);
				}break;
				case parsx_token(OMinus):{
					parsx_pop_state();
					parsx_push_state(301);
					parsx_push_state(86);
					parsx_push_state(357);
					parsx_push_state(22);
				}break;
				case parsx_token(OPlus):{
					parsx_pop_state();
					parsx_push_state(301);
					parsx_push_state(121);
					parsx_push_state(357);
					parsx_push_state(20);
				}break;
				case parsx_token(KOr):{
					parsx_pop_state();
					parsx_push_state(366);
					parsx_push_state(72);
					parsx_push_state(342);
					parsx_push_state(54);
				}break;
				case parsx_token(OLE):{
					parsx_pop_state();
					parsx_push_state(407);
					parsx_push_state(114);
					parsx_push_state(395);
					parsx_push_state(42);
				}break;
				case parsx_token(OEQ):{
					parsx_pop_state();
					parsx_push_state(407);
					parsx_push_state(63);
					parsx_push_state(395);
					parsx_push_state(39);
				}break;
				case parsx_token(OColon):{
					parsx_pop_state();
					parsx_push_state(366);
					parsx_push_state(107);
					parsx_push_state(253);
					parsx_push_state(9);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 302:{
			switch ( parsx_lookahead_token ){
				case parsx_token(ONE):{
					parsx_pop_state();
					parsx_push_state(130);
					parsx_push_state(395);
					parsx_push_state(26);
				}break;
				case parsx_token(OGT):{
					parsx_pop_state();
					parsx_push_state(123);
					parsx_push_state(395);
					parsx_push_state(34);
				}break;
				case parsx_token(OEQ):{
					parsx_pop_state();
					parsx_push_state(63);
					parsx_push_state(395);
					parsx_push_state(39);
				}break;
				case parsx_token(ORem):{
					parsx_pop_state();
					parsx_push_state(336);
					parsx_push_state(103);
					parsx_push_state(376);
					parsx_push_state(45);
				}break;
				case parsx_token(OLT):{
					parsx_pop_state();
					parsx_push_state(80);
					parsx_push_state(395);
					parsx_push_state(32);
				}break;
				case parsx_token(OMult):{
					parsx_pop_state();
					parsx_push_state(336);
					parsx_push_state(142);
					parsx_push_state(376);
					parsx_push_state(21);
				}break;
				case parsx_token(OMinus):{
					parsx_pop_state();
					parsx_push_state(347);
					parsx_push_state(86);
					parsx_push_state(357);
					parsx_push_state(22);
				}break;
				case parsx_token(OPlus):{
					parsx_pop_state();
					parsx_push_state(347);
					parsx_push_state(121);
					parsx_push_state(357);
					parsx_push_state(20);
				}break;
				case parsx_token(ODiv):{
					parsx_pop_state();
					parsx_push_state(336);
					parsx_push_state(57);
					parsx_push_state(376);
					parsx_push_state(24);
				}break;
				case parsx_token(OPeriod):{
					parsx_pop_state();
					parsx_push_state(302);
					parsx_push_state(238);
					parsx_push_state(25);
				}break;
				case parsx_token(OLParen):{
					parsx_pop_state();
					parsx_push_state(384);
					parsx_push_state(66);
					parsx_push_state(18);
					parsx_push_state(319);
					parsx_push_state(19);
				}break;
				case parsx_token(OLE):{
					parsx_pop_state();
					parsx_push_state(114);
					parsx_push_state(395);
					parsx_push_state(42);
				}break;
				case parsx_token(OGE):{
					parsx_pop_state();
					parsx_push_state(68);
					parsx_push_state(395);
					parsx_push_state(3);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 303:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(206);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(192);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 304:{
			switch ( parsx_lookahead_token ){
				case parsx_token(ODiv):{
					parsx_pop_state();
					parsx_push_state(304);
					parsx_push_state(57);
					parsx_push_state(376);
					parsx_push_state(24);
				}break;
				case parsx_token(OMult):{
					parsx_pop_state();
					parsx_push_state(304);
					parsx_push_state(142);
					parsx_push_state(376);
					parsx_push_state(21);
				}break;
				case parsx_token(ORem):{
					parsx_pop_state();
					parsx_push_state(304);
					parsx_push_state(103);
					parsx_push_state(376);
					parsx_push_state(45);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 305:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_queue_action(126);
					parsx_push_state(378);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_queue_action(126);
					parsx_push_state(311);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_queue_action(126);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OPeriod):{
					parsx_pop_state();
					parsx_push_state(295);
					parsx_push_state(381);
					parsx_push_state(25);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(126);
				}break;
			}
		}break;
		case 306:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(372);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(306);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 307:{
			switch ( parsx_lookahead_token ){
				case parsx_token(Identifier):{
					parsx_pop_state();
					parsx_push_state(307);
					parsx_push_state(125);
					parsx_push_state(52);
				}break;
				case parsx_token(OColon):{
					parsx_pop_state();
					parsx_push_state(9);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(OColon);
					parsx_queue_action(9);
				}break;
			}
		}break;
		case 308:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(81);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 309:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(409);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(165);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(265);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(206);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(192);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 310:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(310);
					parsx_push_state(140);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 311:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(378);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(311);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 312:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OGT):{
					parsx_pop_state();
					parsx_push_state(234);
					parsx_push_state(123);
					parsx_push_state(395);
					parsx_push_state(34);
				}break;
				case parsx_token(ONE):{
					parsx_pop_state();
					parsx_push_state(234);
					parsx_push_state(130);
					parsx_push_state(395);
					parsx_push_state(26);
				}break;
				case parsx_token(KAnd):{
					parsx_pop_state();
					parsx_push_state(234);
					parsx_push_state(141);
					parsx_push_state(269);
					parsx_push_state(1);
				}break;
				case parsx_token(ORem):{
					parsx_pop_state();
					parsx_push_state(312);
					parsx_push_state(103);
					parsx_push_state(376);
					parsx_push_state(45);
				}break;
				case parsx_token(KOr):{
					parsx_pop_state();
					parsx_push_state(268);
					parsx_push_state(72);
					parsx_push_state(342);
					parsx_push_state(54);
				}break;
				case parsx_token(OGE):{
					parsx_pop_state();
					parsx_push_state(234);
					parsx_push_state(68);
					parsx_push_state(395);
					parsx_push_state(3);
				}break;
				case parsx_token(OMinus):{
					parsx_pop_state();
					parsx_push_state(401);
					parsx_push_state(86);
					parsx_push_state(357);
					parsx_push_state(22);
				}break;
				case parsx_token(OMult):{
					parsx_pop_state();
					parsx_push_state(312);
					parsx_push_state(142);
					parsx_push_state(376);
					parsx_push_state(21);
				}break;
				case parsx_token(OPlus):{
					parsx_pop_state();
					parsx_push_state(401);
					parsx_push_state(121);
					parsx_push_state(357);
					parsx_push_state(20);
				}break;
				case parsx_token(OLT):{
					parsx_pop_state();
					parsx_push_state(234);
					parsx_push_state(80);
					parsx_push_state(395);
					parsx_push_state(32);
				}break;
				case parsx_token(ODiv):{
					parsx_pop_state();
					parsx_push_state(312);
					parsx_push_state(57);
					parsx_push_state(376);
					parsx_push_state(24);
				}break;
				case parsx_token(OLE):{
					parsx_pop_state();
					parsx_push_state(234);
					parsx_push_state(114);
					parsx_push_state(395);
					parsx_push_state(42);
				}break;
				case parsx_token(OEQ):{
					parsx_pop_state();
					parsx_push_state(234);
					parsx_push_state(63);
					parsx_push_state(395);
					parsx_push_state(39);
				}break;
				case parsx_token(OColon):{
					parsx_pop_state();
					parsx_push_state(268);
					parsx_push_state(107);
					parsx_push_state(253);
					parsx_push_state(9);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(84);
				}break;
			}
		}break;
		case 313:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 314:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KOr):{
					parsx_pop_state();
					parsx_push_state(247);
					parsx_push_state(72);
					parsx_push_state(342);
					parsx_push_state(54);
				}break;
				case parsx_token(OColon):{
					parsx_pop_state();
					parsx_push_state(247);
					parsx_push_state(107);
					parsx_push_state(253);
					parsx_push_state(9);
				}break;
				case parsx_token(KAnd):{
					parsx_pop_state();
					parsx_push_state(314);
					parsx_push_state(141);
					parsx_push_state(269);
					parsx_push_state(1);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(74);
				}break;
			}
		}break;
		case 315:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(439);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(315);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(162);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(300);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 316:{
			switch ( parsx_lookahead_token ){
				case parsx_token(Identifier):{
					parsx_pop_state();
					parsx_push_state(236);
					parsx_push_state(129);
					parsx_push_state(52);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(Identifier);
					parsx_queue_action(52);
					parsx_queue_action(129);
				}break;
			}
		}break;
		case 317:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(320);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(180);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(425);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 318:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(208);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(300);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 319:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KNot):{
					parsx_pop_state();
					parsx_push_state(194);
					parsx_push_state(335);
					parsx_push_state(120);
					parsx_push_state(269);
					parsx_push_state(7);
				}break;
				case parsx_token(Identifier):{
					parsx_pop_state();
					parsx_push_state(194);
					parsx_push_state(335);
					parsx_push_state(85);
					parsx_push_state(52);
				}break;
				case parsx_token(KTrue):{
					parsx_pop_state();
					parsx_push_state(194);
					parsx_push_state(335);
					parsx_push_state(127);
					parsx_push_state(46);
				}break;
				case parsx_token(OMinus):{
					parsx_pop_state();
					parsx_push_state(194);
					parsx_push_state(335);
					parsx_push_state(99);
					parsx_push_state(217);
					parsx_push_state(22);
				}break;
				case parsx_token(KNull):{
					parsx_pop_state();
					parsx_push_state(194);
					parsx_push_state(335);
					parsx_push_state(116);
					parsx_push_state(11);
				}break;
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_queue_action(98);
					parsx_push_state(194);
					parsx_push_state(71);
					parsx_push_state(365);
					parsx_push_state(23);
				}break;
				case parsx_token(NumberLiteral):{
					parsx_pop_state();
					parsx_push_state(194);
					parsx_push_state(335);
					parsx_push_state(55);
					parsx_push_state(6);
				}break;
				case parsx_token(KUnit):{
					parsx_pop_state();
					parsx_push_state(194);
					parsx_push_state(335);
					parsx_push_state(112);
					parsx_push_state(13);
				}break;
				case parsx_token(KIf):{
					parsx_pop_state();
					parsx_push_state(194);
					parsx_push_state(335);
					parsx_push_state(104);
					parsx_push_state(211);
					parsx_push_state(365);
					parsx_push_state(36);
					parsx_push_state(365);
					parsx_push_state(14);
				}break;
				case parsx_token(OLParen):{
					parsx_pop_state();
					parsx_push_state(194);
					parsx_push_state(335);
					parsx_push_state(147);
					parsx_push_state(18);
					parsx_push_state(365);
					parsx_push_state(19);
				}break;
				case parsx_token(KFalse):{
					parsx_pop_state();
					parsx_push_state(194);
					parsx_push_state(335);
					parsx_push_state(96);
					parsx_push_state(2);
				}break;
				case parsx_token(StringLiteral):{
					parsx_pop_state();
					parsx_push_state(194);
					parsx_push_state(335);
					parsx_push_state(82);
					parsx_push_state(12);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(98);
				}break;
			}
		}break;
		case 320:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(180);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(425);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 321:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KFloat):{
					parsx_pop_state();
					parsx_push_state(122);
					parsx_push_state(5);
				}break;
				case parsx_token(KString):{
					parsx_pop_state();
					parsx_push_state(145);
					parsx_push_state(38);
				}break;
				case parsx_token(KDouble):{
					parsx_pop_state();
					parsx_push_state(119);
					parsx_push_state(48);
				}break;
				case parsx_token(KBytes):{
					parsx_pop_state();
					parsx_push_state(87);
					parsx_push_state(49);
				}break;
				case parsx_token(KBool):{
					parsx_pop_state();
					parsx_push_state(131);
					parsx_push_state(27);
				}break;
				case parsx_token(OLBrace):{
					parsx_pop_state();
					parsx_push_state(124);
					parsx_push_state(53);
					parsx_push_state(170);
					parsx_push_state(51);
				}break;
				case parsx_token(KUndef):{
					parsx_pop_state();
					parsx_push_state(62);
					parsx_push_state(15);
				}break;
				case parsx_token(Identifier):{
					parsx_pop_state();
					parsx_push_state(156);
					parsx_push_state(129);
					parsx_push_state(52);
				}break;
				case parsx_token(KInt):{
					parsx_pop_state();
					parsx_push_state(132);
					parsx_push_state(4);
				}break;
				case parsx_token(KUnit):{
					parsx_pop_state();
					parsx_push_state(88);
					parsx_push_state(13);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(KUnit);
					parsx_queue_action(13);
					parsx_queue_action(88);
				}break;
			}
		}break;
		case 322:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KFloat):{
					parsx_pop_state();
					parsx_push_state(300);
					parsx_push_state(122);
					parsx_push_state(5);
				}break;
				case parsx_token(KString):{
					parsx_pop_state();
					parsx_push_state(300);
					parsx_push_state(145);
					parsx_push_state(38);
				}break;
				case parsx_token(KUnit):{
					parsx_pop_state();
					parsx_push_state(300);
					parsx_push_state(88);
					parsx_push_state(13);
				}break;
				case parsx_token(KBytes):{
					parsx_pop_state();
					parsx_push_state(300);
					parsx_push_state(87);
					parsx_push_state(49);
				}break;
				case parsx_token(Identifier):{
					parsx_pop_state();
					parsx_push_state(300);
					parsx_push_state(156);
					parsx_push_state(129);
					parsx_push_state(52);
				}break;
				case parsx_token(KUndef):{
					parsx_pop_state();
					parsx_push_state(300);
					parsx_push_state(62);
					parsx_push_state(15);
				}break;
				case parsx_token(KBool):{
					parsx_pop_state();
					parsx_push_state(300);
					parsx_push_state(131);
					parsx_push_state(27);
				}break;
				case parsx_token(OLBrace):{
					parsx_pop_state();
					parsx_push_state(300);
					parsx_push_state(124);
					parsx_push_state(53);
					parsx_push_state(170);
					parsx_push_state(51);
				}break;
				case parsx_token(OLParen):{
					parsx_pop_state();
					parsx_push_state(198);
					parsx_push_state(19);
				}break;
				case parsx_token(KInt):{
					parsx_pop_state();
					parsx_push_state(300);
					parsx_push_state(132);
					parsx_push_state(4);
				}break;
				case parsx_token(KDouble):{
					parsx_pop_state();
					parsx_push_state(300);
					parsx_push_state(119);
					parsx_push_state(48);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(97);
				}break;
			}
		}break;
		case 323:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KFloat):{
					parsx_pop_state();
					parsx_push_state(374);
					parsx_push_state(415);
					parsx_push_state(70);
					parsx_push_state(326);
					parsx_push_state(122);
					parsx_push_state(5);
				}break;
				case parsx_token(KString):{
					parsx_pop_state();
					parsx_push_state(374);
					parsx_push_state(415);
					parsx_push_state(70);
					parsx_push_state(252);
					parsx_push_state(145);
					parsx_push_state(38);
				}break;
				case parsx_token(KUnit):{
					parsx_pop_state();
					parsx_push_state(374);
					parsx_push_state(415);
					parsx_push_state(70);
					parsx_push_state(171);
					parsx_push_state(88);
					parsx_push_state(13);
				}break;
				case parsx_token(ORBrace):{
					parsx_pop_state();
					parsx_queue_action(148);
					parsx_push_state(374);
					parsx_push_state(286);
					parsx_push_state(124);
					parsx_push_state(53);
				}break;
				case parsx_token(KBytes):{
					parsx_pop_state();
					parsx_push_state(374);
					parsx_push_state(415);
					parsx_push_state(70);
					parsx_push_state(179);
					parsx_push_state(87);
					parsx_push_state(49);
				}break;
				case parsx_token(Identifier):{
					parsx_pop_state();
					parsx_push_state(374);
					parsx_push_state(415);
					parsx_push_state(70);
					parsx_push_state(305);
					parsx_push_state(129);
					parsx_push_state(52);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_insert_token(OLParen);
					parsx_queue_action(19);
					parsx_push_state(374);
					parsx_push_state(415);
					parsx_push_state(70);
					parsx_push_state(206);
					parsx_push_state(56);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(18);
				}break;
				case parsx_token(KUndef):{
					parsx_pop_state();
					parsx_push_state(374);
					parsx_push_state(415);
					parsx_push_state(70);
					parsx_push_state(418);
					parsx_push_state(62);
					parsx_push_state(15);
				}break;
				case parsx_token(KBool):{
					parsx_pop_state();
					parsx_push_state(374);
					parsx_push_state(415);
					parsx_push_state(70);
					parsx_push_state(289);
					parsx_push_state(131);
					parsx_push_state(27);
				}break;
				case parsx_token(OLBrace):{
					parsx_pop_state();
					parsx_push_state(374);
					parsx_push_state(415);
					parsx_push_state(70);
					parsx_push_state(333);
					parsx_push_state(51);
				}break;
				case parsx_token(OLParen):{
					parsx_pop_state();
					parsx_push_state(374);
					parsx_push_state(415);
					parsx_push_state(70);
					parsx_push_state(340);
					parsx_push_state(19);
				}break;
				case parsx_token(KInt):{
					parsx_pop_state();
					parsx_push_state(374);
					parsx_push_state(415);
					parsx_push_state(70);
					parsx_push_state(324);
					parsx_push_state(132);
					parsx_push_state(4);
				}break;
				case parsx_token(KDouble):{
					parsx_pop_state();
					parsx_push_state(374);
					parsx_push_state(415);
					parsx_push_state(70);
					parsx_push_state(244);
					parsx_push_state(119);
					parsx_push_state(48);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(148);
					parsx_insert_token(ORBrace);
					parsx_queue_action(53);
					parsx_queue_action(124);
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 324:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(313);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(291);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 325:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KNot):{
					parsx_pop_state();
					parsx_push_state(327);
					parsx_push_state(75);
					parsx_push_state(343);
					parsx_push_state(120);
					parsx_push_state(269);
					parsx_push_state(7);
				}break;
				case parsx_token(Identifier):{
					parsx_pop_state();
					parsx_push_state(327);
					parsx_push_state(75);
					parsx_push_state(343);
					parsx_push_state(85);
					parsx_push_state(52);
				}break;
				case parsx_token(KTrue):{
					parsx_pop_state();
					parsx_push_state(327);
					parsx_push_state(75);
					parsx_push_state(343);
					parsx_push_state(127);
					parsx_push_state(46);
				}break;
				case parsx_token(OMinus):{
					parsx_pop_state();
					parsx_push_state(327);
					parsx_push_state(75);
					parsx_push_state(343);
					parsx_push_state(99);
					parsx_push_state(217);
					parsx_push_state(22);
				}break;
				case parsx_token(KNull):{
					parsx_pop_state();
					parsx_push_state(327);
					parsx_push_state(75);
					parsx_push_state(343);
					parsx_push_state(116);
					parsx_push_state(11);
				}break;
				case parsx_token(NumberLiteral):{
					parsx_pop_state();
					parsx_push_state(327);
					parsx_push_state(75);
					parsx_push_state(343);
					parsx_push_state(55);
					parsx_push_state(6);
				}break;
				case parsx_token(KIf):{
					parsx_pop_state();
					parsx_push_state(327);
					parsx_push_state(75);
					parsx_push_state(343);
					parsx_push_state(104);
					parsx_push_state(211);
					parsx_push_state(365);
					parsx_push_state(36);
					parsx_push_state(365);
					parsx_push_state(14);
				}break;
				case parsx_token(OLParen):{
					parsx_pop_state();
					parsx_push_state(327);
					parsx_push_state(75);
					parsx_push_state(343);
					parsx_push_state(147);
					parsx_push_state(18);
					parsx_push_state(365);
					parsx_push_state(19);
				}break;
				case parsx_token(KFalse):{
					parsx_pop_state();
					parsx_push_state(327);
					parsx_push_state(75);
					parsx_push_state(343);
					parsx_push_state(96);
					parsx_push_state(2);
				}break;
				case parsx_token(StringLiteral):{
					parsx_pop_state();
					parsx_push_state(327);
					parsx_push_state(75);
					parsx_push_state(343);
					parsx_push_state(82);
					parsx_push_state(12);
				}break;
				case parsx_token(KUnit):{
					parsx_pop_state();
					parsx_push_state(327);
					parsx_push_state(75);
					parsx_push_state(343);
					parsx_push_state(112);
					parsx_push_state(13);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(136);
				}break;
			}
		}break;
		case 326:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(354);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(435);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 327:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KNot):{
					parsx_pop_state();
					parsx_push_state(327);
					parsx_push_state(94);
					parsx_push_state(332);
					parsx_push_state(120);
					parsx_push_state(269);
					parsx_push_state(7);
				}break;
				case parsx_token(KFalse):{
					parsx_pop_state();
					parsx_push_state(327);
					parsx_push_state(94);
					parsx_push_state(332);
					parsx_push_state(96);
					parsx_push_state(2);
				}break;
				case parsx_token(KTrue):{
					parsx_pop_state();
					parsx_push_state(327);
					parsx_push_state(94);
					parsx_push_state(332);
					parsx_push_state(127);
					parsx_push_state(46);
				}break;
				case parsx_token(KNull):{
					parsx_pop_state();
					parsx_push_state(327);
					parsx_push_state(94);
					parsx_push_state(332);
					parsx_push_state(116);
					parsx_push_state(11);
				}break;
				case parsx_token(NumberLiteral):{
					parsx_pop_state();
					parsx_push_state(327);
					parsx_push_state(94);
					parsx_push_state(332);
					parsx_push_state(55);
					parsx_push_state(6);
				}break;
				case parsx_token(OSemicolon):{
					parsx_pop_state();
					parsx_push_state(327);
					parsx_push_state(109);
					parsx_push_state(30);
				}break;
				case parsx_token(Identifier):{
					parsx_pop_state();
					parsx_push_state(327);
					parsx_push_state(94);
					parsx_push_state(332);
					parsx_push_state(85);
					parsx_push_state(52);
				}break;
				case parsx_token(StringLiteral):{
					parsx_pop_state();
					parsx_push_state(327);
					parsx_push_state(94);
					parsx_push_state(332);
					parsx_push_state(82);
					parsx_push_state(12);
				}break;
				case parsx_token(KUnit):{
					parsx_pop_state();
					parsx_push_state(327);
					parsx_push_state(94);
					parsx_push_state(332);
					parsx_push_state(112);
					parsx_push_state(13);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 328:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(360);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(168);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(81);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 329:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KAs):{
					parsx_pop_state();
					parsx_push_state(138);
					parsx_push_state(52);
					parsx_push_state(8);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(90);
				}break;
			}
		}break;
		case 330:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(437);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(300);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 331:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(206);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(192);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 332:{
			switch ( parsx_lookahead_token ){
				case parsx_token(ONE):{
					parsx_pop_state();
					parsx_push_state(234);
					parsx_push_state(130);
					parsx_push_state(395);
					parsx_push_state(26);
				}break;
				case parsx_token(OGT):{
					parsx_pop_state();
					parsx_push_state(234);
					parsx_push_state(123);
					parsx_push_state(395);
					parsx_push_state(34);
				}break;
				case parsx_token(KAnd):{
					parsx_pop_state();
					parsx_push_state(234);
					parsx_push_state(141);
					parsx_push_state(269);
					parsx_push_state(1);
				}break;
				case parsx_token(ORem):{
					parsx_pop_state();
					parsx_push_state(312);
					parsx_push_state(103);
					parsx_push_state(376);
					parsx_push_state(45);
				}break;
				case parsx_token(KOr):{
					parsx_pop_state();
					parsx_push_state(268);
					parsx_push_state(72);
					parsx_push_state(342);
					parsx_push_state(54);
				}break;
				case parsx_token(OGE):{
					parsx_pop_state();
					parsx_push_state(234);
					parsx_push_state(68);
					parsx_push_state(395);
					parsx_push_state(3);
				}break;
				case parsx_token(OMinus):{
					parsx_pop_state();
					parsx_push_state(401);
					parsx_push_state(86);
					parsx_push_state(357);
					parsx_push_state(22);
				}break;
				case parsx_token(OMult):{
					parsx_pop_state();
					parsx_push_state(312);
					parsx_push_state(142);
					parsx_push_state(376);
					parsx_push_state(21);
				}break;
				case parsx_token(OLT):{
					parsx_pop_state();
					parsx_push_state(234);
					parsx_push_state(80);
					parsx_push_state(395);
					parsx_push_state(32);
				}break;
				case parsx_token(OPlus):{
					parsx_pop_state();
					parsx_push_state(401);
					parsx_push_state(121);
					parsx_push_state(357);
					parsx_push_state(20);
				}break;
				case parsx_token(ODiv):{
					parsx_pop_state();
					parsx_push_state(312);
					parsx_push_state(57);
					parsx_push_state(376);
					parsx_push_state(24);
				}break;
				case parsx_token(OPeriod):{
					parsx_pop_state();
					parsx_push_state(332);
					parsx_push_state(390);
					parsx_push_state(25);
				}break;
				case parsx_token(OEQ):{
					parsx_pop_state();
					parsx_push_state(234);
					parsx_push_state(63);
					parsx_push_state(395);
					parsx_push_state(39);
				}break;
				case parsx_token(OLParen):{
					parsx_pop_state();
					parsx_push_state(364);
					parsx_push_state(66);
					parsx_push_state(18);
					parsx_push_state(319);
					parsx_push_state(19);
				}break;
				case parsx_token(OLE):{
					parsx_pop_state();
					parsx_push_state(234);
					parsx_push_state(114);
					parsx_push_state(395);
					parsx_push_state(42);
				}break;
				case parsx_token(OColon):{
					parsx_pop_state();
					parsx_push_state(268);
					parsx_push_state(107);
					parsx_push_state(253);
					parsx_push_state(9);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(84);
				}break;
			}
		}break;
		case 333:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KFloat):{
					parsx_pop_state();
					parsx_push_state(415);
					parsx_push_state(70);
					parsx_push_state(326);
					parsx_push_state(122);
					parsx_push_state(5);
				}break;
				case parsx_token(KString):{
					parsx_pop_state();
					parsx_push_state(415);
					parsx_push_state(70);
					parsx_push_state(252);
					parsx_push_state(145);
					parsx_push_state(38);
				}break;
				case parsx_token(Identifier):{
					parsx_pop_state();
					parsx_push_state(415);
					parsx_push_state(70);
					parsx_push_state(305);
					parsx_push_state(129);
					parsx_push_state(52);
				}break;
				case parsx_token(ORBrace):{
					parsx_pop_state();
					parsx_queue_action(148);
					parsx_push_state(286);
					parsx_push_state(124);
					parsx_push_state(53);
				}break;
				case parsx_token(KBytes):{
					parsx_pop_state();
					parsx_push_state(415);
					parsx_push_state(70);
					parsx_push_state(179);
					parsx_push_state(87);
					parsx_push_state(49);
				}break;
				case parsx_token(KUndef):{
					parsx_pop_state();
					parsx_push_state(415);
					parsx_push_state(70);
					parsx_push_state(418);
					parsx_push_state(62);
					parsx_push_state(15);
				}break;
				case parsx_token(KBool):{
					parsx_pop_state();
					parsx_push_state(415);
					parsx_push_state(70);
					parsx_push_state(289);
					parsx_push_state(131);
					parsx_push_state(27);
				}break;
				case parsx_token(OLBrace):{
					parsx_pop_state();
					parsx_push_state(415);
					parsx_push_state(70);
					parsx_push_state(333);
					parsx_push_state(51);
				}break;
				case parsx_token(OLParen):{
					parsx_pop_state();
					parsx_push_state(415);
					parsx_push_state(70);
					parsx_push_state(340);
					parsx_push_state(19);
				}break;
				case parsx_token(KDouble):{
					parsx_pop_state();
					parsx_push_state(415);
					parsx_push_state(70);
					parsx_push_state(244);
					parsx_push_state(119);
					parsx_push_state(48);
				}break;
				case parsx_token(KInt):{
					parsx_pop_state();
					parsx_push_state(415);
					parsx_push_state(70);
					parsx_push_state(324);
					parsx_push_state(132);
					parsx_push_state(4);
				}break;
				case parsx_token(KUnit):{
					parsx_pop_state();
					parsx_push_state(415);
					parsx_push_state(70);
					parsx_push_state(171);
					parsx_push_state(88);
					parsx_push_state(13);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(148);
					parsx_insert_token(ORBrace);
					parsx_queue_action(53);
					parsx_queue_action(124);
				}break;
			}
		}break;
		case 334:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(81);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 335:{
			switch ( parsx_lookahead_token ){
				case parsx_token(ONE):{
					parsx_pop_state();
					parsx_push_state(314);
					parsx_push_state(130);
					parsx_push_state(395);
					parsx_push_state(26);
				}break;
				case parsx_token(OGT):{
					parsx_pop_state();
					parsx_push_state(314);
					parsx_push_state(123);
					parsx_push_state(395);
					parsx_push_state(34);
				}break;
				case parsx_token(OEQ):{
					parsx_pop_state();
					parsx_push_state(314);
					parsx_push_state(63);
					parsx_push_state(395);
					parsx_push_state(39);
				}break;
				case parsx_token(ORem):{
					parsx_pop_state();
					parsx_push_state(245);
					parsx_push_state(103);
					parsx_push_state(376);
					parsx_push_state(45);
				}break;
				case parsx_token(OLT):{
					parsx_pop_state();
					parsx_push_state(314);
					parsx_push_state(80);
					parsx_push_state(395);
					parsx_push_state(32);
				}break;
				case parsx_token(OGE):{
					parsx_pop_state();
					parsx_push_state(314);
					parsx_push_state(68);
					parsx_push_state(395);
					parsx_push_state(3);
				}break;
				case parsx_token(OMinus):{
					parsx_pop_state();
					parsx_push_state(275);
					parsx_push_state(86);
					parsx_push_state(357);
					parsx_push_state(22);
				}break;
				case parsx_token(OMult):{
					parsx_pop_state();
					parsx_push_state(245);
					parsx_push_state(142);
					parsx_push_state(376);
					parsx_push_state(21);
				}break;
				case parsx_token(OPlus):{
					parsx_pop_state();
					parsx_push_state(275);
					parsx_push_state(121);
					parsx_push_state(357);
					parsx_push_state(20);
				}break;
				case parsx_token(KOr):{
					parsx_pop_state();
					parsx_push_state(247);
					parsx_push_state(72);
					parsx_push_state(342);
					parsx_push_state(54);
				}break;
				case parsx_token(ODiv):{
					parsx_pop_state();
					parsx_push_state(245);
					parsx_push_state(57);
					parsx_push_state(376);
					parsx_push_state(24);
				}break;
				case parsx_token(OPeriod):{
					parsx_pop_state();
					parsx_push_state(335);
					parsx_push_state(238);
					parsx_push_state(25);
				}break;
				case parsx_token(OLParen):{
					parsx_pop_state();
					parsx_push_state(218);
					parsx_push_state(66);
					parsx_push_state(18);
					parsx_push_state(319);
					parsx_push_state(19);
				}break;
				case parsx_token(OLE):{
					parsx_pop_state();
					parsx_push_state(314);
					parsx_push_state(114);
					parsx_push_state(395);
					parsx_push_state(42);
				}break;
				case parsx_token(KAnd):{
					parsx_pop_state();
					parsx_push_state(314);
					parsx_push_state(141);
					parsx_push_state(269);
					parsx_push_state(1);
				}break;
				case parsx_token(OColon):{
					parsx_pop_state();
					parsx_push_state(247);
					parsx_push_state(107);
					parsx_push_state(253);
					parsx_push_state(9);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(74);
				}break;
			}
		}break;
		case 336:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OGT):{
					parsx_pop_state();
					parsx_push_state(123);
					parsx_push_state(395);
					parsx_push_state(34);
				}break;
				case parsx_token(ONE):{
					parsx_pop_state();
					parsx_push_state(130);
					parsx_push_state(395);
					parsx_push_state(26);
				}break;
				case parsx_token(OEQ):{
					parsx_pop_state();
					parsx_push_state(63);
					parsx_push_state(395);
					parsx_push_state(39);
				}break;
				case parsx_token(ODiv):{
					parsx_pop_state();
					parsx_push_state(336);
					parsx_push_state(57);
					parsx_push_state(376);
					parsx_push_state(24);
				}break;
				case parsx_token(OMult):{
					parsx_pop_state();
					parsx_push_state(336);
					parsx_push_state(142);
					parsx_push_state(376);
					parsx_push_state(21);
				}break;
				case parsx_token(OMinus):{
					parsx_pop_state();
					parsx_push_state(347);
					parsx_push_state(86);
					parsx_push_state(357);
					parsx_push_state(22);
				}break;
				case parsx_token(OPlus):{
					parsx_pop_state();
					parsx_push_state(347);
					parsx_push_state(121);
					parsx_push_state(357);
					parsx_push_state(20);
				}break;
				case parsx_token(OLT):{
					parsx_pop_state();
					parsx_push_state(80);
					parsx_push_state(395);
					parsx_push_state(32);
				}break;
				case parsx_token(OLE):{
					parsx_pop_state();
					parsx_push_state(114);
					parsx_push_state(395);
					parsx_push_state(42);
				}break;
				case parsx_token(ORem):{
					parsx_pop_state();
					parsx_push_state(336);
					parsx_push_state(103);
					parsx_push_state(376);
					parsx_push_state(45);
				}break;
				case parsx_token(OGE):{
					parsx_pop_state();
					parsx_push_state(68);
					parsx_push_state(395);
					parsx_push_state(3);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 337:{
			switch ( parsx_lookahead_token ){
				case parsx_token(Identifier):{
					parsx_pop_state();
					parsx_push_state(337);
					parsx_push_state(125);
					parsx_push_state(52);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 338:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KFloat):{
					parsx_pop_state();
					parsx_push_state(386);
					parsx_push_state(261);
					parsx_push_state(122);
					parsx_push_state(5);
				}break;
				case parsx_token(KString):{
					parsx_pop_state();
					parsx_push_state(386);
					parsx_push_state(263);
					parsx_push_state(145);
					parsx_push_state(38);
				}break;
				case parsx_token(KDouble):{
					parsx_pop_state();
					parsx_push_state(386);
					parsx_push_state(187);
					parsx_push_state(119);
					parsx_push_state(48);
				}break;
				case parsx_token(KBytes):{
					parsx_pop_state();
					parsx_push_state(386);
					parsx_push_state(444);
					parsx_push_state(87);
					parsx_push_state(49);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(349);
					parsx_push_state(56);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(18);
				}break;
				case parsx_token(KUndef):{
					parsx_pop_state();
					parsx_push_state(386);
					parsx_push_state(293);
					parsx_push_state(62);
					parsx_push_state(15);
				}break;
				case parsx_token(KBool):{
					parsx_pop_state();
					parsx_push_state(386);
					parsx_push_state(175);
					parsx_push_state(131);
					parsx_push_state(27);
				}break;
				case parsx_token(OLBrace):{
					parsx_pop_state();
					parsx_push_state(386);
					parsx_push_state(323);
					parsx_push_state(51);
				}break;
				case parsx_token(OLParen):{
					parsx_pop_state();
					parsx_push_state(386);
					parsx_push_state(338);
					parsx_push_state(19);
				}break;
				case parsx_token(Identifier):{
					parsx_pop_state();
					parsx_push_state(386);
					parsx_push_state(155);
					parsx_push_state(305);
					parsx_push_state(129);
					parsx_push_state(52);
				}break;
				case parsx_token(KInt):{
					parsx_pop_state();
					parsx_push_state(386);
					parsx_push_state(388);
					parsx_push_state(132);
					parsx_push_state(4);
				}break;
				case parsx_token(KUnit):{
					parsx_pop_state();
					parsx_push_state(386);
					parsx_push_state(309);
					parsx_push_state(88);
					parsx_push_state(13);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(KBytes);
					parsx_queue_action(49);
					parsx_queue_action(87);
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 339:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(159);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(339);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(81);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 340:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KFloat):{
					parsx_pop_state();
					parsx_push_state(261);
					parsx_push_state(122);
					parsx_push_state(5);
				}break;
				case parsx_token(KString):{
					parsx_pop_state();
					parsx_push_state(263);
					parsx_push_state(145);
					parsx_push_state(38);
				}break;
				case parsx_token(KDouble):{
					parsx_pop_state();
					parsx_push_state(187);
					parsx_push_state(119);
					parsx_push_state(48);
				}break;
				case parsx_token(KBytes):{
					parsx_pop_state();
					parsx_push_state(444);
					parsx_push_state(87);
					parsx_push_state(49);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(206);
					parsx_push_state(56);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(18);
				}break;
				case parsx_token(KUndef):{
					parsx_pop_state();
					parsx_push_state(293);
					parsx_push_state(62);
					parsx_push_state(15);
				}break;
				case parsx_token(KBool):{
					parsx_pop_state();
					parsx_push_state(175);
					parsx_push_state(131);
					parsx_push_state(27);
				}break;
				case parsx_token(OLBrace):{
					parsx_pop_state();
					parsx_push_state(323);
					parsx_push_state(51);
				}break;
				case parsx_token(OLParen):{
					parsx_pop_state();
					parsx_push_state(338);
					parsx_push_state(19);
				}break;
				case parsx_token(Identifier):{
					parsx_pop_state();
					parsx_push_state(155);
					parsx_push_state(305);
					parsx_push_state(129);
					parsx_push_state(52);
				}break;
				case parsx_token(KInt):{
					parsx_pop_state();
					parsx_push_state(388);
					parsx_push_state(132);
					parsx_push_state(4);
				}break;
				case parsx_token(KUnit):{
					parsx_pop_state();
					parsx_push_state(309);
					parsx_push_state(88);
					parsx_push_state(13);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(KBytes);
					parsx_queue_action(49);
					parsx_queue_action(87);
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 341:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KGlobal):{
					parsx_pop_state();
					parsx_queue_action(65);
					parsx_push_state(267);
					parsx_push_state(73);
					parsx_push_state(128);
					parsx_push_state(143);
					parsx_push_state(115);
					parsx_push_state(77);
					parsx_push_state(365);
					parsx_push_state(31);
					parsx_push_state(111);
					parsx_push_state(61);
					parsx_push_state(253);
					parsx_push_state(9);
					parsx_push_state(337);
					parsx_push_state(60);
					parsx_push_state(52);
					parsx_push_state(37);
				}break;
				case parsx_token(KFunction):{
					parsx_pop_state();
					parsx_queue_action(65);
					parsx_push_state(267);
					parsx_push_state(73);
					parsx_push_state(105);
					parsx_push_state(110);
					parsx_push_state(115);
					parsx_push_state(232);
					parsx_push_state(111);
					parsx_push_state(146);
					parsx_push_state(220);
					parsx_push_state(18);
					parsx_push_state(403);
					parsx_push_state(19);
					parsx_push_state(52);
					parsx_push_state(35);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(65);
				}break;
			}
		}break;
		case 342:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KNot):{
					parsx_pop_state();
					parsx_push_state(193);
					parsx_push_state(120);
					parsx_push_state(269);
					parsx_push_state(7);
				}break;
				case parsx_token(Identifier):{
					parsx_pop_state();
					parsx_push_state(193);
					parsx_push_state(85);
					parsx_push_state(52);
				}break;
				case parsx_token(KTrue):{
					parsx_pop_state();
					parsx_push_state(193);
					parsx_push_state(127);
					parsx_push_state(46);
				}break;
				case parsx_token(OMinus):{
					parsx_pop_state();
					parsx_push_state(193);
					parsx_push_state(99);
					parsx_push_state(217);
					parsx_push_state(22);
				}break;
				case parsx_token(KNull):{
					parsx_pop_state();
					parsx_push_state(193);
					parsx_push_state(116);
					parsx_push_state(11);
				}break;
				case parsx_token(NumberLiteral):{
					parsx_pop_state();
					parsx_push_state(193);
					parsx_push_state(55);
					parsx_push_state(6);
				}break;
				case parsx_token(KIf):{
					parsx_pop_state();
					parsx_push_state(193);
					parsx_push_state(104);
					parsx_push_state(211);
					parsx_push_state(365);
					parsx_push_state(36);
					parsx_push_state(365);
					parsx_push_state(14);
				}break;
				case parsx_token(OLParen):{
					parsx_pop_state();
					parsx_push_state(193);
					parsx_push_state(147);
					parsx_push_state(18);
					parsx_push_state(365);
					parsx_push_state(19);
				}break;
				case parsx_token(KFalse):{
					parsx_pop_state();
					parsx_push_state(193);
					parsx_push_state(96);
					parsx_push_state(2);
				}break;
				case parsx_token(StringLiteral):{
					parsx_pop_state();
					parsx_push_state(193);
					parsx_push_state(82);
					parsx_push_state(12);
				}break;
				case parsx_token(KUnit):{
					parsx_pop_state();
					parsx_push_state(193);
					parsx_push_state(112);
					parsx_push_state(13);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(102);
				}break;
			}
		}break;
		case 343:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OGT):{
					parsx_pop_state();
					parsx_push_state(163);
					parsx_push_state(123);
					parsx_push_state(395);
					parsx_push_state(34);
				}break;
				case parsx_token(ONE):{
					parsx_pop_state();
					parsx_push_state(163);
					parsx_push_state(130);
					parsx_push_state(395);
					parsx_push_state(26);
				}break;
				case parsx_token(OEQ):{
					parsx_pop_state();
					parsx_push_state(163);
					parsx_push_state(63);
					parsx_push_state(395);
					parsx_push_state(39);
				}break;
				case parsx_token(OLT):{
					parsx_pop_state();
					parsx_push_state(163);
					parsx_push_state(80);
					parsx_push_state(395);
					parsx_push_state(32);
				}break;
				case parsx_token(OGE):{
					parsx_pop_state();
					parsx_push_state(163);
					parsx_push_state(68);
					parsx_push_state(395);
					parsx_push_state(3);
				}break;
				case parsx_token(OMinus):{
					parsx_pop_state();
					parsx_push_state(277);
					parsx_push_state(86);
					parsx_push_state(357);
					parsx_push_state(22);
				}break;
				case parsx_token(OMult):{
					parsx_pop_state();
					parsx_push_state(228);
					parsx_push_state(142);
					parsx_push_state(376);
					parsx_push_state(21);
				}break;
				case parsx_token(OPlus):{
					parsx_pop_state();
					parsx_push_state(277);
					parsx_push_state(121);
					parsx_push_state(357);
					parsx_push_state(20);
				}break;
				case parsx_token(KOr):{
					parsx_pop_state();
					parsx_push_state(424);
					parsx_push_state(72);
					parsx_push_state(342);
					parsx_push_state(54);
				}break;
				case parsx_token(ODiv):{
					parsx_pop_state();
					parsx_push_state(228);
					parsx_push_state(57);
					parsx_push_state(376);
					parsx_push_state(24);
				}break;
				case parsx_token(OPeriod):{
					parsx_pop_state();
					parsx_push_state(343);
					parsx_push_state(238);
					parsx_push_state(25);
				}break;
				case parsx_token(OLE):{
					parsx_pop_state();
					parsx_push_state(163);
					parsx_push_state(114);
					parsx_push_state(395);
					parsx_push_state(42);
				}break;
				case parsx_token(OLParen):{
					parsx_pop_state();
					parsx_push_state(393);
					parsx_push_state(66);
					parsx_push_state(18);
					parsx_push_state(319);
					parsx_push_state(19);
				}break;
				case parsx_token(ORem):{
					parsx_pop_state();
					parsx_push_state(228);
					parsx_push_state(103);
					parsx_push_state(376);
					parsx_push_state(45);
				}break;
				case parsx_token(KAnd):{
					parsx_pop_state();
					parsx_push_state(163);
					parsx_push_state(141);
					parsx_push_state(269);
					parsx_push_state(1);
				}break;
				case parsx_token(OColon):{
					parsx_pop_state();
					parsx_push_state(424);
					parsx_push_state(107);
					parsx_push_state(253);
					parsx_push_state(9);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(84);
				}break;
			}
		}break;
		case 344:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(361);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(437);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(330);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(300);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 345:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(206);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(331);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(192);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 346:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(169);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(346);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(81);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 347:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OGT):{
					parsx_pop_state();
					parsx_push_state(123);
					parsx_push_state(395);
					parsx_push_state(34);
				}break;
				case parsx_token(ONE):{
					parsx_pop_state();
					parsx_push_state(130);
					parsx_push_state(395);
					parsx_push_state(26);
				}break;
				case parsx_token(OEQ):{
					parsx_pop_state();
					parsx_push_state(63);
					parsx_push_state(395);
					parsx_push_state(39);
				}break;
				case parsx_token(OLT):{
					parsx_pop_state();
					parsx_push_state(80);
					parsx_push_state(395);
					parsx_push_state(32);
				}break;
				case parsx_token(OMinus):{
					parsx_pop_state();
					parsx_push_state(347);
					parsx_push_state(86);
					parsx_push_state(357);
					parsx_push_state(22);
				}break;
				case parsx_token(OPlus):{
					parsx_pop_state();
					parsx_push_state(347);
					parsx_push_state(121);
					parsx_push_state(357);
					parsx_push_state(20);
				}break;
				case parsx_token(OLE):{
					parsx_pop_state();
					parsx_push_state(114);
					parsx_push_state(395);
					parsx_push_state(42);
				}break;
				case parsx_token(OGE):{
					parsx_pop_state();
					parsx_push_state(68);
					parsx_push_state(395);
					parsx_push_state(3);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 348:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KGlobal):{
					parsx_pop_state();
					parsx_queue_action(65);
					parsx_push_state(267);
					parsx_push_state(73);
					parsx_push_state(128);
					parsx_push_state(143);
					parsx_push_state(115);
					parsx_push_state(77);
					parsx_push_state(365);
					parsx_push_state(31);
					parsx_push_state(111);
					parsx_push_state(61);
					parsx_push_state(253);
					parsx_push_state(9);
					parsx_push_state(337);
					parsx_push_state(60);
					parsx_push_state(52);
					parsx_push_state(37);
				}break;
				case parsx_token(KFunction):{
					parsx_pop_state();
					parsx_queue_action(65);
					parsx_push_state(267);
					parsx_push_state(73);
					parsx_push_state(105);
					parsx_push_state(110);
					parsx_push_state(115);
					parsx_push_state(232);
					parsx_push_state(111);
					parsx_push_state(146);
					parsx_push_state(220);
					parsx_push_state(18);
					parsx_push_state(403);
					parsx_push_state(19);
					parsx_push_state(52);
					parsx_push_state(35);
				}break;
				case parsx_token(KImport):{
					parsx_pop_state();
					parsx_queue_action(58);
					parsx_push_state(348);
					parsx_push_state(78);
					parsx_push_state(76);
					parsx_push_state(329);
					parsx_push_state(270);
					parsx_push_state(100);
					parsx_push_state(52);
					parsx_push_state(29);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(65);
				}break;
			}
		}break;
		case 349:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(206);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(386);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(192);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 350:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(180);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(190);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(425);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 351:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(180);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(425);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 352:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_queue_action(126);
					parsx_push_state(421);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_queue_action(126);
					parsx_push_state(422);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_queue_action(126);
					parsx_push_state(81);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OPeriod):{
					parsx_pop_state();
					parsx_push_state(273);
					parsx_push_state(381);
					parsx_push_state(25);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(126);
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 353:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KFloat):{
					parsx_pop_state();
					parsx_push_state(300);
					parsx_push_state(122);
					parsx_push_state(5);
				}break;
				case parsx_token(KString):{
					parsx_pop_state();
					parsx_push_state(300);
					parsx_push_state(145);
					parsx_push_state(38);
				}break;
				case parsx_token(KUnit):{
					parsx_pop_state();
					parsx_push_state(300);
					parsx_push_state(88);
					parsx_push_state(13);
				}break;
				case parsx_token(KBytes):{
					parsx_pop_state();
					parsx_push_state(300);
					parsx_push_state(87);
					parsx_push_state(49);
				}break;
				case parsx_token(Identifier):{
					parsx_pop_state();
					parsx_push_state(300);
					parsx_push_state(156);
					parsx_push_state(129);
					parsx_push_state(52);
				}break;
				case parsx_token(KUndef):{
					parsx_pop_state();
					parsx_push_state(300);
					parsx_push_state(62);
					parsx_push_state(15);
				}break;
				case parsx_token(KBool):{
					parsx_pop_state();
					parsx_push_state(300);
					parsx_push_state(131);
					parsx_push_state(27);
				}break;
				case parsx_token(OLBrace):{
					parsx_pop_state();
					parsx_push_state(300);
					parsx_push_state(124);
					parsx_push_state(53);
					parsx_push_state(170);
					parsx_push_state(51);
				}break;
				case parsx_token(OLParen):{
					parsx_pop_state();
					parsx_push_state(198);
					parsx_push_state(19);
				}break;
				case parsx_token(KInt):{
					parsx_pop_state();
					parsx_push_state(300);
					parsx_push_state(132);
					parsx_push_state(4);
				}break;
				case parsx_token(KDouble):{
					parsx_pop_state();
					parsx_push_state(300);
					parsx_push_state(119);
					parsx_push_state(48);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(97);
				}break;
			}
		}break;
		case 354:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 355:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(355);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(279);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 356:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OGT):{
					parsx_pop_state();
					parsx_push_state(407);
					parsx_push_state(123);
					parsx_push_state(395);
					parsx_push_state(34);
				}break;
				case parsx_token(ONE):{
					parsx_pop_state();
					parsx_push_state(407);
					parsx_push_state(130);
					parsx_push_state(395);
					parsx_push_state(26);
				}break;
				case parsx_token(OEQ):{
					parsx_pop_state();
					parsx_push_state(407);
					parsx_push_state(63);
					parsx_push_state(395);
					parsx_push_state(39);
				}break;
				case parsx_token(OLT):{
					parsx_pop_state();
					parsx_push_state(407);
					parsx_push_state(80);
					parsx_push_state(395);
					parsx_push_state(32);
				}break;
				case parsx_token(OGE):{
					parsx_pop_state();
					parsx_push_state(407);
					parsx_push_state(68);
					parsx_push_state(395);
					parsx_push_state(3);
				}break;
				case parsx_token(OMinus):{
					parsx_pop_state();
					parsx_push_state(301);
					parsx_push_state(86);
					parsx_push_state(357);
					parsx_push_state(22);
				}break;
				case parsx_token(OMult):{
					parsx_pop_state();
					parsx_push_state(423);
					parsx_push_state(142);
					parsx_push_state(376);
					parsx_push_state(21);
				}break;
				case parsx_token(OPlus):{
					parsx_pop_state();
					parsx_push_state(301);
					parsx_push_state(121);
					parsx_push_state(357);
					parsx_push_state(20);
				}break;
				case parsx_token(KOr):{
					parsx_pop_state();
					parsx_push_state(366);
					parsx_push_state(72);
					parsx_push_state(342);
					parsx_push_state(54);
				}break;
				case parsx_token(ODiv):{
					parsx_pop_state();
					parsx_push_state(423);
					parsx_push_state(57);
					parsx_push_state(376);
					parsx_push_state(24);
				}break;
				case parsx_token(OPeriod):{
					parsx_pop_state();
					parsx_push_state(356);
					parsx_push_state(238);
					parsx_push_state(25);
				}break;
				case parsx_token(OLE):{
					parsx_pop_state();
					parsx_push_state(407);
					parsx_push_state(114);
					parsx_push_state(395);
					parsx_push_state(42);
				}break;
				case parsx_token(OLParen):{
					parsx_pop_state();
					parsx_push_state(391);
					parsx_push_state(66);
					parsx_push_state(18);
					parsx_push_state(319);
					parsx_push_state(19);
				}break;
				case parsx_token(ORem):{
					parsx_pop_state();
					parsx_push_state(423);
					parsx_push_state(103);
					parsx_push_state(376);
					parsx_push_state(45);
				}break;
				case parsx_token(KAnd):{
					parsx_pop_state();
					parsx_push_state(407);
					parsx_push_state(141);
					parsx_push_state(269);
					parsx_push_state(1);
				}break;
				case parsx_token(OColon):{
					parsx_pop_state();
					parsx_push_state(366);
					parsx_push_state(107);
					parsx_push_state(253);
					parsx_push_state(9);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 357:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KNot):{
					parsx_pop_state();
					parsx_push_state(262);
					parsx_push_state(120);
					parsx_push_state(269);
					parsx_push_state(7);
				}break;
				case parsx_token(KFalse):{
					parsx_pop_state();
					parsx_push_state(262);
					parsx_push_state(96);
					parsx_push_state(2);
				}break;
				case parsx_token(KTrue):{
					parsx_pop_state();
					parsx_push_state(262);
					parsx_push_state(127);
					parsx_push_state(46);
				}break;
				case parsx_token(OMinus):{
					parsx_pop_state();
					parsx_push_state(262);
					parsx_push_state(99);
					parsx_push_state(217);
					parsx_push_state(22);
				}break;
				case parsx_token(KNull):{
					parsx_pop_state();
					parsx_push_state(262);
					parsx_push_state(116);
					parsx_push_state(11);
				}break;
				case parsx_token(Identifier):{
					parsx_pop_state();
					parsx_push_state(262);
					parsx_push_state(85);
					parsx_push_state(52);
				}break;
				case parsx_token(NumberLiteral):{
					parsx_pop_state();
					parsx_push_state(262);
					parsx_push_state(55);
					parsx_push_state(6);
				}break;
				case parsx_token(KIf):{
					parsx_pop_state();
					parsx_push_state(262);
					parsx_push_state(104);
					parsx_push_state(211);
					parsx_push_state(365);
					parsx_push_state(36);
					parsx_push_state(365);
					parsx_push_state(14);
				}break;
				case parsx_token(OLParen):{
					parsx_pop_state();
					parsx_push_state(262);
					parsx_push_state(147);
					parsx_push_state(18);
					parsx_push_state(365);
					parsx_push_state(19);
				}break;
				case parsx_token(KUnit):{
					parsx_pop_state();
					parsx_push_state(262);
					parsx_push_state(112);
					parsx_push_state(13);
				}break;
				case parsx_token(StringLiteral):{
					parsx_pop_state();
					parsx_push_state(262);
					parsx_push_state(82);
					parsx_push_state(12);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(102);
				}break;
			}
		}break;
		case 358:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(358);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(254);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 359:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(250);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(183);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(369);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(180);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(425);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 360:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(81);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 361:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(361);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(437);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(330);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(300);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 362:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(180);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(425);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 363:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(206);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(192);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 364:{
			switch ( parsx_lookahead_token ){
				case parsx_token(ONE):{
					parsx_pop_state();
					parsx_push_state(234);
					parsx_push_state(130);
					parsx_push_state(395);
					parsx_push_state(26);
				}break;
				case parsx_token(OGT):{
					parsx_pop_state();
					parsx_push_state(234);
					parsx_push_state(123);
					parsx_push_state(395);
					parsx_push_state(34);
				}break;
				case parsx_token(OEQ):{
					parsx_pop_state();
					parsx_push_state(234);
					parsx_push_state(63);
					parsx_push_state(395);
					parsx_push_state(39);
				}break;
				case parsx_token(ORem):{
					parsx_pop_state();
					parsx_push_state(312);
					parsx_push_state(103);
					parsx_push_state(376);
					parsx_push_state(45);
				}break;
				case parsx_token(KOr):{
					parsx_pop_state();
					parsx_push_state(268);
					parsx_push_state(72);
					parsx_push_state(342);
					parsx_push_state(54);
				}break;
				case parsx_token(OGE):{
					parsx_pop_state();
					parsx_push_state(234);
					parsx_push_state(68);
					parsx_push_state(395);
					parsx_push_state(3);
				}break;
				case parsx_token(OMinus):{
					parsx_pop_state();
					parsx_push_state(401);
					parsx_push_state(86);
					parsx_push_state(357);
					parsx_push_state(22);
				}break;
				case parsx_token(OMult):{
					parsx_pop_state();
					parsx_push_state(312);
					parsx_push_state(142);
					parsx_push_state(376);
					parsx_push_state(21);
				}break;
				case parsx_token(OLT):{
					parsx_pop_state();
					parsx_push_state(234);
					parsx_push_state(80);
					parsx_push_state(395);
					parsx_push_state(32);
				}break;
				case parsx_token(OPlus):{
					parsx_pop_state();
					parsx_push_state(401);
					parsx_push_state(121);
					parsx_push_state(357);
					parsx_push_state(20);
				}break;
				case parsx_token(ODiv):{
					parsx_pop_state();
					parsx_push_state(312);
					parsx_push_state(57);
					parsx_push_state(376);
					parsx_push_state(24);
				}break;
				case parsx_token(OLE):{
					parsx_pop_state();
					parsx_push_state(234);
					parsx_push_state(114);
					parsx_push_state(395);
					parsx_push_state(42);
				}break;
				case parsx_token(OLParen):{
					parsx_pop_state();
					parsx_push_state(364);
					parsx_push_state(66);
					parsx_push_state(18);
					parsx_push_state(319);
					parsx_push_state(19);
				}break;
				case parsx_token(KAnd):{
					parsx_pop_state();
					parsx_push_state(234);
					parsx_push_state(141);
					parsx_push_state(269);
					parsx_push_state(1);
				}break;
				case parsx_token(OColon):{
					parsx_pop_state();
					parsx_push_state(268);
					parsx_push_state(107);
					parsx_push_state(253);
					parsx_push_state(9);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(84);
				}break;
			}
		}break;
		case 365:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KNot):{
					parsx_pop_state();
					parsx_push_state(356);
					parsx_push_state(120);
					parsx_push_state(269);
					parsx_push_state(7);
				}break;
				case parsx_token(Identifier):{
					parsx_pop_state();
					parsx_push_state(356);
					parsx_push_state(85);
					parsx_push_state(52);
				}break;
				case parsx_token(KTrue):{
					parsx_pop_state();
					parsx_push_state(356);
					parsx_push_state(127);
					parsx_push_state(46);
				}break;
				case parsx_token(OMinus):{
					parsx_pop_state();
					parsx_push_state(356);
					parsx_push_state(99);
					parsx_push_state(217);
					parsx_push_state(22);
				}break;
				case parsx_token(KNull):{
					parsx_pop_state();
					parsx_push_state(356);
					parsx_push_state(116);
					parsx_push_state(11);
				}break;
				case parsx_token(NumberLiteral):{
					parsx_pop_state();
					parsx_push_state(356);
					parsx_push_state(55);
					parsx_push_state(6);
				}break;
				case parsx_token(KUnit):{
					parsx_pop_state();
					parsx_push_state(356);
					parsx_push_state(112);
					parsx_push_state(13);
				}break;
				case parsx_token(KIf):{
					parsx_pop_state();
					parsx_push_state(356);
					parsx_push_state(104);
					parsx_push_state(211);
					parsx_push_state(365);
					parsx_push_state(36);
					parsx_push_state(365);
					parsx_push_state(14);
				}break;
				case parsx_token(OLParen):{
					parsx_pop_state();
					parsx_push_state(356);
					parsx_push_state(147);
					parsx_push_state(18);
					parsx_push_state(365);
					parsx_push_state(19);
				}break;
				case parsx_token(KFalse):{
					parsx_pop_state();
					parsx_push_state(356);
					parsx_push_state(96);
					parsx_push_state(2);
				}break;
				case parsx_token(StringLiteral):{
					parsx_pop_state();
					parsx_push_state(356);
					parsx_push_state(82);
					parsx_push_state(12);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(102);
				}break;
			}
		}break;
		case 366:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KOr):{
					parsx_pop_state();
					parsx_push_state(366);
					parsx_push_state(72);
					parsx_push_state(342);
					parsx_push_state(54);
				}break;
				case parsx_token(OColon):{
					parsx_pop_state();
					parsx_push_state(366);
					parsx_push_state(107);
					parsx_push_state(253);
					parsx_push_state(9);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 367:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KUnit):{
					parsx_pop_state();
					parsx_push_state(112);
					parsx_push_state(13);
				}break;
				case parsx_token(KTrue):{
					parsx_pop_state();
					parsx_push_state(127);
					parsx_push_state(46);
				}break;
				case parsx_token(KNull):{
					parsx_pop_state();
					parsx_push_state(116);
					parsx_push_state(11);
				}break;
				case parsx_token(Identifier):{
					parsx_pop_state();
					parsx_push_state(85);
					parsx_push_state(52);
				}break;
				case parsx_token(NumberLiteral):{
					parsx_pop_state();
					parsx_push_state(55);
					parsx_push_state(6);
				}break;
				case parsx_token(KFalse):{
					parsx_pop_state();
					parsx_push_state(96);
					parsx_push_state(2);
				}break;
				case parsx_token(StringLiteral):{
					parsx_pop_state();
					parsx_push_state(82);
					parsx_push_state(12);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(KUnit);
					parsx_queue_action(13);
					parsx_queue_action(112);
				}break;
			}
		}break;
		case 368:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(281);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(178);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(438);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(180);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(425);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 369:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(180);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(425);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 370:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(370);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(81);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(186);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 371:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OPlus):{
					parsx_pop_state();
					parsx_push_state(371);
					parsx_push_state(121);
					parsx_push_state(357);
					parsx_push_state(20);
				}break;
				case parsx_token(OMinus):{
					parsx_pop_state();
					parsx_push_state(371);
					parsx_push_state(86);
					parsx_push_state(357);
					parsx_push_state(22);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 372:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 373:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(197);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(300);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 374:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(206);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(192);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 375:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(375);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(81);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(225);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 376:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KNot):{
					parsx_pop_state();
					parsx_push_state(399);
					parsx_push_state(120);
					parsx_push_state(269);
					parsx_push_state(7);
				}break;
				case parsx_token(Identifier):{
					parsx_pop_state();
					parsx_push_state(399);
					parsx_push_state(85);
					parsx_push_state(52);
				}break;
				case parsx_token(KTrue):{
					parsx_pop_state();
					parsx_push_state(399);
					parsx_push_state(127);
					parsx_push_state(46);
				}break;
				case parsx_token(OMinus):{
					parsx_pop_state();
					parsx_push_state(399);
					parsx_push_state(99);
					parsx_push_state(217);
					parsx_push_state(22);
				}break;
				case parsx_token(KNull):{
					parsx_pop_state();
					parsx_push_state(399);
					parsx_push_state(116);
					parsx_push_state(11);
				}break;
				case parsx_token(NumberLiteral):{
					parsx_pop_state();
					parsx_push_state(399);
					parsx_push_state(55);
					parsx_push_state(6);
				}break;
				case parsx_token(KIf):{
					parsx_pop_state();
					parsx_push_state(399);
					parsx_push_state(104);
					parsx_push_state(211);
					parsx_push_state(365);
					parsx_push_state(36);
					parsx_push_state(365);
					parsx_push_state(14);
				}break;
				case parsx_token(OLParen):{
					parsx_pop_state();
					parsx_push_state(399);
					parsx_push_state(147);
					parsx_push_state(18);
					parsx_push_state(365);
					parsx_push_state(19);
				}break;
				case parsx_token(KFalse):{
					parsx_pop_state();
					parsx_push_state(399);
					parsx_push_state(96);
					parsx_push_state(2);
				}break;
				case parsx_token(StringLiteral):{
					parsx_pop_state();
					parsx_push_state(399);
					parsx_push_state(82);
					parsx_push_state(12);
				}break;
				case parsx_token(KUnit):{
					parsx_pop_state();
					parsx_push_state(399);
					parsx_push_state(112);
					parsx_push_state(13);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(102);
				}break;
			}
		}break;
		case 377:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(377);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(303);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(206);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(173);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(192);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 378:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 379:{
			switch ( parsx_lookahead_token ){
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_insert_token(OLParen);
					parsx_queue_action(19);
					parsx_queue_action(150);
					parsx_push_state(146);
					parsx_push_state(220);
					parsx_push_state(18);
				}break;
				case parsx_token(OLParen):{
					parsx_pop_state();
					parsx_push_state(146);
					parsx_push_state(220);
					parsx_push_state(18);
					parsx_push_state(403);
					parsx_push_state(19);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(OLParen);
					parsx_queue_action(19);
					parsx_queue_action(150);
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(113);
					parsx_queue_action(146);
				}break;
			}
		}break;
		case 380:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(412);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(214);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(394);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(300);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 381:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OLT):{
					parsx_pop_state();
					parsx_push_state(117);
					parsx_push_state(34);
					parsx_push_state(170);
					parsx_push_state(32);
				}break;
				case parsx_token(ONE):{
					parsx_pop_state();
					parsx_push_state(101);
					parsx_push_state(26);
				}break;
				case parsx_token(Identifier):{
					parsx_pop_state();
					parsx_push_state(92);
					parsx_push_state(52);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(Identifier);
					parsx_queue_action(52);
					parsx_queue_action(92);
				}break;
			}
		}break;
		case 382:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(392);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(274);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(81);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 383:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(159);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(339);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(81);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 384:{
			switch ( parsx_lookahead_token ){
				case parsx_token(ONE):{
					parsx_pop_state();
					parsx_push_state(130);
					parsx_push_state(395);
					parsx_push_state(26);
				}break;
				case parsx_token(OGT):{
					parsx_pop_state();
					parsx_push_state(123);
					parsx_push_state(395);
					parsx_push_state(34);
				}break;
				case parsx_token(OEQ):{
					parsx_pop_state();
					parsx_push_state(63);
					parsx_push_state(395);
					parsx_push_state(39);
				}break;
				case parsx_token(ODiv):{
					parsx_pop_state();
					parsx_push_state(336);
					parsx_push_state(57);
					parsx_push_state(376);
					parsx_push_state(24);
				}break;
				case parsx_token(OMult):{
					parsx_pop_state();
					parsx_push_state(336);
					parsx_push_state(142);
					parsx_push_state(376);
					parsx_push_state(21);
				}break;
				case parsx_token(OMinus):{
					parsx_pop_state();
					parsx_push_state(347);
					parsx_push_state(86);
					parsx_push_state(357);
					parsx_push_state(22);
				}break;
				case parsx_token(OPlus):{
					parsx_pop_state();
					parsx_push_state(347);
					parsx_push_state(121);
					parsx_push_state(357);
					parsx_push_state(20);
				}break;
				case parsx_token(OLT):{
					parsx_pop_state();
					parsx_push_state(80);
					parsx_push_state(395);
					parsx_push_state(32);
				}break;
				case parsx_token(OLE):{
					parsx_pop_state();
					parsx_push_state(114);
					parsx_push_state(395);
					parsx_push_state(42);
				}break;
				case parsx_token(OLParen):{
					parsx_pop_state();
					parsx_push_state(384);
					parsx_push_state(66);
					parsx_push_state(18);
					parsx_push_state(319);
					parsx_push_state(19);
				}break;
				case parsx_token(ORem):{
					parsx_pop_state();
					parsx_push_state(336);
					parsx_push_state(103);
					parsx_push_state(376);
					parsx_push_state(45);
				}break;
				case parsx_token(OGE):{
					parsx_pop_state();
					parsx_push_state(68);
					parsx_push_state(395);
					parsx_push_state(3);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 385:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(385);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(243);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 386:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(206);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(192);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 387:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(195);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(176);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(177);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(300);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 388:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(442);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(181);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(400);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(206);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(192);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 389:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(389);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(288);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 390:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OLT):{
					parsx_pop_state();
					parsx_push_state(83);
					parsx_push_state(34);
					parsx_push_state(170);
					parsx_push_state(32);
				}break;
				case parsx_token(Identifier):{
					parsx_pop_state();
					parsx_push_state(93);
					parsx_push_state(52);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(Identifier);
					parsx_queue_action(52);
					parsx_queue_action(93);
				}break;
			}
		}break;
		case 391:{
			switch ( parsx_lookahead_token ){
				case parsx_token(ONE):{
					parsx_pop_state();
					parsx_push_state(407);
					parsx_push_state(130);
					parsx_push_state(395);
					parsx_push_state(26);
				}break;
				case parsx_token(OGT):{
					parsx_pop_state();
					parsx_push_state(407);
					parsx_push_state(123);
					parsx_push_state(395);
					parsx_push_state(34);
				}break;
				case parsx_token(OEQ):{
					parsx_pop_state();
					parsx_push_state(407);
					parsx_push_state(63);
					parsx_push_state(395);
					parsx_push_state(39);
				}break;
				case parsx_token(ORem):{
					parsx_pop_state();
					parsx_push_state(423);
					parsx_push_state(103);
					parsx_push_state(376);
					parsx_push_state(45);
				}break;
				case parsx_token(KOr):{
					parsx_pop_state();
					parsx_push_state(366);
					parsx_push_state(72);
					parsx_push_state(342);
					parsx_push_state(54);
				}break;
				case parsx_token(OGE):{
					parsx_pop_state();
					parsx_push_state(407);
					parsx_push_state(68);
					parsx_push_state(395);
					parsx_push_state(3);
				}break;
				case parsx_token(OMinus):{
					parsx_pop_state();
					parsx_push_state(301);
					parsx_push_state(86);
					parsx_push_state(357);
					parsx_push_state(22);
				}break;
				case parsx_token(OMult):{
					parsx_pop_state();
					parsx_push_state(423);
					parsx_push_state(142);
					parsx_push_state(376);
					parsx_push_state(21);
				}break;
				case parsx_token(OLT):{
					parsx_pop_state();
					parsx_push_state(407);
					parsx_push_state(80);
					parsx_push_state(395);
					parsx_push_state(32);
				}break;
				case parsx_token(OPlus):{
					parsx_pop_state();
					parsx_push_state(301);
					parsx_push_state(121);
					parsx_push_state(357);
					parsx_push_state(20);
				}break;
				case parsx_token(ODiv):{
					parsx_pop_state();
					parsx_push_state(423);
					parsx_push_state(57);
					parsx_push_state(376);
					parsx_push_state(24);
				}break;
				case parsx_token(OLE):{
					parsx_pop_state();
					parsx_push_state(407);
					parsx_push_state(114);
					parsx_push_state(395);
					parsx_push_state(42);
				}break;
				case parsx_token(OLParen):{
					parsx_pop_state();
					parsx_push_state(391);
					parsx_push_state(66);
					parsx_push_state(18);
					parsx_push_state(319);
					parsx_push_state(19);
				}break;
				case parsx_token(KAnd):{
					parsx_pop_state();
					parsx_push_state(407);
					parsx_push_state(141);
					parsx_push_state(269);
					parsx_push_state(1);
				}break;
				case parsx_token(OColon):{
					parsx_pop_state();
					parsx_push_state(366);
					parsx_push_state(107);
					parsx_push_state(253);
					parsx_push_state(9);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 392:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(81);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 393:{
			switch ( parsx_lookahead_token ){
				case parsx_token(ONE):{
					parsx_pop_state();
					parsx_push_state(163);
					parsx_push_state(130);
					parsx_push_state(395);
					parsx_push_state(26);
				}break;
				case parsx_token(OGT):{
					parsx_pop_state();
					parsx_push_state(163);
					parsx_push_state(123);
					parsx_push_state(395);
					parsx_push_state(34);
				}break;
				case parsx_token(OEQ):{
					parsx_pop_state();
					parsx_push_state(163);
					parsx_push_state(63);
					parsx_push_state(395);
					parsx_push_state(39);
				}break;
				case parsx_token(ORem):{
					parsx_pop_state();
					parsx_push_state(228);
					parsx_push_state(103);
					parsx_push_state(376);
					parsx_push_state(45);
				}break;
				case parsx_token(KOr):{
					parsx_pop_state();
					parsx_push_state(424);
					parsx_push_state(72);
					parsx_push_state(342);
					parsx_push_state(54);
				}break;
				case parsx_token(OGE):{
					parsx_pop_state();
					parsx_push_state(163);
					parsx_push_state(68);
					parsx_push_state(395);
					parsx_push_state(3);
				}break;
				case parsx_token(OMinus):{
					parsx_pop_state();
					parsx_push_state(277);
					parsx_push_state(86);
					parsx_push_state(357);
					parsx_push_state(22);
				}break;
				case parsx_token(OMult):{
					parsx_pop_state();
					parsx_push_state(228);
					parsx_push_state(142);
					parsx_push_state(376);
					parsx_push_state(21);
				}break;
				case parsx_token(OLT):{
					parsx_pop_state();
					parsx_push_state(163);
					parsx_push_state(80);
					parsx_push_state(395);
					parsx_push_state(32);
				}break;
				case parsx_token(OPlus):{
					parsx_pop_state();
					parsx_push_state(277);
					parsx_push_state(121);
					parsx_push_state(357);
					parsx_push_state(20);
				}break;
				case parsx_token(ODiv):{
					parsx_pop_state();
					parsx_push_state(228);
					parsx_push_state(57);
					parsx_push_state(376);
					parsx_push_state(24);
				}break;
				case parsx_token(OLE):{
					parsx_pop_state();
					parsx_push_state(163);
					parsx_push_state(114);
					parsx_push_state(395);
					parsx_push_state(42);
				}break;
				case parsx_token(OLParen):{
					parsx_pop_state();
					parsx_push_state(393);
					parsx_push_state(66);
					parsx_push_state(18);
					parsx_push_state(319);
					parsx_push_state(19);
				}break;
				case parsx_token(KAnd):{
					parsx_pop_state();
					parsx_push_state(163);
					parsx_push_state(141);
					parsx_push_state(269);
					parsx_push_state(1);
				}break;
				case parsx_token(OColon):{
					parsx_pop_state();
					parsx_push_state(424);
					parsx_push_state(107);
					parsx_push_state(253);
					parsx_push_state(9);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(84);
				}break;
			}
		}break;
		case 394:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(214);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(300);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 395:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KNot):{
					parsx_pop_state();
					parsx_push_state(210);
					parsx_push_state(120);
					parsx_push_state(269);
					parsx_push_state(7);
				}break;
				case parsx_token(Identifier):{
					parsx_pop_state();
					parsx_push_state(210);
					parsx_push_state(85);
					parsx_push_state(52);
				}break;
				case parsx_token(KTrue):{
					parsx_pop_state();
					parsx_push_state(210);
					parsx_push_state(127);
					parsx_push_state(46);
				}break;
				case parsx_token(OMinus):{
					parsx_pop_state();
					parsx_push_state(210);
					parsx_push_state(99);
					parsx_push_state(217);
					parsx_push_state(22);
				}break;
				case parsx_token(KNull):{
					parsx_pop_state();
					parsx_push_state(210);
					parsx_push_state(116);
					parsx_push_state(11);
				}break;
				case parsx_token(NumberLiteral):{
					parsx_pop_state();
					parsx_push_state(210);
					parsx_push_state(55);
					parsx_push_state(6);
				}break;
				case parsx_token(KIf):{
					parsx_pop_state();
					parsx_push_state(210);
					parsx_push_state(104);
					parsx_push_state(211);
					parsx_push_state(365);
					parsx_push_state(36);
					parsx_push_state(365);
					parsx_push_state(14);
				}break;
				case parsx_token(OLParen):{
					parsx_pop_state();
					parsx_push_state(210);
					parsx_push_state(147);
					parsx_push_state(18);
					parsx_push_state(365);
					parsx_push_state(19);
				}break;
				case parsx_token(KFalse):{
					parsx_pop_state();
					parsx_push_state(210);
					parsx_push_state(96);
					parsx_push_state(2);
				}break;
				case parsx_token(StringLiteral):{
					parsx_pop_state();
					parsx_push_state(210);
					parsx_push_state(82);
					parsx_push_state(12);
				}break;
				case parsx_token(KUnit):{
					parsx_pop_state();
					parsx_push_state(210);
					parsx_push_state(112);
					parsx_push_state(13);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(102);
				}break;
			}
		}break;
		case 396:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(396);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(363);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(206);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(251);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(192);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 397:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(397);
					parsx_push_state(59);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 398:{
			switch ( parsx_lookahead_token ){
				case parsx_token(ONE):{
					parsx_pop_state();
					parsx_push_state(414);
					parsx_push_state(130);
					parsx_push_state(395);
					parsx_push_state(26);
				}break;
				case parsx_token(OGT):{
					parsx_pop_state();
					parsx_push_state(414);
					parsx_push_state(123);
					parsx_push_state(395);
					parsx_push_state(34);
				}break;
				case parsx_token(KAnd):{
					parsx_pop_state();
					parsx_push_state(414);
					parsx_push_state(141);
					parsx_push_state(269);
					parsx_push_state(1);
				}break;
				case parsx_token(ORem):{
					parsx_pop_state();
					parsx_push_state(213);
					parsx_push_state(103);
					parsx_push_state(376);
					parsx_push_state(45);
				}break;
				case parsx_token(ODiv):{
					parsx_pop_state();
					parsx_push_state(213);
					parsx_push_state(57);
					parsx_push_state(376);
					parsx_push_state(24);
				}break;
				case parsx_token(OMult):{
					parsx_pop_state();
					parsx_push_state(213);
					parsx_push_state(142);
					parsx_push_state(376);
					parsx_push_state(21);
				}break;
				case parsx_token(OMinus):{
					parsx_pop_state();
					parsx_push_state(260);
					parsx_push_state(86);
					parsx_push_state(357);
					parsx_push_state(22);
				}break;
				case parsx_token(OPlus):{
					parsx_pop_state();
					parsx_push_state(260);
					parsx_push_state(121);
					parsx_push_state(357);
					parsx_push_state(20);
				}break;
				case parsx_token(OLT):{
					parsx_pop_state();
					parsx_push_state(414);
					parsx_push_state(80);
					parsx_push_state(395);
					parsx_push_state(32);
				}break;
				case parsx_token(OLE):{
					parsx_pop_state();
					parsx_push_state(414);
					parsx_push_state(114);
					parsx_push_state(395);
					parsx_push_state(42);
				}break;
				case parsx_token(OLParen):{
					parsx_pop_state();
					parsx_push_state(398);
					parsx_push_state(66);
					parsx_push_state(18);
					parsx_push_state(319);
					parsx_push_state(19);
				}break;
				case parsx_token(OEQ):{
					parsx_pop_state();
					parsx_push_state(414);
					parsx_push_state(63);
					parsx_push_state(395);
					parsx_push_state(39);
				}break;
				case parsx_token(OGE):{
					parsx_pop_state();
					parsx_push_state(414);
					parsx_push_state(68);
					parsx_push_state(395);
					parsx_push_state(3);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 399:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OLParen):{
					parsx_pop_state();
					parsx_push_state(258);
					parsx_push_state(66);
					parsx_push_state(18);
					parsx_push_state(319);
					parsx_push_state(19);
				}break;
				case parsx_token(OPeriod):{
					parsx_pop_state();
					parsx_push_state(399);
					parsx_push_state(238);
					parsx_push_state(25);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 400:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(206);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(192);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 401:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OGT):{
					parsx_pop_state();
					parsx_push_state(234);
					parsx_push_state(123);
					parsx_push_state(395);
					parsx_push_state(34);
				}break;
				case parsx_token(ONE):{
					parsx_pop_state();
					parsx_push_state(234);
					parsx_push_state(130);
					parsx_push_state(395);
					parsx_push_state(26);
				}break;
				case parsx_token(KAnd):{
					parsx_pop_state();
					parsx_push_state(234);
					parsx_push_state(141);
					parsx_push_state(269);
					parsx_push_state(1);
				}break;
				case parsx_token(KOr):{
					parsx_pop_state();
					parsx_push_state(268);
					parsx_push_state(72);
					parsx_push_state(342);
					parsx_push_state(54);
				}break;
				case parsx_token(OGE):{
					parsx_pop_state();
					parsx_push_state(234);
					parsx_push_state(68);
					parsx_push_state(395);
					parsx_push_state(3);
				}break;
				case parsx_token(OMinus):{
					parsx_pop_state();
					parsx_push_state(401);
					parsx_push_state(86);
					parsx_push_state(357);
					parsx_push_state(22);
				}break;
				case parsx_token(OPlus):{
					parsx_pop_state();
					parsx_push_state(401);
					parsx_push_state(121);
					parsx_push_state(357);
					parsx_push_state(20);
				}break;
				case parsx_token(OLT):{
					parsx_pop_state();
					parsx_push_state(234);
					parsx_push_state(80);
					parsx_push_state(395);
					parsx_push_state(32);
				}break;
				case parsx_token(OLE):{
					parsx_pop_state();
					parsx_push_state(234);
					parsx_push_state(114);
					parsx_push_state(395);
					parsx_push_state(42);
				}break;
				case parsx_token(OEQ):{
					parsx_pop_state();
					parsx_push_state(234);
					parsx_push_state(63);
					parsx_push_state(395);
					parsx_push_state(39);
				}break;
				case parsx_token(OColon):{
					parsx_pop_state();
					parsx_push_state(268);
					parsx_push_state(107);
					parsx_push_state(253);
					parsx_push_state(9);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(84);
				}break;
			}
		}break;
		case 402:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KImport):{
					parsx_pop_state();
					parsx_queue_action(58);
					parsx_push_state(402);
					parsx_push_state(78);
					parsx_push_state(76);
					parsx_push_state(329);
					parsx_push_state(270);
					parsx_push_state(100);
					parsx_push_state(52);
					parsx_push_state(29);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 403:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KString):{
					parsx_pop_state();
					parsx_push_state(191);
					parsx_push_state(149);
					parsx_push_state(383);
					parsx_push_state(145);
					parsx_push_state(38);
				}break;
				case parsx_token(KFloat):{
					parsx_pop_state();
					parsx_push_state(191);
					parsx_push_state(149);
					parsx_push_state(419);
					parsx_push_state(122);
					parsx_push_state(5);
				}break;
				case parsx_token(KDouble):{
					parsx_pop_state();
					parsx_push_state(191);
					parsx_push_state(149);
					parsx_push_state(224);
					parsx_push_state(119);
					parsx_push_state(48);
				}break;
				case parsx_token(KBytes):{
					parsx_pop_state();
					parsx_push_state(191);
					parsx_push_state(149);
					parsx_push_state(382);
					parsx_push_state(87);
					parsx_push_state(49);
				}break;
				case parsx_token(Identifier):{
					parsx_pop_state();
					parsx_push_state(191);
					parsx_push_state(149);
					parsx_push_state(166);
					parsx_push_state(52);
				}break;
				case parsx_token(KUndef):{
					parsx_pop_state();
					parsx_push_state(191);
					parsx_push_state(149);
					parsx_push_state(172);
					parsx_push_state(62);
					parsx_push_state(15);
				}break;
				case parsx_token(KBool):{
					parsx_pop_state();
					parsx_push_state(191);
					parsx_push_state(149);
					parsx_push_state(188);
					parsx_push_state(131);
					parsx_push_state(27);
				}break;
				case parsx_token(OLParen):{
					parsx_pop_state();
					parsx_push_state(191);
					parsx_push_state(149);
					parsx_push_state(405);
					parsx_push_state(19);
				}break;
				case parsx_token(OLBrace):{
					parsx_pop_state();
					parsx_push_state(191);
					parsx_push_state(149);
					parsx_push_state(420);
					parsx_push_state(51);
				}break;
				case parsx_token(KInt):{
					parsx_pop_state();
					parsx_push_state(191);
					parsx_push_state(149);
					parsx_push_state(296);
					parsx_push_state(132);
					parsx_push_state(4);
				}break;
				case parsx_token(KUnit):{
					parsx_pop_state();
					parsx_push_state(191);
					parsx_push_state(149);
					parsx_push_state(153);
					parsx_push_state(88);
					parsx_push_state(13);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(150);
				}break;
			}
		}break;
		case 404:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(404);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(190);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(180);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(350);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(425);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 405:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KFloat):{
					parsx_pop_state();
					parsx_push_state(221);
					parsx_push_state(122);
					parsx_push_state(5);
				}break;
				case parsx_token(KString):{
					parsx_pop_state();
					parsx_push_state(436);
					parsx_push_state(145);
					parsx_push_state(38);
				}break;
				case parsx_token(KInt):{
					parsx_pop_state();
					parsx_push_state(359);
					parsx_push_state(132);
					parsx_push_state(4);
				}break;
				case parsx_token(KBytes):{
					parsx_pop_state();
					parsx_push_state(368);
					parsx_push_state(87);
					parsx_push_state(49);
				}break;
				case parsx_token(Identifier):{
					parsx_pop_state();
					parsx_push_state(362);
					parsx_push_state(305);
					parsx_push_state(129);
					parsx_push_state(52);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(180);
					parsx_push_state(56);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(18);
				}break;
				case parsx_token(KUndef):{
					parsx_pop_state();
					parsx_push_state(203);
					parsx_push_state(62);
					parsx_push_state(15);
				}break;
				case parsx_token(KBool):{
					parsx_pop_state();
					parsx_push_state(237);
					parsx_push_state(131);
					parsx_push_state(27);
				}break;
				case parsx_token(OLParen):{
					parsx_pop_state();
					parsx_push_state(202);
					parsx_push_state(19);
				}break;
				case parsx_token(OLBrace):{
					parsx_pop_state();
					parsx_push_state(184);
					parsx_push_state(51);
				}break;
				case parsx_token(KDouble):{
					parsx_pop_state();
					parsx_push_state(222);
					parsx_push_state(119);
					parsx_push_state(48);
				}break;
				case parsx_token(KUnit):{
					parsx_pop_state();
					parsx_push_state(223);
					parsx_push_state(88);
					parsx_push_state(13);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(KString);
					parsx_queue_action(38);
					parsx_queue_action(145);
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 406:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(180);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(209);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(425);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 407:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KOr):{
					parsx_pop_state();
					parsx_push_state(366);
					parsx_push_state(72);
					parsx_push_state(342);
					parsx_push_state(54);
				}break;
				case parsx_token(OColon):{
					parsx_pop_state();
					parsx_push_state(366);
					parsx_push_state(107);
					parsx_push_state(253);
					parsx_push_state(9);
				}break;
				case parsx_token(KAnd):{
					parsx_pop_state();
					parsx_push_state(407);
					parsx_push_state(141);
					parsx_push_state(269);
					parsx_push_state(1);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 408:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(206);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(192);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 409:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(206);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(265);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(192);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 410:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(180);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(425);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 411:{
			switch ( parsx_lookahead_token ){
				case parsx_token(ODiv):{
					parsx_pop_state();
					parsx_push_state(417);
					parsx_push_state(57);
					parsx_push_state(376);
					parsx_push_state(24);
				}break;
				case parsx_token(OMinus):{
					parsx_pop_state();
					parsx_push_state(371);
					parsx_push_state(86);
					parsx_push_state(357);
					parsx_push_state(22);
				}break;
				case parsx_token(OPlus):{
					parsx_pop_state();
					parsx_push_state(371);
					parsx_push_state(121);
					parsx_push_state(357);
					parsx_push_state(20);
				}break;
				case parsx_token(ORem):{
					parsx_pop_state();
					parsx_push_state(417);
					parsx_push_state(103);
					parsx_push_state(376);
					parsx_push_state(45);
				}break;
				case parsx_token(OLParen):{
					parsx_pop_state();
					parsx_push_state(411);
					parsx_push_state(66);
					parsx_push_state(18);
					parsx_push_state(319);
					parsx_push_state(19);
				}break;
				case parsx_token(OMult):{
					parsx_pop_state();
					parsx_push_state(417);
					parsx_push_state(142);
					parsx_push_state(376);
					parsx_push_state(21);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 412:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(412);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(214);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(394);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(300);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 413:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KFloat):{
					parsx_pop_state();
					parsx_push_state(310);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(230);
					parsx_push_state(122);
					parsx_push_state(5);
				}break;
				case parsx_token(KString):{
					parsx_pop_state();
					parsx_push_state(310);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(230);
					parsx_push_state(145);
					parsx_push_state(38);
				}break;
				case parsx_token(KDouble):{
					parsx_pop_state();
					parsx_push_state(310);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(230);
					parsx_push_state(119);
					parsx_push_state(48);
				}break;
				case parsx_token(KBytes):{
					parsx_pop_state();
					parsx_push_state(310);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(230);
					parsx_push_state(87);
					parsx_push_state(49);
				}break;
				case parsx_token(Identifier):{
					parsx_pop_state();
					parsx_push_state(310);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(230);
					parsx_push_state(156);
					parsx_push_state(129);
					parsx_push_state(52);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_insert_token(KFloat);
					parsx_queue_action(5);
					parsx_queue_action(122);
					parsx_push_state(310);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(KUndef):{
					parsx_pop_state();
					parsx_push_state(310);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(230);
					parsx_push_state(62);
					parsx_push_state(15);
				}break;
				case parsx_token(KBool):{
					parsx_pop_state();
					parsx_push_state(310);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(230);
					parsx_push_state(131);
					parsx_push_state(27);
				}break;
				case parsx_token(OLBrace):{
					parsx_pop_state();
					parsx_push_state(310);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(230);
					parsx_push_state(124);
					parsx_push_state(53);
					parsx_push_state(170);
					parsx_push_state(51);
				}break;
				case parsx_token(OLParen):{
					parsx_pop_state();
					parsx_push_state(310);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
					parsx_push_state(198);
					parsx_push_state(19);
				}break;
				case parsx_token(KUnit):{
					parsx_pop_state();
					parsx_push_state(310);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(230);
					parsx_push_state(88);
					parsx_push_state(13);
				}break;
				case parsx_token(KInt):{
					parsx_pop_state();
					parsx_push_state(310);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(230);
					parsx_push_state(132);
					parsx_push_state(4);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(97);
					parsx_insert_token(OVBar);
					parsx_queue_action(10);
					parsx_queue_action(97);
					parsx_queue_action(151);
				}break;
			}
		}break;
		case 414:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KAnd):{
					parsx_pop_state();
					parsx_push_state(414);
					parsx_push_state(141);
					parsx_push_state(269);
					parsx_push_state(1);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 415:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(415);
					parsx_push_state(64);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORBrace):{
					parsx_pop_state();
					parsx_push_state(286);
					parsx_push_state(124);
					parsx_push_state(53);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORBrace);
					parsx_queue_action(53);
					parsx_queue_action(124);
				}break;
			}
		}break;
		case 416:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(416);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(351);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(180);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(430);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(425);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 417:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OPlus):{
					parsx_pop_state();
					parsx_push_state(371);
					parsx_push_state(121);
					parsx_push_state(357);
					parsx_push_state(20);
				}break;
				case parsx_token(ODiv):{
					parsx_pop_state();
					parsx_push_state(417);
					parsx_push_state(57);
					parsx_push_state(376);
					parsx_push_state(24);
				}break;
				case parsx_token(OMinus):{
					parsx_pop_state();
					parsx_push_state(371);
					parsx_push_state(86);
					parsx_push_state(357);
					parsx_push_state(22);
				}break;
				case parsx_token(ORem):{
					parsx_pop_state();
					parsx_push_state(417);
					parsx_push_state(103);
					parsx_push_state(376);
					parsx_push_state(45);
				}break;
				case parsx_token(OMult):{
					parsx_pop_state();
					parsx_push_state(417);
					parsx_push_state(142);
					parsx_push_state(376);
					parsx_push_state(21);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 418:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(254);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(358);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 419:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(186);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(370);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(81);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 420:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KFloat):{
					parsx_pop_state();
					parsx_push_state(259);
					parsx_push_state(70);
					parsx_push_state(326);
					parsx_push_state(122);
					parsx_push_state(5);
				}break;
				case parsx_token(KString):{
					parsx_pop_state();
					parsx_push_state(259);
					parsx_push_state(70);
					parsx_push_state(252);
					parsx_push_state(145);
					parsx_push_state(38);
				}break;
				case parsx_token(Identifier):{
					parsx_pop_state();
					parsx_push_state(259);
					parsx_push_state(70);
					parsx_push_state(305);
					parsx_push_state(129);
					parsx_push_state(52);
				}break;
				case parsx_token(ORBrace):{
					parsx_pop_state();
					parsx_queue_action(148);
					parsx_push_state(328);
					parsx_push_state(124);
					parsx_push_state(53);
				}break;
				case parsx_token(KBytes):{
					parsx_pop_state();
					parsx_push_state(259);
					parsx_push_state(70);
					parsx_push_state(179);
					parsx_push_state(87);
					parsx_push_state(49);
				}break;
				case parsx_token(KUndef):{
					parsx_pop_state();
					parsx_push_state(259);
					parsx_push_state(70);
					parsx_push_state(418);
					parsx_push_state(62);
					parsx_push_state(15);
				}break;
				case parsx_token(KBool):{
					parsx_pop_state();
					parsx_push_state(259);
					parsx_push_state(70);
					parsx_push_state(289);
					parsx_push_state(131);
					parsx_push_state(27);
				}break;
				case parsx_token(OLBrace):{
					parsx_pop_state();
					parsx_push_state(259);
					parsx_push_state(70);
					parsx_push_state(333);
					parsx_push_state(51);
				}break;
				case parsx_token(OLParen):{
					parsx_pop_state();
					parsx_push_state(259);
					parsx_push_state(70);
					parsx_push_state(340);
					parsx_push_state(19);
				}break;
				case parsx_token(KDouble):{
					parsx_pop_state();
					parsx_push_state(259);
					parsx_push_state(70);
					parsx_push_state(244);
					parsx_push_state(119);
					parsx_push_state(48);
				}break;
				case parsx_token(KInt):{
					parsx_pop_state();
					parsx_push_state(259);
					parsx_push_state(70);
					parsx_push_state(324);
					parsx_push_state(132);
					parsx_push_state(4);
				}break;
				case parsx_token(KUnit):{
					parsx_pop_state();
					parsx_push_state(259);
					parsx_push_state(70);
					parsx_push_state(171);
					parsx_push_state(88);
					parsx_push_state(13);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(148);
					parsx_insert_token(ORBrace);
					parsx_queue_action(53);
					parsx_queue_action(124);
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 421:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(81);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 422:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(422);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(81);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(421);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 423:{
			switch ( parsx_lookahead_token ){
				case parsx_token(ONE):{
					parsx_pop_state();
					parsx_push_state(407);
					parsx_push_state(130);
					parsx_push_state(395);
					parsx_push_state(26);
				}break;
				case parsx_token(OGT):{
					parsx_pop_state();
					parsx_push_state(407);
					parsx_push_state(123);
					parsx_push_state(395);
					parsx_push_state(34);
				}break;
				case parsx_token(KAnd):{
					parsx_pop_state();
					parsx_push_state(407);
					parsx_push_state(141);
					parsx_push_state(269);
					parsx_push_state(1);
				}break;
				case parsx_token(ORem):{
					parsx_pop_state();
					parsx_push_state(423);
					parsx_push_state(103);
					parsx_push_state(376);
					parsx_push_state(45);
				}break;
				case parsx_token(KOr):{
					parsx_pop_state();
					parsx_push_state(366);
					parsx_push_state(72);
					parsx_push_state(342);
					parsx_push_state(54);
				}break;
				case parsx_token(OGE):{
					parsx_pop_state();
					parsx_push_state(407);
					parsx_push_state(68);
					parsx_push_state(395);
					parsx_push_state(3);
				}break;
				case parsx_token(OMinus):{
					parsx_pop_state();
					parsx_push_state(301);
					parsx_push_state(86);
					parsx_push_state(357);
					parsx_push_state(22);
				}break;
				case parsx_token(OMult):{
					parsx_pop_state();
					parsx_push_state(423);
					parsx_push_state(142);
					parsx_push_state(376);
					parsx_push_state(21);
				}break;
				case parsx_token(OLT):{
					parsx_pop_state();
					parsx_push_state(407);
					parsx_push_state(80);
					parsx_push_state(395);
					parsx_push_state(32);
				}break;
				case parsx_token(OPlus):{
					parsx_pop_state();
					parsx_push_state(301);
					parsx_push_state(121);
					parsx_push_state(357);
					parsx_push_state(20);
				}break;
				case parsx_token(ODiv):{
					parsx_pop_state();
					parsx_push_state(423);
					parsx_push_state(57);
					parsx_push_state(376);
					parsx_push_state(24);
				}break;
				case parsx_token(OLE):{
					parsx_pop_state();
					parsx_push_state(407);
					parsx_push_state(114);
					parsx_push_state(395);
					parsx_push_state(42);
				}break;
				case parsx_token(OEQ):{
					parsx_pop_state();
					parsx_push_state(407);
					parsx_push_state(63);
					parsx_push_state(395);
					parsx_push_state(39);
				}break;
				case parsx_token(OColon):{
					parsx_pop_state();
					parsx_push_state(366);
					parsx_push_state(107);
					parsx_push_state(253);
					parsx_push_state(9);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 424:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KOr):{
					parsx_pop_state();
					parsx_push_state(424);
					parsx_push_state(72);
					parsx_push_state(342);
					parsx_push_state(54);
				}break;
				case parsx_token(OColon):{
					parsx_pop_state();
					parsx_push_state(424);
					parsx_push_state(107);
					parsx_push_state(253);
					parsx_push_state(9);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(84);
				}break;
			}
		}break;
		case 425:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(334);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(185);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(81);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 426:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KFloat):{
					parsx_pop_state();
					parsx_push_state(240);
					parsx_push_state(415);
					parsx_push_state(70);
					parsx_push_state(326);
					parsx_push_state(122);
					parsx_push_state(5);
				}break;
				case parsx_token(KString):{
					parsx_pop_state();
					parsx_push_state(240);
					parsx_push_state(415);
					parsx_push_state(70);
					parsx_push_state(252);
					parsx_push_state(145);
					parsx_push_state(38);
				}break;
				case parsx_token(Identifier):{
					parsx_pop_state();
					parsx_push_state(240);
					parsx_push_state(415);
					parsx_push_state(70);
					parsx_push_state(305);
					parsx_push_state(129);
					parsx_push_state(52);
				}break;
				case parsx_token(ORBrace):{
					parsx_pop_state();
					parsx_queue_action(148);
					parsx_push_state(240);
					parsx_push_state(286);
					parsx_push_state(124);
					parsx_push_state(53);
				}break;
				case parsx_token(KBytes):{
					parsx_pop_state();
					parsx_push_state(240);
					parsx_push_state(415);
					parsx_push_state(70);
					parsx_push_state(179);
					parsx_push_state(87);
					parsx_push_state(49);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_insert_token(OLParen);
					parsx_queue_action(19);
					parsx_push_state(240);
					parsx_push_state(415);
					parsx_push_state(70);
					parsx_push_state(206);
					parsx_push_state(56);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(18);
				}break;
				case parsx_token(KUndef):{
					parsx_pop_state();
					parsx_push_state(240);
					parsx_push_state(415);
					parsx_push_state(70);
					parsx_push_state(418);
					parsx_push_state(62);
					parsx_push_state(15);
				}break;
				case parsx_token(KBool):{
					parsx_pop_state();
					parsx_push_state(240);
					parsx_push_state(415);
					parsx_push_state(70);
					parsx_push_state(289);
					parsx_push_state(131);
					parsx_push_state(27);
				}break;
				case parsx_token(OLBrace):{
					parsx_pop_state();
					parsx_push_state(240);
					parsx_push_state(415);
					parsx_push_state(70);
					parsx_push_state(333);
					parsx_push_state(51);
				}break;
				case parsx_token(OLParen):{
					parsx_pop_state();
					parsx_push_state(240);
					parsx_push_state(415);
					parsx_push_state(70);
					parsx_push_state(340);
					parsx_push_state(19);
				}break;
				case parsx_token(KDouble):{
					parsx_pop_state();
					parsx_push_state(240);
					parsx_push_state(415);
					parsx_push_state(70);
					parsx_push_state(244);
					parsx_push_state(119);
					parsx_push_state(48);
				}break;
				case parsx_token(KInt):{
					parsx_pop_state();
					parsx_push_state(240);
					parsx_push_state(415);
					parsx_push_state(70);
					parsx_push_state(324);
					parsx_push_state(132);
					parsx_push_state(4);
				}break;
				case parsx_token(KUnit):{
					parsx_pop_state();
					parsx_push_state(240);
					parsx_push_state(415);
					parsx_push_state(70);
					parsx_push_state(171);
					parsx_push_state(88);
					parsx_push_state(13);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(148);
					parsx_insert_token(ORBrace);
					parsx_queue_action(53);
					parsx_queue_action(124);
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 427:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(443);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(208);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(318);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(300);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 428:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(428);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(276);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(206);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(255);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(192);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 429:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(300);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 430:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(180);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(351);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(425);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 431:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(431);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(408);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(206);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(257);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(192);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 432:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(81);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				default:{
					parsx_pop_state();
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 433:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(212);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(215);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(283);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(300);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 434:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(434);
					parsx_push_state(64);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 435:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(435);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(354);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				default:{
					parsx_pop_state();
				}break;
			}
		}break;
		case 436:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(430);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(416);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(351);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(180);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(425);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 437:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(300);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 438:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(180);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(425);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
					parsx_queue_action(81);
				}break;
			}
		}break;
		case 439:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(162);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(300);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 440:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(294);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(182);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(429);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(300);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 441:{
			switch ( parsx_lookahead_token ){
				case parsx_token(KFloat):{
					parsx_pop_state();
					parsx_push_state(285);
					parsx_push_state(261);
					parsx_push_state(122);
					parsx_push_state(5);
				}break;
				case parsx_token(KString):{
					parsx_pop_state();
					parsx_push_state(285);
					parsx_push_state(263);
					parsx_push_state(145);
					parsx_push_state(38);
				}break;
				case parsx_token(KDouble):{
					parsx_pop_state();
					parsx_push_state(285);
					parsx_push_state(187);
					parsx_push_state(119);
					parsx_push_state(48);
				}break;
				case parsx_token(KBytes):{
					parsx_pop_state();
					parsx_push_state(285);
					parsx_push_state(444);
					parsx_push_state(87);
					parsx_push_state(49);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(271);
					parsx_push_state(56);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(18);
				}break;
				case parsx_token(KUndef):{
					parsx_pop_state();
					parsx_push_state(285);
					parsx_push_state(293);
					parsx_push_state(62);
					parsx_push_state(15);
				}break;
				case parsx_token(KBool):{
					parsx_pop_state();
					parsx_push_state(285);
					parsx_push_state(175);
					parsx_push_state(131);
					parsx_push_state(27);
				}break;
				case parsx_token(OLBrace):{
					parsx_pop_state();
					parsx_push_state(285);
					parsx_push_state(323);
					parsx_push_state(51);
				}break;
				case parsx_token(OLParen):{
					parsx_pop_state();
					parsx_push_state(285);
					parsx_push_state(338);
					parsx_push_state(19);
				}break;
				case parsx_token(Identifier):{
					parsx_pop_state();
					parsx_push_state(285);
					parsx_push_state(155);
					parsx_push_state(305);
					parsx_push_state(129);
					parsx_push_state(52);
				}break;
				case parsx_token(KInt):{
					parsx_pop_state();
					parsx_push_state(285);
					parsx_push_state(388);
					parsx_push_state(132);
					parsx_push_state(4);
				}break;
				case parsx_token(KUnit):{
					parsx_pop_state();
					parsx_push_state(285);
					parsx_push_state(309);
					parsx_push_state(88);
					parsx_push_state(13);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(KBytes);
					parsx_queue_action(49);
					parsx_queue_action(87);
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 442:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(206);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(400);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(192);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 443:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(443);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(208);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(318);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(300);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
		case 444:{
			switch ( parsx_lookahead_token ){
				case parsx_token(OArrow):{
					parsx_pop_state();
					parsx_push_state(280);
					parsx_push_state(106);
					parsx_push_state(353);
					parsx_push_state(50);
				}break;
				case parsx_token(OQuestion):{
					parsx_pop_state();
					parsx_push_state(229);
					parsx_push_state(89);
					parsx_push_state(33);
				}break;
				case parsx_token(OVBar):{
					parsx_pop_state();
					parsx_push_state(235);
					parsx_push_state(157);
					parsx_push_state(151);
					parsx_push_state(322);
					parsx_push_state(10);
				}break;
				case parsx_token(OComma):{
					parsx_pop_state();
					parsx_push_state(206);
					parsx_push_state(91);
					parsx_push_state(353);
					parsx_push_state(50);
					parsx_push_state(272);
					parsx_push_state(135);
					parsx_push_state(253);
					parsx_push_state(23);
				}break;
				case parsx_token(ORParen):{
					parsx_pop_state();
					parsx_push_state(192);
					parsx_push_state(139);
					parsx_push_state(18);
				}break;
				default:{
					parsx_pop_state();
					parsx_insert_token(ORParen);
					parsx_queue_action(18);
					parsx_queue_action(139);
				}break;
			}
		}break;
	}
parsx_sync_func_end()


size_t parsx_expect_translation[] = {
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,57,59,61,62,63,68,69,72,74,76,79,80,85,91,92,95,96,97,100,103,106,111,116,121,123,128,131,132,137,142,147,149,152,153,158,161,162,164,165,168,182,183,186,189,191,203,208,211,216,228,233,238,240,241,242,244,246,253,255,258,270,272,277,278,279,294,299,300,305,310,315,318,319,320,324,338,343,346,349,352,355,358,360,361,366,368,369,371,376,378,379,382,396,397,399,400,403,406,409,412,413,414,0,417,420,421,423,432,437,442,447,450,452,463,465,467,468,469,472,474,478,481,492,494,505,508,509,512,515,518,520,521,523,526,531,532,535,536,539,542,547,550,554,557,560,562,566,568,579,592,594,597,601,604,606,607,612,613,616,630,631,634,639,640,643,646,648,650,660,661,663,666,667,670,672,675,676,679,681,697,699,700,716,727,728,740,743,755,757,758,774,779,782,785,793,796,799,802,804,808,809,810,813,829,830,833,838,839,844,846,848,863,864,866,873,878,880,883,885,886,889,891,894,895,900,901,902,907,910,913,916,928,931,933,938,943,946,948,963,964,979,982,983,988,989,1002,1004,1006,1017,1018,1029,1034,1046,1049,1052,1054,1057,1059,1065,1070,1071,1072,1074,1079,1084,1087,1090,1092,1093,1096,1110,1112,1115,1117,1122,1127,1129,1132,1137,1138,1143,1144,1147,1152,1154,1156,1159,1164,1176,1179,1184,
};
size_t parsx_expect_translation_n[] = {
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,2,1,1,5,1,3,2,2,3,1,5,6,1,3,1,1,3,3,3,5,5,5,2,5,3,1,5,5,5,2,3,1,5,3,1,2,1,3,14,1,3,3,2,12,5,3,5,12,5,5,2,1,1,2,2,7,2,3,12,2,5,1,1,15,5,1,5,5,5,3,1,1,4,14,5,3,3,3,3,3,2,1,5,2,1,2,5,2,1,3,14,1,2,1,3,3,3,3,1,1,3,0,3,1,2,9,5,5,5,3,2,11,2,2,1,1,3,2,4,3,11,2,11,3,1,3,3,3,2,1,2,3,5,1,3,1,3,3,5,3,4,3,3,2,4,2,11,13,2,3,4,3,2,1,5,1,3,14,1,3,5,1,3,3,2,2,10,1,2,3,1,3,2,3,1,3,2,16,2,1,16,11,1,12,3,12,2,1,16,5,3,3,8,3,3,3,2,4,1,1,3,16,1,3,5,1,5,2,2,15,1,2,7,5,2,3,2,1,3,2,3,1,5,1,1,5,3,3,3,12,3,2,5,5,3,2,15,1,15,3,1,5,1,13,2,2,11,1,11,5,12,3,3,2,3,2,6,5,1,1,2,5,5,3,3,2,1,3,14,2,3,2,5,5,2,3,5,1,5,1,3,5,2,2,3,5,12,3,5,5,
};
parsx_expect_type parsx_expect_table[] = {
parsx_expect_token(KAnd),parsx_expect_token(KFalse),parsx_expect_token(OGE),parsx_expect_token(KInt),parsx_expect_token(KFloat),parsx_expect_token(NumberLiteral),parsx_expect_token(KNot),parsx_expect_token(KAs),parsx_expect_token(OColon),parsx_expect_token(OVBar),parsx_expect_token(KNull),parsx_expect_token(StringLiteral),parsx_expect_token(KUnit),parsx_expect_token(KIf),parsx_expect_token(KUndef),parsx_expect_token(KEnd),parsx_expect_token(KStruct),parsx_expect_token(ORParen),parsx_expect_token(OLParen),parsx_expect_token(OPlus),parsx_expect_token(OMult),parsx_expect_token(OMinus),parsx_expect_token(OComma),parsx_expect_token(ODiv),parsx_expect_token(OPeriod),parsx_expect_token(ONE),parsx_expect_token(KBool),parsx_expect_token(KElseIf),parsx_expect_token(KImport),parsx_expect_token(OSemicolon),parsx_expect_token(OAssign),parsx_expect_token(OLT),parsx_expect_token(OQuestion),parsx_expect_token(OGT),parsx_expect_token(KFunction),parsx_expect_token(KThen),parsx_expect_token(KGlobal),parsx_expect_token(KString),parsx_expect_token(OEQ),parsx_expect_token(KEnum),parsx_expect_token(KElse),parsx_expect_token(OLE),parsx_expect_token(EndOfFile),parsx_expect_token(KInterface),parsx_expect_token(ORem),parsx_expect_token(KTrue),parsx_expect_token(KClass),parsx_expect_token(KDouble),parsx_expect_token(KBytes),parsx_expect_token(OArrow),parsx_expect_token(OLBrace),parsx_expect_token(Identifier),parsx_expect_token(ORBrace),parsx_expect_token(KOr),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OPeriod),parsx_expect_token(OVBar),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OVBar),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(KFunction),parsx_expect_token(KGlobal),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(KAnd),parsx_expect_token(OColon),parsx_expect_token(KOr),parsx_expect_token(Identifier),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OPeriod),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(Identifier),parsx_expect_token(OColon),parsx_expect_token(OVBar),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OVBar),parsx_expect_value(NonTerminal.Type),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OVBar),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_value(NonTerminal.Type),parsx_expect_token(ORBrace),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OVBar),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(KImport),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OComma),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OPeriod),parsx_expect_token(OLParen),parsx_expect_token(OMult),parsx_expect_token(ODiv),parsx_expect_token(ORem),parsx_expect_token(OPlus),parsx_expect_token(OMinus),parsx_expect_token(OEQ),parsx_expect_token(ONE),parsx_expect_token(OLE),parsx_expect_token(OGE),parsx_expect_token(OLT),parsx_expect_token(OGT),parsx_expect_token(KAnd),parsx_expect_token(OComma),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(KFloat),parsx_expect_token(KString),parsx_expect_token(Identifier),parsx_expect_token(KBytes),parsx_expect_token(ORParen),parsx_expect_token(OLParen),parsx_expect_token(KBool),parsx_expect_token(OLBrace),parsx_expect_token(KUndef),parsx_expect_token(KUnit),parsx_expect_token(KDouble),parsx_expect_token(KInt),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(KFloat),parsx_expect_token(KString),parsx_expect_token(Identifier),parsx_expect_token(KBytes),parsx_expect_token(ORParen),parsx_expect_token(OLParen),parsx_expect_token(KBool),parsx_expect_token(OLBrace),parsx_expect_token(KUndef),parsx_expect_token(KUnit),parsx_expect_token(KDouble),parsx_expect_token(KInt),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OVBar),parsx_expect_token(KImport),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OPeriod),parsx_expect_token(OLParen),parsx_expect_token(OMult),parsx_expect_token(ODiv),parsx_expect_token(ORem),parsx_expect_token(OPlus),parsx_expect_token(OMinus),parsx_expect_token(KElse),parsx_expect_token(KElseIf),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OMult),parsx_expect_token(ODiv),parsx_expect_token(ORem),parsx_expect_token(OPlus),parsx_expect_token(OMinus),parsx_expect_token(OEQ),parsx_expect_token(ONE),parsx_expect_token(OLE),parsx_expect_token(OGE),parsx_expect_token(OLT),parsx_expect_token(OGT),parsx_expect_token(KAnd),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OVBar),parsx_expect_value(NonTerminal.Expression),parsx_expect_token(OLParen),parsx_expect_token(OMult),parsx_expect_token(ODiv),parsx_expect_token(ORem),parsx_expect_token(OPlus),parsx_expect_token(OMinus),parsx_expect_token(OEQ),parsx_expect_token(ONE),parsx_expect_token(OLE),parsx_expect_token(OGE),parsx_expect_token(OLT),parsx_expect_token(OGT),parsx_expect_token(KAnd),parsx_expect_token(OColon),parsx_expect_token(KOr),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OColon),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OVBar),parsx_expect_value(NonTerminal.Type),parsx_expect_token(OLParen),parsx_expect_token(OMult),parsx_expect_token(ODiv),parsx_expect_token(ORem),parsx_expect_token(OMult),parsx_expect_token(ODiv),parsx_expect_token(ORem),parsx_expect_token(OPlus),parsx_expect_token(OMinus),parsx_expect_token(OEQ),parsx_expect_token(ONE),parsx_expect_token(OLE),parsx_expect_token(OGE),parsx_expect_token(OLT),parsx_expect_token(OGT),parsx_expect_token(KAnd),parsx_expect_token(OColon),parsx_expect_token(KOr),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(KImport),parsx_expect_value(NonTerminal.Expression),parsx_expect_token(KEnd),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(KAnd),parsx_expect_token(OColon),parsx_expect_token(KOr),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OPeriod),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(Identifier),parsx_expect_token(OLT),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OVBar),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OMult),parsx_expect_token(ODiv),parsx_expect_token(ORem),parsx_expect_token(OPlus),parsx_expect_token(OMinus),parsx_expect_token(OEQ),parsx_expect_token(ONE),parsx_expect_token(OLE),parsx_expect_token(OGE),parsx_expect_token(OLT),parsx_expect_token(OGT),parsx_expect_token(KAnd),parsx_expect_token(OColon),parsx_expect_token(KOr),parsx_expect_token(OVBar),parsx_expect_token(OColon),parsx_expect_token(KOr),parsx_expect_token(OColon),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_value(NonTerminal.Type),parsx_expect_token(OVBar),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OLParen),parsx_expect_token(OComma),parsx_expect_token(ORBrace),parsx_expect_token(OPlus),parsx_expect_token(OMinus),parsx_expect_token(OEQ),parsx_expect_token(ONE),parsx_expect_token(OLE),parsx_expect_token(OGE),parsx_expect_token(OLT),parsx_expect_token(OGT),parsx_expect_token(KAnd),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OPeriod),parsx_expect_token(OLParen),parsx_expect_token(OMult),parsx_expect_token(ODiv),parsx_expect_token(ORem),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(KFloat),parsx_expect_token(KString),parsx_expect_token(KUnit),parsx_expect_token(KBytes),parsx_expect_token(KUndef),parsx_expect_token(KBool),parsx_expect_token(OLBrace),parsx_expect_token(OLParen),parsx_expect_token(Identifier),parsx_expect_token(KDouble),parsx_expect_token(KInt),parsx_expect_token(KFunction),parsx_expect_token(KGlobal),parsx_expect_token(OColon),parsx_expect_token(KOr),parsx_expect_value(NonTerminal.Expression),parsx_expect_token(OPeriod),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OPeriod),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OPlus),parsx_expect_token(OMinus),parsx_expect_token(OEQ),parsx_expect_token(ONE),parsx_expect_token(OLE),parsx_expect_token(OGE),parsx_expect_token(OLT),parsx_expect_token(OGT),parsx_expect_token(KAnd),parsx_expect_token(OColon),parsx_expect_token(KOr),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OPlus),parsx_expect_token(OMinus),parsx_expect_token(OEQ),parsx_expect_token(ONE),parsx_expect_token(OLE),parsx_expect_token(OGE),parsx_expect_token(OLT),parsx_expect_token(OGT),parsx_expect_token(KAnd),parsx_expect_token(OColon),parsx_expect_token(KOr),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OVBar),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OAssign),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OVBar),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(Identifier),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OPeriod),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(KImport),parsx_expect_token(KFunction),parsx_expect_token(KGlobal),parsx_expect_token(EndOfFile),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OPlus),parsx_expect_token(OMinus),parsx_expect_token(OEQ),parsx_expect_token(ONE),parsx_expect_token(OLE),parsx_expect_token(OGE),parsx_expect_token(OLT),parsx_expect_token(OGT),parsx_expect_token(KAnd),parsx_expect_token(OColon),parsx_expect_token(KOr),parsx_expect_token(OPeriod),parsx_expect_token(OLParen),parsx_expect_token(OMult),parsx_expect_token(ODiv),parsx_expect_token(ORem),parsx_expect_token(OPlus),parsx_expect_token(OMinus),parsx_expect_token(OEQ),parsx_expect_token(ONE),parsx_expect_token(OLE),parsx_expect_token(OGE),parsx_expect_token(OLT),parsx_expect_token(OGT),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OMult),parsx_expect_token(ODiv),parsx_expect_token(ORem),parsx_expect_token(OPeriod),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(Identifier),parsx_expect_token(OColon),parsx_expect_token(OVBar),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OVBar),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OMult),parsx_expect_token(ODiv),parsx_expect_token(ORem),parsx_expect_token(OPlus),parsx_expect_token(OMinus),parsx_expect_token(OEQ),parsx_expect_token(ONE),parsx_expect_token(OLE),parsx_expect_token(OGE),parsx_expect_token(OLT),parsx_expect_token(OGT),parsx_expect_token(KAnd),parsx_expect_token(OColon),parsx_expect_token(KOr),parsx_expect_token(OVBar),parsx_expect_token(KAnd),parsx_expect_token(OColon),parsx_expect_token(KOr),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(Identifier),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_value(NonTerminal.Expression),parsx_expect_token(OComma),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(KUnit),parsx_expect_token(KUndef),parsx_expect_token(KBool),parsx_expect_token(KInt),parsx_expect_token(KFloat),parsx_expect_token(KDouble),parsx_expect_token(KString),parsx_expect_token(KBytes),parsx_expect_token(Identifier),parsx_expect_token(OLBrace),parsx_expect_value(NonTerminal.Type),parsx_expect_value(NonTerminal.Type),parsx_expect_token(ORBrace),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_value(NonTerminal.Expression),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_value(NonTerminal.Expression),parsx_expect_token(OSemicolon),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(KAs),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OPeriod),parsx_expect_token(OLParen),parsx_expect_token(OMult),parsx_expect_token(ODiv),parsx_expect_token(ORem),parsx_expect_token(OPlus),parsx_expect_token(OMinus),parsx_expect_token(OEQ),parsx_expect_token(ONE),parsx_expect_token(OLE),parsx_expect_token(OGE),parsx_expect_token(OLT),parsx_expect_token(OGT),parsx_expect_token(KAnd),parsx_expect_token(OColon),parsx_expect_token(KOr),parsx_expect_value(NonTerminal.Type),parsx_expect_token(ORBrace),parsx_expect_token(OVBar),parsx_expect_token(OPeriod),parsx_expect_token(OLParen),parsx_expect_token(OMult),parsx_expect_token(ODiv),parsx_expect_token(ORem),parsx_expect_token(OPlus),parsx_expect_token(OMinus),parsx_expect_token(OEQ),parsx_expect_token(ONE),parsx_expect_token(OLE),parsx_expect_token(OGE),parsx_expect_token(OLT),parsx_expect_token(OGT),parsx_expect_token(KAnd),parsx_expect_token(OColon),parsx_expect_token(KOr),parsx_expect_token(OMult),parsx_expect_token(ODiv),parsx_expect_token(ORem),parsx_expect_token(OPlus),parsx_expect_token(OMinus),parsx_expect_token(OEQ),parsx_expect_token(ONE),parsx_expect_token(OLE),parsx_expect_token(OGE),parsx_expect_token(OLT),parsx_expect_token(OGT),parsx_expect_token(Identifier),parsx_expect_token(KFloat),parsx_expect_token(KString),parsx_expect_token(Identifier),parsx_expect_token(KBytes),parsx_expect_token(ORParen),parsx_expect_token(OLParen),parsx_expect_token(KBool),parsx_expect_token(OLBrace),parsx_expect_token(KUndef),parsx_expect_token(KUnit),parsx_expect_token(KDouble),parsx_expect_token(KInt),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(KFloat),parsx_expect_token(KString),parsx_expect_token(Identifier),parsx_expect_token(KBytes),parsx_expect_token(ORParen),parsx_expect_token(OLParen),parsx_expect_token(KBool),parsx_expect_token(OLBrace),parsx_expect_token(KUndef),parsx_expect_token(KUnit),parsx_expect_token(KDouble),parsx_expect_token(KInt),parsx_expect_token(KFunction),parsx_expect_token(KGlobal),parsx_expect_value(NonTerminal.Expression),parsx_expect_token(OPeriod),parsx_expect_token(OLParen),parsx_expect_token(OMult),parsx_expect_token(ODiv),parsx_expect_token(ORem),parsx_expect_token(OPlus),parsx_expect_token(OMinus),parsx_expect_token(OEQ),parsx_expect_token(ONE),parsx_expect_token(OLE),parsx_expect_token(OGE),parsx_expect_token(OLT),parsx_expect_token(OGT),parsx_expect_token(KAnd),parsx_expect_token(OColon),parsx_expect_token(KOr),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OPlus),parsx_expect_token(OMinus),parsx_expect_token(OEQ),parsx_expect_token(ONE),parsx_expect_token(OLE),parsx_expect_token(OGE),parsx_expect_token(OLT),parsx_expect_token(OGT),parsx_expect_token(KImport),parsx_expect_token(KFunction),parsx_expect_token(KGlobal),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OPeriod),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_value(NonTerminal.Type),parsx_expect_token(OVBar),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OPeriod),parsx_expect_token(OLParen),parsx_expect_token(OMult),parsx_expect_token(ODiv),parsx_expect_token(ORem),parsx_expect_token(OPlus),parsx_expect_token(OMinus),parsx_expect_token(OEQ),parsx_expect_token(ONE),parsx_expect_token(OLE),parsx_expect_token(OGE),parsx_expect_token(OLT),parsx_expect_token(OGT),parsx_expect_token(KAnd),parsx_expect_token(OColon),parsx_expect_token(KOr),parsx_expect_value(NonTerminal.Expression),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OVBar),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OLParen),parsx_expect_token(OMult),parsx_expect_token(ODiv),parsx_expect_token(ORem),parsx_expect_token(OPlus),parsx_expect_token(OMinus),parsx_expect_token(OEQ),parsx_expect_token(ONE),parsx_expect_token(OLE),parsx_expect_token(OGE),parsx_expect_token(OLT),parsx_expect_token(OGT),parsx_expect_token(KAnd),parsx_expect_token(OColon),parsx_expect_token(KOr),parsx_expect_value(NonTerminal.Expression),parsx_expect_token(OColon),parsx_expect_token(KOr),parsx_expect_token(KUnit),parsx_expect_token(KTrue),parsx_expect_token(KFalse),parsx_expect_token(KNull),parsx_expect_token(StringLiteral),parsx_expect_token(NumberLiteral),parsx_expect_token(Identifier),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OPlus),parsx_expect_token(OMinus),parsx_expect_token(OVBar),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_value(NonTerminal.Expression),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OVBar),parsx_expect_token(OLParen),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(Identifier),parsx_expect_token(OLT),parsx_expect_token(ONE),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OLParen),parsx_expect_token(OMult),parsx_expect_token(ODiv),parsx_expect_token(ORem),parsx_expect_token(OPlus),parsx_expect_token(OMinus),parsx_expect_token(OEQ),parsx_expect_token(ONE),parsx_expect_token(OLE),parsx_expect_token(OGE),parsx_expect_token(OLT),parsx_expect_token(OGT),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(Identifier),parsx_expect_token(OLT),parsx_expect_token(OLParen),parsx_expect_token(OMult),parsx_expect_token(ODiv),parsx_expect_token(ORem),parsx_expect_token(OPlus),parsx_expect_token(OMinus),parsx_expect_token(OEQ),parsx_expect_token(ONE),parsx_expect_token(OLE),parsx_expect_token(OGE),parsx_expect_token(OLT),parsx_expect_token(OGT),parsx_expect_token(KAnd),parsx_expect_token(OColon),parsx_expect_token(KOr),parsx_expect_token(OVBar),parsx_expect_token(OLParen),parsx_expect_token(OMult),parsx_expect_token(ODiv),parsx_expect_token(ORem),parsx_expect_token(OPlus),parsx_expect_token(OMinus),parsx_expect_token(OEQ),parsx_expect_token(ONE),parsx_expect_token(OLE),parsx_expect_token(OGE),parsx_expect_token(OLT),parsx_expect_token(OGT),parsx_expect_token(KAnd),parsx_expect_token(OColon),parsx_expect_token(KOr),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_value(NonTerminal.Expression),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OComma),parsx_expect_token(OLParen),parsx_expect_token(OMult),parsx_expect_token(ODiv),parsx_expect_token(ORem),parsx_expect_token(OPlus),parsx_expect_token(OMinus),parsx_expect_token(OEQ),parsx_expect_token(ONE),parsx_expect_token(OLE),parsx_expect_token(OGE),parsx_expect_token(OLT),parsx_expect_token(OGT),parsx_expect_token(KAnd),parsx_expect_token(OPeriod),parsx_expect_token(OLParen),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OPlus),parsx_expect_token(OMinus),parsx_expect_token(OEQ),parsx_expect_token(ONE),parsx_expect_token(OLE),parsx_expect_token(OGE),parsx_expect_token(OLT),parsx_expect_token(OGT),parsx_expect_token(KAnd),parsx_expect_token(OColon),parsx_expect_token(KOr),parsx_expect_token(KImport),parsx_expect_token(KFloat),parsx_expect_token(KString),parsx_expect_token(KUnit),parsx_expect_token(KBytes),parsx_expect_token(KUndef),parsx_expect_token(KBool),parsx_expect_token(OLBrace),parsx_expect_token(OLParen),parsx_expect_token(Identifier),parsx_expect_token(KDouble),parsx_expect_token(KInt),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(KFloat),parsx_expect_token(KString),parsx_expect_token(Identifier),parsx_expect_token(KBytes),parsx_expect_token(ORParen),parsx_expect_token(OLParen),parsx_expect_token(KBool),parsx_expect_token(OLBrace),parsx_expect_token(KUndef),parsx_expect_token(KUnit),parsx_expect_token(KDouble),parsx_expect_token(KInt),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(KAnd),parsx_expect_token(OColon),parsx_expect_token(KOr),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OLParen),parsx_expect_token(OMult),parsx_expect_token(ODiv),parsx_expect_token(ORem),parsx_expect_token(OPlus),parsx_expect_token(OMinus),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_value(NonTerminal.Type),parsx_expect_token(KAnd),parsx_expect_token(OComma),parsx_expect_token(ORBrace),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OMult),parsx_expect_token(ODiv),parsx_expect_token(ORem),parsx_expect_token(OPlus),parsx_expect_token(OMinus),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_value(NonTerminal.Type),parsx_expect_token(ORBrace),parsx_expect_token(OVBar),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OMult),parsx_expect_token(ODiv),parsx_expect_token(ORem),parsx_expect_token(OPlus),parsx_expect_token(OMinus),parsx_expect_token(OEQ),parsx_expect_token(ONE),parsx_expect_token(OLE),parsx_expect_token(OGE),parsx_expect_token(OLT),parsx_expect_token(OGT),parsx_expect_token(KAnd),parsx_expect_token(OColon),parsx_expect_token(KOr),parsx_expect_token(OColon),parsx_expect_token(KOr),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_value(NonTerminal.Type),parsx_expect_token(ORBrace),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OVBar),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OComma),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(KFloat),parsx_expect_token(KString),parsx_expect_token(Identifier),parsx_expect_token(KBytes),parsx_expect_token(ORParen),parsx_expect_token(OLParen),parsx_expect_token(KBool),parsx_expect_token(OLBrace),parsx_expect_token(KUndef),parsx_expect_token(KUnit),parsx_expect_token(KDouble),parsx_expect_token(KInt),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),parsx_expect_token(OQuestion),parsx_expect_token(OArrow),parsx_expect_token(OVBar),parsx_expect_token(OComma),parsx_expect_token(ORParen),
};
parsx_expected_func_begin()
	State parsx_expect_state_ = parsx_expect_state;
	if ( parsx_expect_state_ < 55 ){
		parsx_expect(parsx_expect_table[parsx_expect_state_ - 1]);
	} else if ( parsx_expect_state_ >= 153 ){
		parsx_expect_type* expect_id = &parsx_expect_table[parsx_expect_translation[parsx_expect_state_]];
		size_t parsx_n_expects = parsx_expect_translation_n[parsx_expect_state_];
		while ( parsx_n_expects-- ){ parsx_expect(*expect_id); expect_id++; }
	}
parsx_expected_func_end()
#endif
